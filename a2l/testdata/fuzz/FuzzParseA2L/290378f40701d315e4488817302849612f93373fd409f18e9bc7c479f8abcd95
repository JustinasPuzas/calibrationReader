go test fuzz v1
string("\ufeffASAP2_VERSION 1 71\r\nA2ML_VERSION 1 31\r\n/begin PROJECT ASAP2_Example \"\"\r\n\r\n  /begin HEADER \"ASAP2 Example File\"\r\n    VERSION \"V1.7.1\"\r\n    PROJECT_NO P2016_09_AE_MCD_2MC_BS_V1_7_1_main\r\n  /end HEADER\r\n\r\n  /begin MODULE Example \"\"\r\n\r\n    /begin A2ML\r\n\r\n      block \"IF_DATA\" taggedunion if_data {\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  ASAM XCP AML                                                                                    */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n        \"XCP\" struct {\r\n          taggedstruct {\r\n            block \"PROTOCOL_LAYER\" struct {\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uchar;\r\n              uint;\r\n              enum {\r\n                \"BYTE_ORDER_MSB_LAST\" = 0,\r\n                \"BYTE_ORDER_MSB_FIRST\" = 1\r\n              };\r\n              enum {\r\n                \"ADDRESS_GRANULARITY_BYTE\" = 1,\r\n                \"ADDRESS_GRANULARITY_WORD\" = 2,\r\n                \"ADDRESS_GRANULARITY_DWORD\" = 4\r\n              };\r\n              taggedstruct {\r\n                (\"OPTIONAL_CMD\" enum {\r\n                  \"GET_COMM_MODE_INFO\" = 251,\r\n                  \"GET_ID\" = 250,\r\n                  \"SET_REQUEST\" = 249,\r\n                  \"GET_SEED\" = 248,\r\n                  \"UNLOCK\" = 247,\r\n                  \"SET_MTA\" = 246,\r\n                  \"UPLOAD\" = 245,\r\n                  \"SHORT_UPLOAD\" = 244,\r\n                  \"BUILD_CHECKSUM\" = 243,\r\n                  \"TRANSPORT_LAYER_CMD\" = 242,\r\n                  \"USER_CMD\" = 241,\r\n                  \"DOWNLOAD\" = 240,\r\n                  \"DOWNLOAD_NEXT\" = 239,\r\n                  \"DOWNLOAD_MAX\" = 238,\r\n                  \"SHORT_DOWNLOAD\" = 237,\r\n                  \"MODIFY_BITS\" = 236,\r\n                  \"SET_CAL_PAGE\" = 235,\r\n                  \"GET_CAL_PAGE\" = 234,\r\n                  \"GET_PAG_PROCESSOR_INFO\" = 233,\r\n                  \"GET_SEGMENT_INFO\" = 232,\r\n                  \"GET_PAGE_INFO\" = 231,\r\n                  \"SET_SEGMENT_MODE\" = 230,\r\n                  \"GET_SEGMENT_MODE\" = 229,\r\n                  \"COPY_CAL_PAGE\" = 228,\r\n                  \"CLEAR_DAQ_LIST\" = 227,\r\n                  \"SET_DAQ_PTR\" = 226,\r\n                  \"WRITE_DAQ\" = 225,\r\n                  \"SET_DAQ_LIST_MODE\" = 224,\r\n                  \"GET_DAQ_LIST_MODE\" = 223,\r\n                  \"START_STOP_DAQ_LIST\" = 222,\r\n                  \"START_STOP_SYNCH\" = 221,\r\n                  \"GET_DAQ_CLOCK\" = 220,\r\n                  \"READ_DAQ\" = 219,\r\n                  \"GET_DAQ_PROCESSOR_INFO\" = 218,\r\n                  \"GET_DAQ_RESOLUTION_INFO\" = 217,\r\n                  \"GET_DAQ_LIST_INFO\" = 216,\r\n                  \"GET_DAQ_EVENT_INFO\" = 215,\r\n                  \"FREE_DAQ\" = 214,\r\n                  \"ALLOC_DAQ\" = 213,\r\n                  \"ALLOC_ODT\" = 212,\r\n                  \"ALLOC_ODT_ENTRY\" = 211,\r\n                  \"PROGRAM_START\" = 210,\r\n                  \"PROGRAM_CLEAR\" = 209,\r\n                  \"PROGRAM\" = 208,\r\n                  \"PROGRAM_RESET\" = 207,\r\n                  \"GET_PGM_PROCESSOR_INFO\" = 206,\r\n                  \"GET_SECTOR_INFO\" = 205,\r\n                  \"PROGRAM_PREPARE\" = 204,\r\n                  \"PROGRAM_FORMAT\" = 203,\r\n                  \"PROGRAM_NEXT\" = 202,\r\n                  \"PROGRAM_MAX\" = 201,\r\n                  \"PROGRAM_VERIFY\" = 200\r\n                })*;\r\n                \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                  \"BLOCK\" taggedstruct {\r\n                    \"SLAVE\" ;\r\n                    \"MASTER\" struct {\r\n                      uchar;\r\n                      uchar;\r\n                    };\r\n                  };\r\n                  \"INTERLEAVED\" uchar;\r\n                };\r\n                \"SEED_AND_KEY_EXTERNAL_FUNCTION\" char[256];\r\n              };\r\n            };\r\n            block \"SEGMENT\" struct {\r\n              uchar;\r\n              uchar;\r\n              uchar;\r\n              uchar;\r\n              uchar;\r\n              taggedstruct {\r\n                block \"CHECKSUM\" struct {\r\n                  enum {\r\n                    \"XCP_ADD_11\" = 1,\r\n                    \"XCP_ADD_12\" = 2,\r\n                    \"XCP_ADD_14\" = 3,\r\n                    \"XCP_ADD_22\" = 4,\r\n                    \"XCP_ADD_24\" = 5,\r\n                    \"XCP_ADD_44\" = 6,\r\n                    \"XCP_CRC_16\" = 7,\r\n                    \"XCP_CRC_16_CITT\" = 8,\r\n                    \"XCP_CRC_32\" = 9,\r\n                    \"XCP_USER_DEFINED\" = 255\r\n                  };\r\n                  taggedstruct {\r\n                    \"MAX_BLOCK_SIZE\" ulong;\r\n                    \"EXTERNAL_FUNCTION\" char[256];\r\n                  };\r\n                };\r\n                (block \"PAGE\" struct {\r\n                  uchar;\r\n                  enum {\r\n                    \"ECU_ACCESS_NOT_ALLOWED\" = 0,\r\n                    \"ECU_ACCESS_WITHOUT_XCP_ONLY\" = 1,\r\n                    \"ECU_ACCESS_WITH_XCP_ONLY\" = 2,\r\n                    \"ECU_ACCESS_DONT_CARE\" = 3\r\n                  };\r\n                  enum {\r\n                    \"XCP_READ_ACCESS_NOT_ALLOWED\" = 0,\r\n                    \"XCP_READ_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                    \"XCP_READ_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                    \"XCP_READ_ACCESS_DONT_CARE\" = 3\r\n                  };\r\n                  enum {\r\n                    \"XCP_WRITE_ACCESS_NOT_ALLOWED\" = 0,\r\n                    \"XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                    \"XCP_WRITE_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                    \"XCP_WRITE_ACCESS_DONT_CARE\" = 3\r\n                  };\r\n                  taggedstruct {\r\n                    \"INIT_SEGMENT\" uchar;\r\n                  };\r\n                })*;\r\n                (block \"ADDRESS_MAPPING\" struct {\r\n                  ulong;\r\n                  ulong;\r\n                  ulong;\r\n                })*;\r\n                \"PGM_VERIFY\" ulong;\r\n              };\r\n            };\r\n            block \"DAQ\" struct {\r\n              enum {\r\n                \"STATIC\" = 0,\r\n                \"DYNAMIC\" = 1\r\n              };\r\n              uint;\r\n              uint;\r\n              uchar;\r\n              enum {\r\n                \"OPTIMISATION_TYPE_DEFAULT\" = 0,\r\n                \"OPTIMISATION_TYPE_ODT_TYPE_16\" = 1,\r\n                \"OPTIMISATION_TYPE_ODT_TYPE_32\" = 2,\r\n                \"OPTIMISATION_TYPE_ODT_TYPE_64\" = 3,\r\n                \"OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT\" = 4,\r\n                \"OPTIMISATION_TYPE_MAX_ENTRY_SIZE\" = 5\r\n              };\r\n              enum {\r\n                \"ADDRESS_EXTENSION_FREE\" = 0,\r\n                \"ADDRESS_EXTENSION_ODT\" = 1,\r\n                \"ADDRESS_EXTENSION_DAQ\" = 3\r\n              };\r\n              enum {\r\n                \"IDENTIFICATION_FIELD_TYPE_ABSOLUTE\" = 0,\r\n                \"IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE\" = 1,\r\n                \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD\" = 2,\r\n                \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED\" = 3\r\n              };\r\n              enum {\r\n                \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE\" = 1,\r\n                \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD\" = 2,\r\n                \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD\" = 4,\r\n                \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG\" = 8\r\n              };\r\n              uchar;\r\n              enum {\r\n                \"NO_OVERLOAD_INDICATION\" = 0,\r\n                \"OVERLOAD_INDICATION_PID\" = 1,\r\n                \"OVERLOAD_INDICATION_EVENT\" = 2\r\n              };\r\n              taggedstruct {\r\n                \"PRESCALER_SUPPORTED\" ;\r\n                \"RESUME_SUPPORTED\" ;\r\n                block \"STIM\" struct {\r\n                  enum {\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE\" = 1,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD\" = 2,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD\" = 4,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG\" = 8\r\n                  };\r\n                  uchar;\r\n                  taggedstruct {\r\n                    \"BIT_STIM_SUPPORTED\" ;\r\n                  };\r\n                };\r\n                block \"TIMESTAMP_SUPPORTED\" struct {\r\n                  uint;\r\n                  enum {\r\n                    \"NO_TIME_STAMP\" = 0,\r\n                    \"SIZE_BYTE\" = 1,\r\n                    \"SIZE_WORD\" = 2,\r\n                    \"SIZE_DWORD\" = 4\r\n                  };\r\n                  enum {\r\n                    \"UNIT_1NS\" = 0,\r\n                    \"UNIT_10NS\" = 1,\r\n                    \"UNIT_100NS\" = 2,\r\n                    \"UNIT_1US\" = 3,\r\n                    \"UNIT_10US\" = 4,\r\n                    \"UNIT_100US\" = 5,\r\n                    \"UNIT_1MS\" = 6,\r\n                    \"UNIT_10MS\" = 7,\r\n                    \"UNIT_100MS\" = 8,\r\n                    \"UNIT_1S\" = 9\r\n                  };\r\n                  taggedstruct {\r\n                    \"TIMESTAMP_FIXED\" ;\r\n                  };\r\n                };\r\n                \"PID_OFF_SUPPORTED\" ;\r\n                (block \"DAQ_LIST\" struct {\r\n                  uint;\r\n                  taggedstruct {\r\n                    \"DAQ_LIST_TYPE\" enum {\r\n                      \"DAQ\" = 1,\r\n                      \"STIM\" = 2,\r\n                      \"DAQ_STIM\" = 3\r\n                    };\r\n                    \"MAX_ODT\" uchar;\r\n                    \"MAX_ODT_ENTRIES\" uchar;\r\n                    \"FIRST_PID\" uchar;\r\n                    \"EVENT_FIXED\" uint;\r\n                    block \"PREDEFINED\" taggedstruct {\r\n                      (block \"ODT\" struct {\r\n                        uchar;\r\n                        taggedstruct {\r\n                          (\"ODT_ENTRY\" struct {\r\n                            uchar;\r\n                            ulong;\r\n                            uchar;\r\n                            uchar;\r\n                            uchar;\r\n                          })*;\r\n                        };\r\n                      })*;\r\n                    };\r\n                  };\r\n                })*;\r\n                (block \"EVENT\" struct {\r\n                  char[101];\r\n                  char[9];\r\n                  uint;\r\n                  enum {\r\n                    \"DAQ\" = 1,\r\n                    \"STIM\" = 2,\r\n                    \"DAQ_STIM\" = 3\r\n                  };\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                })*;\r\n              };\r\n            };\r\n            block \"PAG\" struct {\r\n              uchar;\r\n              taggedstruct {\r\n                \"FREEZE_SUPPORTED\" ;\r\n              };\r\n            };\r\n            block \"PGM\" struct {\r\n              enum {\r\n                \"PGM_MODE_ABSOLUTE\" = 1,\r\n                \"PGM_MODE_FUNCTIONAL\" = 2,\r\n                \"PGM_MODE_ABSOLUTE_AND_FUNCTIONAL\" = 3\r\n              };\r\n              uchar;\r\n              uchar;\r\n              taggedstruct {\r\n                (block \"SECTOR\" struct {\r\n                  char[101];\r\n                  uchar;\r\n                  ulong;\r\n                  ulong;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                })*;\r\n                \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                  \"BLOCK\" taggedstruct {\r\n                    \"SLAVE\" ;\r\n                    \"MASTER\" struct {\r\n                      uchar;\r\n                      uchar;\r\n                    };\r\n                  };\r\n                  \"INTERLEAVED\" uchar;\r\n                };\r\n              };\r\n            };\r\n            block \"DAQ_EVENT\" taggedunion {\r\n              \"FIXED_EVENT_LIST\" taggedstruct {\r\n                (\"EVENT\" uint)*;\r\n              };\r\n              \"VARIABLE\" taggedstruct {\r\n                block \"AVAILABLE_EVENT_LIST\" taggedstruct {\r\n                  (\"EVENT\" uint)*;\r\n                };\r\n                block \"DEFAULT_EVENT_LIST\" taggedstruct {\r\n                  (\"EVENT\" uint)*;\r\n                };\r\n              };\r\n            };\r\n            block \"XCP_ON_CAN\" struct {\r\n              uint;\r\n              taggedstruct {\r\n                \"CAN_ID_BROADCAST\" ulong;\r\n                \"CAN_ID_MASTER\" ulong;\r\n                \"CAN_ID_SLAVE\" ulong;\r\n                \"BAUDRATE\" ulong;\r\n                \"SAMPLE_POINT\" uchar;\r\n                \"SAMPLE_RATE\" enum {\r\n                  \"SINGLE\" = 1,\r\n                  \"TRIPLE\" = 3\r\n                };\r\n                \"BTL_CYCLES\" uchar;\r\n                \"SJW\" uchar;\r\n                \"SYNC_EDGE\" enum {\r\n                  \"SINGLE\" = 1,\r\n                  \"DUAL\" = 2\r\n                };\r\n                \"MAX_DLC_REQUIRED\" ;\r\n                (block \"DAQ_LIST_CAN_ID\" struct {\r\n                  uint;\r\n                  taggedstruct {\r\n                    \"VARIABLE\" ;\r\n                    \"FIXED\" ulong;\r\n                  };\r\n                })*;\r\n                block \"PROTOCOL_LAYER\" struct {\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  uint;\r\n                  enum {\r\n                    \"BYTE_ORDER_MSB_LAST\" = 0,\r\n                    \"BYTE_ORDER_MSB_FIRST\" = 1\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_GRANULARITY_BYTE\" = 1,\r\n                    \"ADDRESS_GRANULARITY_WORD\" = 2,\r\n                    \"ADDRESS_GRANULARITY_DWORD\" = 4\r\n                  };\r\n                  taggedstruct {\r\n                    (\"OPTIONAL_CMD\" enum {\r\n                      \"GET_COMM_MODE_INFO\" = 251,\r\n                      \"GET_ID\" = 250,\r\n                      \"SET_REQUEST\" = 249,\r\n                      \"GET_SEED\" = 248,\r\n                      \"UNLOCK\" = 247,\r\n                      \"SET_MTA\" = 246,\r\n                      \"UPLOAD\" = 245,\r\n                      \"SHORT_UPLOAD\" = 244,\r\n                      \"BUILD_CHECKSUM\" = 243,\r\n                      \"TRANSPORT_LAYER_CMD\" = 242,\r\n                      \"USER_CMD\" = 241,\r\n                      \"DOWNLOAD\" = 240,\r\n                      \"DOWNLOAD_NEXT\" = 239,\r\n                      \"DOWNLOAD_MAX\" = 238,\r\n                      \"SHORT_DOWNLOAD\" = 237,\r\n                      \"MODIFY_BITS\" = 236,\r\n                      \"SET_CAL_PAGE\" = 235,\r\n                      \"GET_CAL_PAGE\" = 234,\r\n                      \"GET_PAG_PROCESSOR_INFO\" = 233,\r\n                      \"GET_SEGMENT_INFO\" = 232,\r\n                      \"GET_PAGE_INFO\" = 231,\r\n                      \"SET_SEGMENT_MODE\" = 230,\r\n                      \"GET_SEGMENT_MODE\" = 229,\r\n                      \"COPY_CAL_PAGE\" = 228,\r\n                      \"CLEAR_DAQ_LIST\" = 227,\r\n                      \"SET_DAQ_PTR\" = 226,\r\n                      \"WRITE_DAQ\" = 225,\r\n                      \"SET_DAQ_LIST_MODE\" = 224,\r\n                      \"GET_DAQ_LIST_MODE\" = 223,\r\n                      \"START_STOP_DAQ_LIST\" = 222,\r\n                      \"START_STOP_SYNCH\" = 221,\r\n                      \"GET_DAQ_CLOCK\" = 220,\r\n                      \"READ_DAQ\" = 219,\r\n                      \"GET_DAQ_PROCESSOR_INFO\" = 218,\r\n                      \"GET_DAQ_RESOLUTION_INFO\" = 217,\r\n                      \"GET_DAQ_LIST_INFO\" = 216,\r\n                      \"GET_DAQ_EVENT_INFO\" = 215,\r\n                      \"FREE_DAQ\" = 214,\r\n                      \"ALLOC_DAQ\" = 213,\r\n                      \"ALLOC_ODT\" = 212,\r\n                      \"ALLOC_ODT_ENTRY\" = 211,\r\n                      \"PROGRAM_START\" = 210,\r\n                      \"PROGRAM_CLEAR\" = 209,\r\n                      \"PROGRAM\" = 208,\r\n                      \"PROGRAM_RESET\" = 207,\r\n                      \"GET_PGM_PROCESSOR_INFO\" = 206,\r\n                      \"GET_SECTOR_INFO\" = 205,\r\n                      \"PROGRAM_PREPARE\" = 204,\r\n                      \"PROGRAM_FORMAT\" = 203,\r\n                      \"PROGRAM_NEXT\" = 202,\r\n                      \"PROGRAM_MAX\" = 201,\r\n                      \"PROGRAM_VERIFY\" = 200\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                    \"SEED_AND_KEY_EXTERNAL_FUNCTION\" char[256];\r\n                  };\r\n                };\r\n                block \"SEGMENT\" struct {\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    block \"CHECKSUM\" struct {\r\n                      enum {\r\n                        \"XCP_ADD_11\" = 1,\r\n                        \"XCP_ADD_12\" = 2,\r\n                        \"XCP_ADD_14\" = 3,\r\n                        \"XCP_ADD_22\" = 4,\r\n                        \"XCP_ADD_24\" = 5,\r\n                        \"XCP_ADD_44\" = 6,\r\n                        \"XCP_CRC_16\" = 7,\r\n                        \"XCP_CRC_16_CITT\" = 8,\r\n                        \"XCP_CRC_32\" = 9,\r\n                        \"XCP_USER_DEFINED\" = 255\r\n                      };\r\n                      taggedstruct {\r\n                        \"MAX_BLOCK_SIZE\" ulong;\r\n                        \"EXTERNAL_FUNCTION\" char[256];\r\n                      };\r\n                    };\r\n                    (block \"PAGE\" struct {\r\n                      uchar;\r\n                      enum {\r\n                        \"ECU_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"ECU_ACCESS_WITHOUT_XCP_ONLY\" = 1,\r\n                        \"ECU_ACCESS_WITH_XCP_ONLY\" = 2,\r\n                        \"ECU_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_READ_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_READ_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_READ_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_READ_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_WRITE_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_WRITE_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_WRITE_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      taggedstruct {\r\n                        \"INIT_SEGMENT\" uchar;\r\n                      };\r\n                    })*;\r\n                    (block \"ADDRESS_MAPPING\" struct {\r\n                      ulong;\r\n                      ulong;\r\n                      ulong;\r\n                    })*;\r\n                    \"PGM_VERIFY\" ulong;\r\n                  };\r\n                };\r\n                block \"DAQ\" struct {\r\n                  enum {\r\n                    \"STATIC\" = 0,\r\n                    \"DYNAMIC\" = 1\r\n                  };\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"OPTIMISATION_TYPE_DEFAULT\" = 0,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_16\" = 1,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_32\" = 2,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_64\" = 3,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT\" = 4,\r\n                    \"OPTIMISATION_TYPE_MAX_ENTRY_SIZE\" = 5\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_EXTENSION_FREE\" = 0,\r\n                    \"ADDRESS_EXTENSION_ODT\" = 1,\r\n                    \"ADDRESS_EXTENSION_DAQ\" = 3\r\n                  };\r\n                  enum {\r\n                    \"IDENTIFICATION_FIELD_TYPE_ABSOLUTE\" = 0,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE\" = 1,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD\" = 2,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED\" = 3\r\n                  };\r\n                  enum {\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE\" = 1,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD\" = 2,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD\" = 4,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG\" = 8\r\n                  };\r\n                  uchar;\r\n                  enum {\r\n                    \"NO_OVERLOAD_INDICATION\" = 0,\r\n                    \"OVERLOAD_INDICATION_PID\" = 1,\r\n                    \"OVERLOAD_INDICATION_EVENT\" = 2\r\n                  };\r\n                  taggedstruct {\r\n                    \"PRESCALER_SUPPORTED\" ;\r\n                    \"RESUME_SUPPORTED\" ;\r\n                    block \"STIM\" struct {\r\n                      enum {\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE\" = 1,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD\" = 2,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD\" = 4,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG\" = 8\r\n                      };\r\n                      uchar;\r\n                      taggedstruct {\r\n                        \"BIT_STIM_SUPPORTED\" ;\r\n                      };\r\n                    };\r\n                    block \"TIMESTAMP_SUPPORTED\" struct {\r\n                      uint;\r\n                      enum {\r\n                        \"NO_TIME_STAMP\" = 0,\r\n                        \"SIZE_BYTE\" = 1,\r\n                        \"SIZE_WORD\" = 2,\r\n                        \"SIZE_DWORD\" = 4\r\n                      };\r\n                      enum {\r\n                        \"UNIT_1NS\" = 0,\r\n                        \"UNIT_10NS\" = 1,\r\n                        \"UNIT_100NS\" = 2,\r\n                        \"UNIT_1US\" = 3,\r\n                        \"UNIT_10US\" = 4,\r\n                        \"UNIT_100US\" = 5,\r\n                        \"UNIT_1MS\" = 6,\r\n                        \"UNIT_10MS\" = 7,\r\n                        \"UNIT_100MS\" = 8,\r\n                        \"UNIT_1S\" = 9\r\n                      };\r\n                      taggedstruct {\r\n                        \"TIMESTAMP_FIXED\" ;\r\n                      };\r\n                    };\r\n                    \"PID_OFF_SUPPORTED\" ;\r\n                    (block \"DAQ_LIST\" struct {\r\n                      uint;\r\n                      taggedstruct {\r\n                        \"DAQ_LIST_TYPE\" enum {\r\n                          \"DAQ\" = 1,\r\n                          \"STIM\" = 2,\r\n                          \"DAQ_STIM\" = 3\r\n                        };\r\n                        \"MAX_ODT\" uchar;\r\n                        \"MAX_ODT_ENTRIES\" uchar;\r\n                        \"FIRST_PID\" uchar;\r\n                        \"EVENT_FIXED\" uint;\r\n                        block \"PREDEFINED\" taggedstruct {\r\n                          (block \"ODT\" struct {\r\n                            uchar;\r\n                            taggedstruct {\r\n                              (\"ODT_ENTRY\" struct {\r\n                                uchar;\r\n                                ulong;\r\n                                uchar;\r\n                                uchar;\r\n                                uchar;\r\n                              })*;\r\n                            };\r\n                          })*;\r\n                        };\r\n                      };\r\n                    })*;\r\n                    (block \"EVENT\" struct {\r\n                      char[101];\r\n                      char[9];\r\n                      uint;\r\n                      enum {\r\n                        \"DAQ\" = 1,\r\n                        \"STIM\" = 2,\r\n                        \"DAQ_STIM\" = 3\r\n                      };\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                  };\r\n                };\r\n                block \"PAG\" struct {\r\n                  uchar;\r\n                  taggedstruct {\r\n                    \"FREEZE_SUPPORTED\" ;\r\n                  };\r\n                };\r\n                block \"PGM\" struct {\r\n                  enum {\r\n                    \"PGM_MODE_ABSOLUTE\" = 1,\r\n                    \"PGM_MODE_FUNCTIONAL\" = 2,\r\n                    \"PGM_MODE_ABSOLUTE_AND_FUNCTIONAL\" = 3\r\n                  };\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    (block \"SECTOR\" struct {\r\n                      char[101];\r\n                      uchar;\r\n                      ulong;\r\n                      ulong;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                  };\r\n                };\r\n                block \"DAQ_EVENT\" taggedunion {\r\n                  \"FIXED_EVENT_LIST\" taggedstruct {\r\n                    (\"EVENT\" uint)*;\r\n                  };\r\n                  \"VARIABLE\" taggedstruct {\r\n                    block \"AVAILABLE_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                    block \"DEFAULT_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                  };\r\n                };\r\n              };\r\n            };\r\n            block \"XCP_ON_SxI\" struct {\r\n              uint;\r\n              ulong;\r\n              taggedstruct {\r\n                \"ASYNCH_FULL_DUPLEX_MODE\" struct {\r\n                  enum {\r\n                    \"PARITY_NONE\" = 0,\r\n                    \"PARITY_ODD\" = 1,\r\n                    \"PARITY_EVEN\" = 2\r\n                  };\r\n                  enum {\r\n                    \"ONE_STOP_BIT\" = 1,\r\n                    \"TWO_STOP_BITS\" = 2\r\n                  };\r\n                };\r\n                \"SYNCH_FULL_DUPLEX_MODE_BYTE\" ;\r\n                \"SYNCH_FULL_DUPLEX_MODE_WORD\" ;\r\n                \"SYNCH_FULL_DUPLEX_MODE_DWORD\" ;\r\n                \"SYNCH_MASTER_SLAVE_MODE_BYTE\" ;\r\n                \"SYNCH_MASTER_SLAVE_MODE_WORD\" ;\r\n                \"SYNCH_MASTER_SLAVE_MODE_DWORD\" ;\r\n              };\r\n              enum {\r\n                \"HEADER_LEN_BYTE\" = 0,\r\n                \"HEADER_LEN_CTR_BYTE\" = 1,\r\n                \"HEADER_LEN_WORD\" = 2,\r\n                \"HEADER_LEN_CTR_WORD\" = 3\r\n              };\r\n              enum {\r\n                \"NO_CHECKSUM\" = 0,\r\n                \"CHECKSUM_BYTE\" = 1,\r\n                \"CHECKSUM_WORD\" = 2\r\n              };\r\n              taggedstruct {\r\n                block \"PROTOCOL_LAYER\" struct {\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  uint;\r\n                  enum {\r\n                    \"BYTE_ORDER_MSB_LAST\" = 0,\r\n                    \"BYTE_ORDER_MSB_FIRST\" = 1\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_GRANULARITY_BYTE\" = 1,\r\n                    \"ADDRESS_GRANULARITY_WORD\" = 2,\r\n                    \"ADDRESS_GRANULARITY_DWORD\" = 4\r\n                  };\r\n                  taggedstruct {\r\n                    (\"OPTIONAL_CMD\" enum {\r\n                      \"GET_COMM_MODE_INFO\" = 251,\r\n                      \"GET_ID\" = 250,\r\n                      \"SET_REQUEST\" = 249,\r\n                      \"GET_SEED\" = 248,\r\n                      \"UNLOCK\" = 247,\r\n                      \"SET_MTA\" = 246,\r\n                      \"UPLOAD\" = 245,\r\n                      \"SHORT_UPLOAD\" = 244,\r\n                      \"BUILD_CHECKSUM\" = 243,\r\n                      \"TRANSPORT_LAYER_CMD\" = 242,\r\n                      \"USER_CMD\" = 241,\r\n                      \"DOWNLOAD\" = 240,\r\n                      \"DOWNLOAD_NEXT\" = 239,\r\n                      \"DOWNLOAD_MAX\" = 238,\r\n                      \"SHORT_DOWNLOAD\" = 237,\r\n                      \"MODIFY_BITS\" = 236,\r\n                      \"SET_CAL_PAGE\" = 235,\r\n                      \"GET_CAL_PAGE\" = 234,\r\n                      \"GET_PAG_PROCESSOR_INFO\" = 233,\r\n                      \"GET_SEGMENT_INFO\" = 232,\r\n                      \"GET_PAGE_INFO\" = 231,\r\n                      \"SET_SEGMENT_MODE\" = 230,\r\n                      \"GET_SEGMENT_MODE\" = 229,\r\n                      \"COPY_CAL_PAGE\" = 228,\r\n                      \"CLEAR_DAQ_LIST\" = 227,\r\n                      \"SET_DAQ_PTR\" = 226,\r\n                      \"WRITE_DAQ\" = 225,\r\n                      \"SET_DAQ_LIST_MODE\" = 224,\r\n                      \"GET_DAQ_LIST_MODE\" = 223,\r\n                      \"START_STOP_DAQ_LIST\" = 222,\r\n                      \"START_STOP_SYNCH\" = 221,\r\n                      \"GET_DAQ_CLOCK\" = 220,\r\n                      \"READ_DAQ\" = 219,\r\n                      \"GET_DAQ_PROCESSOR_INFO\" = 218,\r\n                      \"GET_DAQ_RESOLUTION_INFO\" = 217,\r\n                      \"GET_DAQ_LIST_INFO\" = 216,\r\n                      \"GET_DAQ_EVENT_INFO\" = 215,\r\n                      \"FREE_DAQ\" = 214,\r\n                      \"ALLOC_DAQ\" = 213,\r\n                      \"ALLOC_ODT\" = 212,\r\n                      \"ALLOC_ODT_ENTRY\" = 211,\r\n                      \"PROGRAM_START\" = 210,\r\n                      \"PROGRAM_CLEAR\" = 209,\r\n                      \"PROGRAM\" = 208,\r\n                      \"PROGRAM_RESET\" = 207,\r\n                      \"GET_PGM_PROCESSOR_INFO\" = 206,\r\n                      \"GET_SECTOR_INFO\" = 205,\r\n                      \"PROGRAM_PREPARE\" = 204,\r\n                      \"PROGRAM_FORMAT\" = 203,\r\n                      \"PROGRAM_NEXT\" = 202,\r\n                      \"PROGRAM_MAX\" = 201,\r\n                      \"PROGRAM_VERIFY\" = 200\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                    \"SEED_AND_KEY_EXTERNAL_FUNCTION\" char[256];\r\n                  };\r\n                };\r\n                block \"SEGMENT\" struct {\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    block \"CHECKSUM\" struct {\r\n                      enum {\r\n                        \"XCP_ADD_11\" = 1,\r\n                        \"XCP_ADD_12\" = 2,\r\n                        \"XCP_ADD_14\" = 3,\r\n                        \"XCP_ADD_22\" = 4,\r\n                        \"XCP_ADD_24\" = 5,\r\n                        \"XCP_ADD_44\" = 6,\r\n                        \"XCP_CRC_16\" = 7,\r\n                        \"XCP_CRC_16_CITT\" = 8,\r\n                        \"XCP_CRC_32\" = 9,\r\n                        \"XCP_USER_DEFINED\" = 255\r\n                      };\r\n                      taggedstruct {\r\n                        \"MAX_BLOCK_SIZE\" ulong;\r\n                        \"EXTERNAL_FUNCTION\" char[256];\r\n                      };\r\n                    };\r\n                    (block \"PAGE\" struct {\r\n                      uchar;\r\n                      enum {\r\n                        \"ECU_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"ECU_ACCESS_WITHOUT_XCP_ONLY\" = 1,\r\n                        \"ECU_ACCESS_WITH_XCP_ONLY\" = 2,\r\n                        \"ECU_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_READ_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_READ_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_READ_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_READ_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_WRITE_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_WRITE_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_WRITE_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      taggedstruct {\r\n                        \"INIT_SEGMENT\" uchar;\r\n                      };\r\n                    })*;\r\n                    (block \"ADDRESS_MAPPING\" struct {\r\n                      ulong;\r\n                      ulong;\r\n                      ulong;\r\n                    })*;\r\n                    \"PGM_VERIFY\" ulong;\r\n                  };\r\n                };\r\n                block \"DAQ\" struct {\r\n                  enum {\r\n                    \"STATIC\" = 0,\r\n                    \"DYNAMIC\" = 1\r\n                  };\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"OPTIMISATION_TYPE_DEFAULT\" = 0,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_16\" = 1,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_32\" = 2,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_64\" = 3,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT\" = 4,\r\n                    \"OPTIMISATION_TYPE_MAX_ENTRY_SIZE\" = 5\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_EXTENSION_FREE\" = 0,\r\n                    \"ADDRESS_EXTENSION_ODT\" = 1,\r\n                    \"ADDRESS_EXTENSION_DAQ\" = 3\r\n                  };\r\n                  enum {\r\n                    \"IDENTIFICATION_FIELD_TYPE_ABSOLUTE\" = 0,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE\" = 1,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD\" = 2,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED\" = 3\r\n                  };\r\n                  enum {\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE\" = 1,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD\" = 2,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD\" = 4,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG\" = 8\r\n                  };\r\n                  uchar;\r\n                  enum {\r\n                    \"NO_OVERLOAD_INDICATION\" = 0,\r\n                    \"OVERLOAD_INDICATION_PID\" = 1,\r\n                    \"OVERLOAD_INDICATION_EVENT\" = 2\r\n                  };\r\n                  taggedstruct {\r\n                    \"PRESCALER_SUPPORTED\" ;\r\n                    \"RESUME_SUPPORTED\" ;\r\n                    block \"STIM\" struct {\r\n                      enum {\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE\" = 1,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD\" = 2,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD\" = 4,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG\" = 8\r\n                      };\r\n                      uchar;\r\n                      taggedstruct {\r\n                        \"BIT_STIM_SUPPORTED\" ;\r\n                      };\r\n                    };\r\n                    block \"TIMESTAMP_SUPPORTED\" struct {\r\n                      uint;\r\n                      enum {\r\n                        \"NO_TIME_STAMP\" = 0,\r\n                        \"SIZE_BYTE\" = 1,\r\n                        \"SIZE_WORD\" = 2,\r\n                        \"SIZE_DWORD\" = 4\r\n                      };\r\n                      enum {\r\n                        \"UNIT_1NS\" = 0,\r\n                        \"UNIT_10NS\" = 1,\r\n                        \"UNIT_100NS\" = 2,\r\n                        \"UNIT_1US\" = 3,\r\n                        \"UNIT_10US\" = 4,\r\n                        \"UNIT_100US\" = 5,\r\n                        \"UNIT_1MS\" = 6,\r\n                        \"UNIT_10MS\" = 7,\r\n                        \"UNIT_100MS\" = 8,\r\n                        \"UNIT_1S\" = 9\r\n                      };\r\n                      taggedstruct {\r\n                        \"TIMESTAMP_FIXED\" ;\r\n                      };\r\n                    };\r\n                    \"PID_OFF_SUPPORTED\" ;\r\n                    (block \"DAQ_LIST\" struct {\r\n                      uint;\r\n                      taggedstruct {\r\n                        \"DAQ_LIST_TYPE\" enum {\r\n                          \"DAQ\" = 1,\r\n                          \"STIM\" = 2,\r\n                          \"DAQ_STIM\" = 3\r\n                        };\r\n                        \"MAX_ODT\" uchar;\r\n                        \"MAX_ODT_ENTRIES\" uchar;\r\n                        \"FIRST_PID\" uchar;\r\n                        \"EVENT_FIXED\" uint;\r\n                        block \"PREDEFINED\" taggedstruct {\r\n                          (block \"ODT\" struct {\r\n                            uchar;\r\n                            taggedstruct {\r\n                              (\"ODT_ENTRY\" struct {\r\n                                uchar;\r\n                                ulong;\r\n                                uchar;\r\n                                uchar;\r\n                                uchar;\r\n                              })*;\r\n                            };\r\n                          })*;\r\n                        };\r\n                      };\r\n                    })*;\r\n                    (block \"EVENT\" struct {\r\n                      char[101];\r\n                      char[9];\r\n                      uint;\r\n                      enum {\r\n                        \"DAQ\" = 1,\r\n                        \"STIM\" = 2,\r\n                        \"DAQ_STIM\" = 3\r\n                      };\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                  };\r\n                };\r\n                block \"PAG\" struct {\r\n                  uchar;\r\n                  taggedstruct {\r\n                    \"FREEZE_SUPPORTED\" ;\r\n                  };\r\n                };\r\n                block \"PGM\" struct {\r\n                  enum {\r\n                    \"PGM_MODE_ABSOLUTE\" = 1,\r\n                    \"PGM_MODE_FUNCTIONAL\" = 2,\r\n                    \"PGM_MODE_ABSOLUTE_AND_FUNCTIONAL\" = 3\r\n                  };\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    (block \"SECTOR\" struct {\r\n                      char[101];\r\n                      uchar;\r\n                      ulong;\r\n                      ulong;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                  };\r\n                };\r\n                block \"DAQ_EVENT\" taggedunion {\r\n                  \"FIXED_EVENT_LIST\" taggedstruct {\r\n                    (\"EVENT\" uint)*;\r\n                  };\r\n                  \"VARIABLE\" taggedstruct {\r\n                    block \"AVAILABLE_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                    block \"DEFAULT_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                  };\r\n                };\r\n              };\r\n            };\r\n            block \"XCP_ON_TCP_IP\" struct {\r\n              uint;\r\n              uint;\r\n              taggedunion {\r\n                \"HOST_NAME\" char[256];\r\n                \"ADDRESS\" char[15];\r\n              };\r\n              taggedstruct {7,\r\n              block \"PROTOCOL_LAYER\" struct {\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  uint;\r\n                  enum {\r\n                    \"BYTE_ORDER_MSB_LAST\" = 0,\r\n                    \"BYTE_ORDER_MSB_FIRST\" = 1\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_GRANULARITY_BYTE\" = 1,\r\n                    \"ADDRESS_GRANULARITY_WORD\" = 2,\r\n                    \"ADDRESS_GRANULARITY_DWORD\" = 4\r\n                  };\r\n                  taggedstruct {\r\n                    (\"OPTIONAL_CMD\" enum {\r\n                      \"GET_COMM_MODE_INFO\" = 251,\r\n                      \"GET_ID\" = 250,\r\n                      \"SET_REQUEST\" = 249,\r\n                      \"GET_SEED\" = 248,\r\n                      \"UNLOCK\" = 247,\r\n                      \"SET_MTA\" = 246,\r\n                      \"UPLOAD\" = 245,\r\n                      \"SHORT_UPLOAD\" = 244,\r\n                      \"BUILD_CHECKSUM\" = 243,\r\n                      \"TRANSPORT_LAYER_CMD\" = 242,\r\n                      \"USER_CMD\" = 241,\r\n                      \"DOWNLOAD\" = 240,\r\n                      \"DOWNLOAD_NEXT\" = 239,\r\n                      \"DOWNLOAD_MAX\" = 238,\r\n                      \"SHORT_DOWNLOAD\" = 237,\r\n                      \"MODIFY_BITS\" = 236,\r\n                      \"SET_CAL_PAGE\" = 235,\r\n                      \"GET_CAL_PAGE\" = 234,\r\n                      \"GET_PAG_PROCESSOR_INFO\" = 233,\r\n                      \"GET_SEGMENT_INFO\" = 232,\r\n                      \"GET_PAGE_INFO\" = 231,\r\n                      \"SET_SEGMENT_MODE\" = 230,\r\n                      \"GET_SEGMENT_MODE\" = 229,\r\n                      \"COPY_CAL_PAGE\" = 228,\r\n                      \"CLEAR_DAQ_LIST\" = 227,\r\n                      \"SET_DAQ_PTR\" = 226,\r\n                      \"WRITE_DAQ\" = 225,\r\n                      \"SET_DAQ_LIST_MODE\" = 224,\r\n                      \"GET_DAQ_LIST_MODE\" = 223,\r\n                      \"START_STOP_DAQ_LIST\" = 222,\r\n                      \"START_STOP_SYNCH\" = 221,\r\n                      \"GET_DAQ_CLOCK\" = 220,\r\n                      \"READ_DAQ\" = 219,\r\n                      \"GET_DAQ_PROCESSOR_INFO\" = 218,\r\n                      \"GET_DAQ_RESOLUTION_INFO\" = 217,\r\n                      \"GET_DAQ_LIST_INFO\" = 216,\r\n                      \"GET_DAQ_EVENT_INFO\" = 215,\r\n                      \"FREE_DAQ\" = 214,\r\n                      \"ALLOC_DAQ\" = 213,\r\n                      \"ALLOC_ODT\" = 212,\r\n                      \"ALLOC_ODT_ENTRY\" = 211,\r\n                      \"PROGRAM_START\" = 210,\r\n                      \"PROGRAM_CLEAR\" = 209,\r\n                      \"PROGRAM\" = 208,\r\n                      \"PROGRAM_RESET\" = 207,\r\n                      \"GET_PGM_PROCESSOR_INFO\" = 206,\r\n                      \"GET_SECTOR_INFO\" = 205,\r\n                      \"PROGRAM_PREPARE\" = 204,\r\n                      \"PROGRAM_FORMAT\" = 203,\r\n                      \"PROGRAM_NEXT\" = 202,\r\n                      \"PROGRAM_MAX\" = 201,\r\n                      \"PROGRAM_VERIFY\" = 200\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                    \"SEED_AND_KEY_EXTERNAL_FUNCTION\" char[256];\r\n                  };\r\n                };\r\n                block \"SEGMENT\" struct {\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    block \"CHECKSUM\" struct {\r\n                      enum {\r\n                        \"XCP_ADD_11\" = 1,\r\n                        \"XCP_ADD_12\" = 2,\r\n                        \"XCP_ADD_14\" = 3,\r\n                        \"XCP_ADD_22\" = 4,\r\n                        \"XCP_ADD_24\" = 5,\r\n                        \"XCP_ADD_44\" = 6,\r\n                        \"XCP_CRC_16\" = 7,\r\n                        \"XCP_CRC_16_CITT\" = 8,\r\n                        \"XCP_CRC_32\" = 9,\r\n                        \"XCP_USER_DEFINED\" = 255\r\n                      };\r\n                      taggedstruct {\r\n                        \"MAX_BLOCK_SIZE\" ulong;\r\n                        \"EXTERNAL_FUNCTION\" char[256];\r\n                      };\r\n                    };\r\n                    (block \"PAGE\" struct {\r\n                      uchar;\r\n                      enum {\r\n                        \"ECU_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"ECU_ACCESS_WITHOUT_XCP_ONLY\" = 1,\r\n                        \"ECU_ACCESS_WITH_XCP_ONLY\" = 2,\r\n                        \"ECU_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_READ_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_READ_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_READ_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_READ_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_WRITE_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_WRITE_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_WRITE_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      taggedstruct {\r\n                        \"INIT_SEGMENT\" uchar;\r\n                      };\r\n                    })*;\r\n                    (block \"ADDRESS_MAPPING\" struct {\r\n                      ulong;\r\n                      ulong;\r\n                      ulong;\r\n                    })*;\r\n                    \"PGM_VERIFY\" ulong;\r\n                  };\r\n                };\r\n                block \"DAQ\" struct {\r\n                  enum {\r\n                    \"STATIC\" = 0,\r\n                    \"DYNAMIC\" = 1\r\n                  };\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"OPTIMISATION_TYPE_DEFAULT\" = 0,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_16\" = 1,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_32\" = 2,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_64\" = 3,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT\" = 4,\r\n                    \"OPTIMISATION_TYPE_MAX_ENTRY_SIZE\" = 5\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_EXTENSION_FREE\" = 0,\r\n                    \"ADDRESS_EXTENSION_ODT\" = 1,\r\n                    \"ADDRESS_EXTENSION_DAQ\" = 3\r\n                  };\r\n                  enum {\r\n                    \"IDENTIFICATION_FIELD_TYPE_ABSOLUTE\" = 0,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE\" = 1,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD\" = 2,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED\" = 3\r\n                  };\r\n                  enum {\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE\" = 1,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD\" = 2,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD\" = 4,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG\" = 8\r\n                  };\r\n                  uchar;\r\n                  enum {\r\n                    \"NO_OVERLOAD_INDICATION\" = 0,\r\n                    \"OVERLOAD_INDICATION_PID\" = 1,\r\n                    \"OVERLOAD_INDICATION_EVENT\" = 2\r\n                  };\r\n                  taggedstruct {\r\n                    \"PRESCALER_SUPPORTED\" ;\r\n                    \"RESUME_SUPPORTED\" ;\r\n                    block \"STIM\" struct {\r\n                      enum {\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE\" = 1,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD\" = 2,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD\" = 4,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG\" = 8\r\n                      };\r\n                      uchar;\r\n                      taggedstruct {\r\n                        \"BIT_STIM_SUPPORTED\" ;\r\n                      };\r\n                    };\r\n                    block \"TIMESTAMP_SUPPORTED\" struct {\r\n                      uint;\r\n                      enum {\r\n                        \"NO_TIME_STAMP\" = 0,\r\n                        \"SIZE_BYTE\" = 1,\r\n                        \"SIZE_WORD\" = 2,\r\n                        \"SIZE_DWORD\" = 4\r\n                      };\r\n                      enum {\r\n                        \"UNIT_1NS\" = 0,\r\n                        \"UNIT_10NS\" = 1,\r\n                        \"UNIT_100NS\" = 2,\r\n                        \"UNIT_1US\" = 3,\r\n                        \"UNIT_10US\" = 4,\r\n                        \"UNIT_100US\" = 5,\r\n                        \"UNIT_1MS\" = 6,\r\n                        \"UNIT_10MS\" = 7,\r\n                        \"UNIT_100MS\" = 8,\r\n                        \"UNIT_1S\" = 9\r\n                      };\r\n                      taggedstruct {\r\n                        \"TIMESTAMP_FIXED\" ;\r\n                      };\r\n                    };\r\n                    \"PID_OFF_SUPPORTED\" ;\r\n                    (block \"DAQ_LIST\" struct {\r\n                      uint;\r\n                      taggedstruct {\r\n                        \"DAQ_LIST_TYPE\" enum {\r\n                          \"DAQ\" = 1,\r\n                          \"STIM\" = 2,\r\n                          \"DAQ_STIM\" = 3\r\n                        };\r\n                        \"MAX_ODT\" uchar;\r\n                        \"MAX_ODT_ENTRIES\" uchar;\r\n                        \"FIRST_PID\" uchar;\r\n                        \"EVENT_FIXED\" uint;\r\n                        block \"PREDEFINED\" taggedstruct {\r\n                          (block \"ODT\" struct {\r\n                            uchar;\r\n                            taggedstruct {\r\n                              (\"ODT_ENTRY\" struct {\r\n                                uchar;\r\n                                ulong;\r\n                                uchar;\r\n                                uchar;\r\n                                uchar;\r\n                              })*;\r\n                            };\r\n                          })*;\r\n                        };\r\n                      };\r\n                    })*;\r\n                    (block \"EVENT\" struct {\r\n                      char[101];\r\n                      char[9];\r\n                      uint;\r\n                      enum {\r\n                        \"DAQ\" = 1,\r\n                        \"STIM\" = 2,\r\n                        \"DAQ_STIM\" = 3\r\n                      };\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                  };\r\n                };\r\n                block \"PAG\" struct {\r\n                  uchar;\r\n                  taggedstruct {\r\n                    \"FREEZE_SUPPORTED\" ;\r\n                  };\r\n                };\r\n                block \"PGM\" struct {\r\n                  enum {\r\n                    \"PGM_MODE_ABSOLUTE\" = 1,\r\n                    \"PGM_MODE_FUNCTIONAL\" = 2,\r\n                    \"PGM_MODE_ABSOLUTE_AND_FUNCTIONAL\" = 3\r\n                  };\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    (block \"SECTOR\" struct {\r\n                      char[101];\r\n                      uchar;\r\n                      ulong;\r\n                      ulong;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                  };\r\n                };\r\n                block \"DAQ_EVENT\" taggedunion {\r\n                  \"FIXED_EVENT_LIST\" taggedstruct {\r\n                    (\"EVENT\" uint)*;\r\n                  };\r\n                  \"VARIABLE\" taggedstruct {\r\n                    block \"AVAILABLE_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                    block \"DEFAULT_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                  };\r\n                };\r\n              };\r\n            };\r\n            block \"XCP_ON_UDP_IP\" struct {\r\n              uint;\r\n              uint;\r\n              taggedunion {\r\n                \"HOST_NAME\" char[256];\r\n                \"ADDRESS\" char[15];\r\n              };\r\n              taggedstruct {\r\n                block \"PROTOCOL_LAYER\" struct {\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  uint;\r\n                  enum {\r\n                    \"BYTE_ORDER_MSB_LAST\" = 0,\r\n                    \"BYTE_ORDER_MSB_FIRST\" = 1\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_GRANULARITY_BYTE\" = 1,\r\n                    \"ADDRESS_GRANULARITY_WORD\" = 2,\r\n                    \"ADDRESS_GRANULARITY_DWORD\" = 4\r\n                  };\r\n                  taggedstruct {\r\n                    (\"OPTIONAL_CMD\" enum {\r\n                      \"GET_COMM_MODE_INFO\" = 251,\r\n                      \"GET_ID\" = 250,\r\n                      \"SET_REQUEST\" = 249,\r\n                      \"GET_SEED\" = 248,\r\n                      \"UNLOCK\" = 247,\r\n                      \"SET_MTA\" = 246,\r\n                      \"UPLOAD\" = 245,\r\n                      \"SHORT_UPLOAD\" = 244,\r\n                      \"BUILD_CHECKSUM\" = 243,\r\n                      \"TRANSPORT_LAYER_CMD\" = 242,\r\n                      \"USER_CMD\" = 241,\r\n                      \"DOWNLOAD\" = 240,\r\n                      \"DOWNLOAD_NEXT\" = 239,\r\n                      \"DOWNLOAD_MAX\" = 238,\r\n                      \"SHORT_DOWNLOAD\" = 237,\r\n                      \"MODIFY_BITS\" = 236,\r\n                      \"SET_CAL_PAGE\" = 235,\r\n                      \"GET_CAL_PAGE\" = 234,\r\n                      \"GET_PAG_PROCESSOR_INFO\" = 233,\r\n                      \"GET_SEGMENT_INFO\" = 232,\r\n                      \"GET_PAGE_INFO\" = 231,\r\n                      \"SET_SEGMENT_MODE\" = 230,\r\n                      \"GET_SEGMENT_MODE\" = 229,\r\n                      \"COPY_CAL_PAGE\" = 228,\r\n                      \"CLEAR_DAQ_LIST\" = 227,\r\n                      \"SET_DAQ_PTR\" = 226,\r\n                      \"WRITE_DAQ\" = 225,\r\n                      \"SET_DAQ_LIST_MODE\" = 224,\r\n                      \"GET_DAQ_LIST_MODE\" = 223,\r\n                      \"START_STOP_DAQ_LIST\" = 222,\r\n                      \"START_STOP_SYNCH\" = 221,\r\n                      \"GET_DAQ_CLOCK\" = 220,\r\n                      \"READ_DAQ\" = 219,\r\n                      \"GET_DAQ_PROCESSOR_INFO\" = 218,\r\n                      \"GET_DAQ_RESOLUTION_INFO\" = 217,\r\n                      \"GET_DAQ_LIST_INFO\" = 216,\r\n                      \"GET_DAQ_EVENT_INFO\" = 215,\r\n                      \"FREE_DAQ\" = 214,\r\n                      \"ALLOC_DAQ\" = 213,\r\n                      \"ALLOC_ODT\" = 212,\r\n                      \"ALLOC_ODT_ENTRY\" = 211,\r\n                      \"PROGRAM_START\" = 210,\r\n                      \"PROGRAM_CLEAR\" = 209,\r\n                      \"PROGRAM\" = 208,\r\n                      \"PROGRAM_RESET\" = 207,\r\n                      \"GET_PGM_PROCESSOR_INFO\" = 206,\r\n                      \"GET_SECTOR_INFO\" = 205,\r\n                      \"PROGRAM_PREPARE\" = 204,\r\n                      \"PROGRAM_FORMAT\" = 203,\r\n                      \"PROGRAM_NEXT\" = 202,\r\n                      \"PROGRAM_MAX\" = 201,\r\n                      \"PROGRAM_VERIFY\" = 200\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                    \"SEED_AND_KEY_EXTERNAL_FUNCTION\" char[256];\r\n                  };\r\n                };\r\n                block \"SEGMENT\" struct {\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    block \"CHECKSUM\" struct {\r\n                      enum {\r\n                        \"XCP_ADD_11\" = 1,\r\n                        \"XCP_ADD_12\" = 2,\r\n                        \"XCP_ADD_14\" = 3,\r\n                        \"XCP_ADD_22\" = 4,\r\n                        \"XCP_ADD_24\" = 5,\r\n                        \"XCP_ADD_44\" = 6,\r\n                        \"XCP_CRC_16\" = 7,\r\n                        \"XCP_CRC_16_CITT\" = 8,\r\n                        \"XCP_CRC_32\" = 9,\r\n                        \"XCP_USER_DEFINED\" = 255\r\n                      };\r\n                      taggedstruct {\r\n                        \"MAX_BLOCK_SIZE\" ulong;\r\n                        \"EXTERNAL_FUNCTION\" char[256];\r\n                      };\r\n                    };\r\n                    (block \"PAGE\" struct {\r\n                      uchar;\r\n                      enum {\r\n                        \"ECU_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"ECU_ACCESS_WITHOUT_XCP_ONLY\" = 1,\r\n                        \"ECU_ACCESS_WITH_XCP_ONLY\" = 2,\r\n                        \"ECU_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_READ_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_READ_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_READ_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_READ_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_WRITE_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_WRITE_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_WRITE_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      taggedstruct {\r\n                        \"INIT_SEGMENT\" uchar;\r\n                      };\r\n                    })*;\r\n                    (block \"ADDRESS_MAPPING\" struct {\r\n                      ulong;\r\n                      ulong;\r\n                      ulong;\r\n                    })*;\r\n                    \"PGM_VERIFY\" ulong;\r\n                  };\r\n                };\r\n                block \"DAQ\" struct {\r\n                  enum {\r\n                    \"STATIC\" = 0,\r\n                    \"DYNAMIC\" = 1\r\n                  };\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"OPTIMISATION_TYPE_DEFAULT\" = 0,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_16\" = 1,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_32\" = 2,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_64\" = 3,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT\" = 4,\r\n                    \"OPTIMISATION_TYPE_MAX_ENTRY_SIZE\" = 5\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_EXTENSION_FREE\" = 0,\r\n                    \"ADDRESS_EXTENSION_ODT\" = 1,\r\n                    \"ADDRESS_EXTENSION_DAQ\" = 3\r\n                  };\r\n                  enum {\r\n                    \"IDENTIFICATION_FIELD_TYPE_ABSOLUTE\" = 0,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE\" = 1,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD\" = 2,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED\" = 3\r\n                  };\r\n                  enum {\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE\" = 1,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD\" = 2,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD\" = 4,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG\" = 8\r\n                  };\r\n                  uchar;\r\n                  enum {\r\n                    \"NO_OVERLOAD_INDICATION\" = 0,\r\n                    \"OVERLOAD_INDICATION_PID\" = 1,\r\n                    \"OVERLOAD_INDICATION_EVENT\" = 2\r\n                  };\r\n                  taggedstruct {\r\n                    \"PRESCALER_SUPPORTED\" ;\r\n                    \"RESUME_SUPPORTED\" ;\r\n                    block \"STIM\" struct {\r\n                      enum {\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE\" = 1,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD\" = 2,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD\" = 4,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG\" = 8\r\n                      };\r\n                      uchar;\r\n                      taggedstruct {\r\n                        \"BIT_STIM_SUPPORTED\" ;\r\n                      };\r\n                    };\r\n                    block \"TIMESTAMP_SUPPORTED\" struct {\r\n                      uint;\r\n                      enum {\r\n                        \"NO_TIME_STAMP\" = 0,\r\n                        \"SIZE_BYTE\" = 1,\r\n                        \"SIZE_WORD\" = 2,\r\n                        \"SIZE_DWORD\" = 4\r\n                      };\r\n                      enum {\r\n                        \"UNIT_1NS\" = 0,\r\n                        \"UNIT_10NS\" = 1,\r\n                        \"UNIT_100NS\" = 2,\r\n                        \"UNIT_1US\" = 3,\r\n                        \"UNIT_10US\" = 4,\r\n                        \"UNIT_100US\" = 5,\r\n                        \"UNIT_1MS\" = 6,\r\n                        \"UNIT_10MS\" = 7,\r\n                        \"UNIT_100MS\" = 8,\r\n                        \"UNIT_1S\" = 9\r\n                      };\r\n                      taggedstruct {\r\n                        \"TIMESTAMP_FIXED\" ;\r\n                      };\r\n                    };\r\n                    \"PID_OFF_SUPPORTED\" ;\r\n                    (block \"DAQ_LIST\" struct {\r\n                      uint;\r\n                      taggedstruct {\r\n                        \"DAQ_LIST_TYPE\" enum {\r\n                          \"DAQ\" = 1,\r\n                          \"STIM\" = 2,\r\n                          \"DAQ_STIM\" = 3\r\n                        };\r\n                        \"MAX_ODT\" uchar;\r\n                        \"MAX_ODT_ENTRIES\" uchar;\r\n                        \"FIRST_PID\" uchar;\r\n                        \"EVENT_FIXED\" uint;\r\n                        block \"PREDEFINED\" taggedstruct {\r\n                          (block \"ODT\" struct {\r\n                            uchar;\r\n                            taggedstruct {\r\n                              (\"ODT_ENTRY\" struct {\r\n                                uchar;\r\n                                ulong;\r\n                                uchar;\r\n                                uchar;\r\n                                uchar;\r\n                              })*;\r\n                            };\r\n                          })*;\r\n                        };\r\n                      };\r\n                    })*;\r\n                    (block \"EVENT\" struct {\r\n                      char[101];\r\n                      char[9];\r\n                      uint;\r\n                      enum {\r\n                        \"DAQ\" = 1,\r\n                        \"STIM\" = 2,\r\n                        \"DAQ_STIM\" = 3\r\n                      };\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                  };\r\n                };\r\n                block \"PAG\" struct {\r\n                  uchar;\r\n                  taggedstruct {\r\n                    \"FREEZE_SUPPORTED\" ;\r\n                  };\r\n                };\r\n                block \"PGM\" struct {\r\n                  enum {\r\n                    \"PGM_MODE_ABSOLUTE\" = 1,\r\n                    \"PGM_MODE_FUNCTIONAL\" = 2,\r\n                    \"PGM_MODE_ABSOLUTE_AND_FUNCTIONAL\" = 3\r\n                  };\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    (block \"SECTOR\" struct {\r\n                      char[101];\r\n                      uchar;\r\n                      ulong;\r\n                      ulong;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                  };\r\n                };\r\n                block \"DAQ_EVENT\" taggedunion {\r\n                  \"FIXED_EVENT_LIST\" taggedstruct {\r\n                    (\"EVENT\" uint)*;\r\n                  };\r\n                  \"VARIABLE\" taggedstruct {\r\n                    block \"AVAILABLE_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                    block \"DEFAULT_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                  };\r\n                };\r\n              };\r\n            };\r\n            block \"XCP_ON_USB\" struct {\r\n              uint;\r\n              uint;\r\n              uint;\r\n              uchar;\r\n              enum {\r\n                \"HEADER_LEN_BYTE\" = 0,\r\n                \"HEADER_LEN_CTR_BYTE\" = 1,\r\n                \"HEADER_LEN_FILL_BYTE\" = 2,\r\n                \"HEADER_LEN_WORD\" = 3,\r\n                \"HEADER_LEN_CTR_WORD\" = 4,\r\n                \"HEADER_LEN_FILL_WORD\" = 5\r\n              };\r\n              taggedunion {\r\n                block \"OUT_EP_CMD_STIM\" struct {\r\n                  uchar;\r\n                  enum {\r\n                    \"BULK_TRANSFER\" = 2,\r\n                    \"INTERRUPT_TRANSFER\" = 3\r\n                  };\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"MESSAGE_PACKING_SINGLE\" = 0,\r\n                    \"MESSAGE_PACKING_MULTIPLE\" = 1,\r\n                    \"MESSAGE_PACKING_STREAMING\" = 2\r\n                  };\r\n                  enum {\r\n                    \"ALIGNMENT_8_BIT\" = 0,\r\n                    \"ALIGNMENT_16_BIT\" = 1,\r\n                    \"ALIGNMENT_32_BIT\" = 2,\r\n                    \"ALIGNMENT_64_BIT\" = 3\r\n                  };\r\n                  taggedstruct {\r\n                    \"RECOMMENDED_HOST_BUFSIZE\" uint;\r\n                  };\r\n                };\r\n              };\r\n              taggedunion {\r\n                block \"IN_EP_RESERR_DAQ_EVSERV\" struct {\r\n                  uchar;\r\n                  enum {\r\n                    \"BULK_TRANSFER\" = 2,\r\n                    \"INTERRUPT_TRANSFER\" = 3\r\n                  };\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"MESSAGE_PACKING_SINGLE\" = 0,\r\n                    \"MESSAGE_PACKING_MULTIPLE\" = 1,\r\n                    \"MESSAGE_PACKING_STREAMING\" = 2\r\n                  };\r\n                  enum {\r\n                    \"ALIGNMENT_8_BIT\" = 0,\r\n                    \"ALIGNMENT_16_BIT\" = 1,\r\n                    \"ALIGNMENT_32_BIT\" = 2,\r\n                    \"ALIGNMENT_64_BIT\" = 3\r\n                  };\r\n                  taggedstruct {\r\n                    \"RECOMMENDED_HOST_BUFSIZE\" uint;\r\n                  };\r\n                };\r\n              };\r\n              taggedstruct {\r\n                \"ALTERNATE_SETTING_NO\" uchar;\r\n                \"INTERFACE_STRING_DESCRIPTOR\" char[101];\r\n                (block \"OUT_EP_ONLY_STIM\" struct {\r\n                  uchar;\r\n                  enum {\r\n                    \"BULK_TRANSFER\" = 2,\r\n                    \"INTERRUPT_TRANSFER\" = 3\r\n                  };\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"MESSAGE_PACKING_SINGLE\" = 0,\r\n                    \"MESSAGE_PACKING_MULTIPLE\" = 1,\r\n                    \"MESSAGE_PACKING_STREAMING\" = 2\r\n                  };\r\n                  enum {\r\n                    \"ALIGNMENT_8_BIT\" = 0,\r\n                    \"ALIGNMENT_16_BIT\" = 1,\r\n                    \"ALIGNMENT_32_BIT\" = 2,\r\n                    \"ALIGNMENT_64_BIT\" = 3\r\n                  };\r\n                  taggedstruct {\r\n                    \"RECOMMENDED_HOST_BUFSIZE\" uint;\r\n                  };\r\n                })*;\r\n                (block \"IN_EP_ONLY_DAQ\" struct {\r\n                  uchar;\r\n                  enum {\r\n                    \"BULK_TRANSFER\" = 2,\r\n                    \"INTERRUPT_TRANSFER\" = 3\r\n                  };\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"MESSAGE_PACKING_SINGLE\" = 0,\r\n                    \"MESSAGE_PACKING_MULTIPLE\" = 1,\r\n                    \"MESSAGE_PACKING_STREAMING\" = 2\r\n                  };\r\n                  enum {\r\n                    \"ALIGNMENT_8_BIT\" = 0,\r\n                    \"ALIGNMENT_16_BIT\" = 1,\r\n                    \"ALIGNMENT_32_BIT\" = 2,\r\n                    \"ALIGNMENT_64_BIT\" = 3\r\n                  };\r\n                  taggedstruct {\r\n                    \"RECOMMENDED_HOST_BUFSIZE\" uint;\r\n                  };\r\n                })*;\r\n                block \"IN_EP_ONLY_EVSERV\" struct {\r\n                  uchar;\r\n                  enum {\r\n                    \"BULK_TRANSFER\" = 2,\r\n                    \"INTERRUPT_TRANSFER\" = 3\r\n                  };\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"MESSAGE_PACKING_SINGLE\" = 0,\r\n                    \"MESSAGE_PACKING_MULTIPLE\" = 1,\r\n                    \"MESSAGE_PACKING_STREAMING\" = 2\r\n                  };\r\n                  enum {\r\n                    \"ALIGNMENT_8_BIT\" = 0,\r\n                    \"ALIGNMENT_16_BIT\" = 1,\r\n                    \"ALIGNMENT_32_BIT\" = 2,\r\n                    \"ALIGNMENT_64_BIT\" = 3\r\n                  };\r\n                  taggedstruct {\r\n                    \"RECOMMENDED_HOST_BUFSIZE\" uint;\r\n                  };\r\n                };\r\n                (block \"DAQ_LIST_USB_ENDPOINT\" struct {\r\n                  uint;\r\n                  taggedstruct {\r\n                    \"FIXED_IN\" uchar;\r\n                    \"FIXED_OUT\" uchar;\r\n                  };\r\n                })*;\r\n                block \"PROTOCOL_LAYER\" struct {\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  uint;\r\n                  enum {\r\n                    \"BYTE_ORDER_MSB_LAST\" = 0,\r\n                    \"BYTE_ORDER_MSB_FIRST\" = 1\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_GRANULARITY_BYTE\" = 1,\r\n                    \"ADDRESS_GRANULARITY_WORD\" = 2,\r\n                    \"ADDRESS_GRANULARITY_DWORD\" = 4\r\n                  };\r\n                  taggedstruct {\r\n                    (\"OPTIONAL_CMD\" enum {\r\n                      \"GET_COMM_MODE_INFO\" = 251,\r\n                      \"GET_ID\" = 250,\r\n                      \"SET_REQUEST\" = 249,\r\n                      \"GET_SEED\" = 248,\r\n                      \"UNLOCK\" = 247,\r\n                      \"SET_MTA\" = 246,\r\n                      \"UPLOAD\" = 245,\r\n                      \"SHORT_UPLOAD\" = 244,\r\n                      \"BUILD_CHECKSUM\" = 243,\r\n                      \"TRANSPORT_LAYER_CMD\" = 242,\r\n                      \"USER_CMD\" = 241,\r\n                      \"DOWNLOAD\" = 240,\r\n                      \"DOWNLOAD_NEXT\" = 239,\r\n                      \"DOWNLOAD_MAX\" = 238,\r\n                      \"SHORT_DOWNLOAD\" = 237,\r\n                      \"MODIFY_BITS\" = 236,\r\n                      \"SET_CAL_PAGE\" = 235,\r\n                      \"GET_CAL_PAGE\" = 234,\r\n                      \"GET_PAG_PROCESSOR_INFO\" = 233,\r\n                      \"GET_SEGMENT_INFO\" = 232,\r\n                      \"GET_PAGE_INFO\" = 231,\r\n                      \"SET_SEGMENT_MODE\" = 230,\r\n                      \"GET_SEGMENT_MODE\" = 229,\r\n                      \"COPY_CAL_PAGE\" = 228,\r\n                      \"CLEAR_DAQ_LIST\" = 227,\r\n                      \"SET_DAQ_PTR\" = 226,\r\n                      \"WRITE_DAQ\" = 225,\r\n                      \"SET_DAQ_LIST_MODE\" = 224,\r\n                      \"GET_DAQ_LIST_MODE\" = 223,\r\n                      \"START_STOP_DAQ_LIST\" = 222,\r\n                      \"START_STOP_SYNCH\" = 221,\r\n                      \"GET_DAQ_CLOCK\" = 220,\r\n                      \"READ_DAQ\" = 219,\r\n                      \"GET_DAQ_PROCESSOR_INFO\" = 218,\r\n                      \"GET_DAQ_RESOLUTION_INFO\" = 217,\r\n                      \"GET_DAQ_LIST_INFO\" = 216,\r\n                      \"GET_DAQ_EVENT_INFO\" = 215,\r\n                      \"FREE_DAQ\" = 214,\r\n                      \"ALLOC_DAQ\" = 213,\r\n                      \"ALLOC_ODT\" = 212,\r\n                      \"ALLOC_ODT_ENTRY\" = 211,\r\n                      \"PROGRAM_START\" = 210,\r\n                      \"PROGRAM_CLEAR\" = 209,\r\n                      \"PROGRAM\" = 208,\r\n                      \"PROGRAM_RESET\" = 207,\r\n                      \"GET_PGM_PROCESSOR_INFO\" = 206,\r\n                      \"GET_SECTOR_INFO\" = 205,\r\n                      \"PROGRAM_PREPARE\" = 204,\r\n                      \"PROGRAM_FORMAT\" = 203,\r\n                      \"PROGRAM_NEXT\" = 202,\r\n                      \"PROGRAM_MAX\" = 201,\r\n                      \"PROGRAM_VERIFY\" = 200\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                    \"SEED_AND_KEY_EXTERNAL_FUNCTION\" char[256];\r\n                  };\r\n                };\r\n                block \"SEGMENT\" struct {\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    block \"CHECKSUM\" struct {\r\n                      enum {\r\n                        \"XCP_ADD_11\" = 1,\r\n                        \"XCP_ADD_12\" = 2,\r\n                        \"XCP_ADD_14\" = 3,\r\n                        \"XCP_ADD_22\" = 4,\r\n                        \"XCP_ADD_24\" = 5,\r\n                        \"XCP_ADD_44\" = 6,\r\n                        \"XCP_CRC_16\" = 7,\r\n                        \"XCP_CRC_16_CITT\" = 8,\r\n                        \"XCP_CRC_32\" = 9,\r\n                        \"XCP_USER_DEFINED\" = 255\r\n                      };\r\n                      taggedstruct {\r\n                        \"MAX_BLOCK_SIZE\" ulong;\r\n                        \"EXTERNAL_FUNCTION\" char[256];\r\n                      };\r\n                    };\r\n                    (block \"PAGE\" struct {\r\n                      uchar;\r\n                      enum {\r\n                        \"ECU_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"ECU_ACCESS_WITHOUT_XCP_ONLY\" = 1,\r\n                        \"ECU_ACCESS_WITH_XCP_ONLY\" = 2,\r\n                        \"ECU_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_READ_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_READ_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_READ_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_READ_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      enum {\r\n                        \"XCP_WRITE_ACCESS_NOT_ALLOWED\" = 0,\r\n                        \"XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY\" = 1,\r\n                        \"XCP_WRITE_ACCESS_WITH_ECU_ONLY\" = 2,\r\n                        \"XCP_WRITE_ACCESS_DONT_CARE\" = 3\r\n                      };\r\n                      taggedstruct {\r\n                        \"INIT_SEGMENT\" uchar;\r\n                      };\r\n                    })*;\r\n                    (block \"ADDRESS_MAPPING\" struct {\r\n                      ulong;\r\n                      ulong;\r\n                      ulong;\r\n                    })*;\r\n                    \"PGM_VERIFY\" ulong;\r\n                  };\r\n                };\r\n                block \"DAQ\" struct {\r\n                  enum {\r\n                    \"STATIC\" = 0,\r\n                    \"DYNAMIC\" = 1\r\n                  };\r\n                  uint;\r\n                  uint;\r\n                  uchar;\r\n                  enum {\r\n                    \"OPTIMISATION_TYPE_DEFAULT\" = 0,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_16\" = 1,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_32\" = 2,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_64\" = 3,\r\n                    \"OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT\" = 4,\r\n                    \"OPTIMISATION_TYPE_MAX_ENTRY_SIZE\" = 5\r\n                  };\r\n                  enum {\r\n                    \"ADDRESS_EXTENSION_FREE\" = 0,\r\n                    \"ADDRESS_EXTENSION_ODT\" = 1,\r\n                    \"ADDRESS_EXTENSION_DAQ\" = 3\r\n                  };\r\n                  enum {\r\n                    \"IDENTIFICATION_FIELD_TYPE_ABSOLUTE\" = 0,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE\" = 1,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD\" = 2,\r\n                    \"IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED\" = 3\r\n                  };\r\n                  enum {\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE\" = 1,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD\" = 2,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD\" = 4,\r\n                    \"GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG\" = 8\r\n                  };\r\n                  uchar;\r\n                  enum {\r\n                    \"NO_OVERLOAD_INDICATION\" = 0,\r\n                    \"OVERLOAD_INDICATION_PID\" = 1,\r\n                    \"OVERLOAD_INDICATION_EVENT\" = 2\r\n                  };\r\n                  taggedstruct {\r\n                    \"PRESCALER_SUPPORTED\" ;\r\n                    \"RESUME_SUPPORTED\" ;\r\n                    block \"STIM\" struct {\r\n                      enum {\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE\" = 1,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD\" = 2,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD\" = 4,\r\n                        \"GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG\" = 8\r\n                      };\r\n                      uchar;\r\n                      taggedstruct {\r\n                        \"BIT_STIM_SUPPORTED\" ;\r\n                      };\r\n                    };\r\n                    block \"TIMESTAMP_SUPPORTED\" struct {\r\n                      uint;\r\n                      enum {\r\n                        \"NO_TIME_STAMP\" = 0,\r\n                        \"SIZE_BYTE\" = 1,\r\n                        \"SIZE_WORD\" = 2,\r\n                        \"SIZE_DWORD\" = 4\r\n                      };\r\n                      enum {\r\n                        \"UNIT_1NS\" = 0,\r\n                        \"UNIT_10NS\" = 1,\r\n                        \"UNIT_100NS\" = 2,\r\n                        \"UNIT_1US\" = 3,\r\n                        \"UNIT_10US\" = 4,\r\n                        \"UNIT_100US\" = 5,\r\n                        \"UNIT_1MS\" = 6,\r\n                        \"UNIT_10MS\" = 7,\r\n                        \"UNIT_100MS\" = 8,\r\n                        \"UNIT_1S\" = 9\r\n                      };\r\n                      taggedstruct {\r\n                        \"TIMESTAMP_FIXED\" ;\r\n                      };\r\n                    };\r\n                    \"PID_OFF_SUPPORTED\" ;\r\n                    (block \"DAQ_LIST\" struct {\r\n                      uint;\r\n                      taggedstruct {\r\n                        \"DAQ_LIST_TYPE\" enum {\r\n                          \"DAQ\" = 1,\r\n                          \"STIM\" = 2,\r\n                          \"DAQ_STIM\" = 3\r\n                        };\r\n                        \"MAX_ODT\" uchar;\r\n                        \"MAX_ODT_ENTRIES\" uchar;\r\n                        \"FIRST_PID\" uchar;\r\n                        \"EVENT_FIXED\" uint;\r\n                        block \"PREDEFINED\" taggedstruct {\r\n                          (block \"ODT\" struct {\r\n                            uchar;\r\n                            taggedstruct {\r\n                              (\"ODT_ENTRY\" struct {\r\n                                uchar;\r\n                                ulong;\r\n                                uchar;\r\n                                uchar;\r\n                                uchar;\r\n                              })*;\r\n                            };\r\n                          })*;\r\n                        };\r\n                      };\r\n                    })*;\r\n                    (block \"EVENT\" struct {\r\n                      char[101];\r\n                      char[9];\r\n                      uint;\r\n                      enum {\r\n                        \"DAQ\" = 1,\r\n                        \"STIM\" = 2,\r\n                        \"DAQ_STIM\" = 3\r\n                      };\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                  };\r\n                };\r\n                block \"PAG\" struct {\r\n                  uchar;\r\n                  taggedstruct {\r\n                    \"FREEZE_SUPPORTED\" ;\r\n                  };\r\n                };\r\n                block \"PGM\" struct {\r\n                  enum {\r\n                    \"PGM_MODE_ABSOLUTE\" = 1,\r\n                    \"PGM_MODE_FUNCTIONAL\" = 2,\r\n                    \"PGM_MODE_ABSOLUTE_AND_FUNCTIONAL\" = 3\r\n                  };\r\n                  uchar;\r\n                  uchar;\r\n                  taggedstruct {\r\n                    (block \"SECTOR\" struct {\r\n                      char[101];\r\n                      uchar;\r\n                      ulong;\r\n                      ulong;\r\n                      uchar;\r\n                      uchar;\r\n                      uchar;\r\n                    })*;\r\n                    \"COMMUNICATION_MODE_SUPPORTED\" taggedunion {\r\n                      \"BLOCK\" taggedstruct {\r\n                        \"SLAVE\" ;\r\n                        \"MASTER\" struct {\r\n                          uchar;\r\n                          uchar;\r\n                        };\r\n                      };\r\n                      \"INTERLEAVED\" uchar;\r\n                    };\r\n                  };\r\n                };\r\n                block \"DAQ_EVENT\" taggedunion {\r\n                  \"FIXED_EVENT_LIST\" taggedstruct {\r\n                    (\"EVENT\" uint)*;\r\n                  };\r\n                  \"VARIABLE\" taggedstruct {\r\n                    block \"AVAILABLE_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n                    };\r\n                    block \"DEFAULT_EVENT_LIST\" taggedstruct {\r\n                      (\"EVENT\" uint)*;\r\n     '''''          };\r\n                  };\r\n                };\r\n              };\r\n            };\r\n          };\r\n        };\r\n\r\n/****************************************************************************/\r\n/*                                                                          */\r\n/*   ASAP2 Meta description for ETK                                         */\r\n/*   - only applicable with ASAP2 V1.3 -                                    */\r\n/*                                                                          */\r\n/*   Used data types:                                                       */\r\n/*                                                                          */\r\n/*   A2ML       ASAP2          Windows  Explanation                         */\r\n/*   ---------------------------------------------------------              */\r\n/*   uchar      UBYTE          BYTE     unsigned 8 Bit                      */\r\n/*   char       SBYTE          char     signed 8 Bit                        */\r\n/*   uint       UWORD          WORD     unsigned integer 16 Bit             */\r\n/*   int        SWORD          int      signed integer 16 Bit               */\r\n/*   ulong      ULONG          DWORD    unsigned integer 32 Bit             */\r\n/*   long       SLONG          LONG     signed integer 32 Bit               */\r\n/*   float      FLOAT32_IEEE            float 32 Bit                        */\r\n/*                                                                          */\r\n/*  Changes:                                                                */\r\n/*  26.04.99 Hn  closing bracket at 'ADDRESS_MAPPING' added,                */\r\n/*               Keyword 'RESERVED' changed to 'RESERVED_DISTAB_MEMORY'     */\r\n/*                                                                          */\r\n/*  06.07.99 Hn  (V1.0.1) closing bracket at 'ADDRESS_MAPPING' changed to'}'*/\r\n/*                                                                          */\r\n/*  03.07.00 Hn  (V1.1.0) New element 'ETK_PRESENCE_CHECK' added to TP-Blob */\r\n/*                                                                          */\r\n/*  03.07.01 Hn  (V1.2.0) New element 'COLDSTART_HANDSHAKE' added to TP-Blob*/\r\n/*                        Parameter 'PBA' deleted                           */\r\n/*                        New parameter 'InterFaceSpeed' added              */\r\n/*                                                                          */\r\n/*                        New QP-Blob for 32 trigger measurement/bypass     */\r\n/*                                                                          */\r\n/*  11.01.02 Lug (V1.3.0) RESERVED_DISTAB_MEMORY' section expanded          */\r\n/*                        New TP_BLOB Version 0x01000101                    */\r\n/*                                                                          */\r\n/*  12.07.02 Wnl (V1.4.0) New QP-BLOB Version 0x00000101                    */\r\n/*                        Parameter 'Max. Read Variables' added             */\r\n/*                        Parameter 'Max. Write Variables' added            */\r\n/*                                                                          */\r\n/*  02.10.02 Wnl (V1.4.0) KP_Blob extension                                 */\r\n/*                        - enum for address location                       */\r\n/*                        - default RASTER                                  */\r\n/*                                                                          */\r\n/*  10.09.03 Wnl (V1.5.0) New TP_BLOB Version 0x01000102:                   */\r\n/*                        New Parameter for CODE_CHK                        */\r\n/*                          PERMANENT_RESET / NO_RESET                      */\r\n/*                        New TP_BLOB entry OVERLAY_CONFIG_TABLE            */\r\n/*                       - CODE_CHK maxByte 4 -> 32                         */\r\n/*                                                                          */\r\n/*  12.04.05 Wnl (V1.6.0) New TP_BLOB Version 0x01000103:                   */\r\n/*                        New TP_BLOB entry CAL_WAKEUP                      */\r\n/*                        New TP_BLOB entry PAGE_SWITCH_METHOD              */\r\n/*                                                                          */\r\n/****************************************************************************/\r\n\r\n/****************************************************************************/\r\n/*                                                                          */\r\n/* For a correct working of the ETK, the following MEMORY_SEGMENTs have to  */\r\n/* be specified in the section 'MOD_PAR' of the ASAP2 file:                 */\r\n/*                                                                          */\r\n/*  /begin MEMORY_SEGMENT                                                   */\r\n/*     Dataxxxx \"\"  DATA FLASH <mem. location> <address> <size> <mirrors>   */\r\n/*  /end MEMORY_SEGMENT                                                     */\r\n/*                                                                          */\r\n/*  /begin MEMORY_SEGMENT                                                   */\r\n/*     Codexxxx \"\"  CODE FLASH <mem. location> <address> <size> <mirrors>   */\r\n/*  /end MEMORY_SEGMENT                                                     */\r\n/*                                                                          */\r\n/*  /begin MEMORY_SEGMENT                                                   */\r\n/*     ExRAM \"ExRAM for DISTAB\" VARIABLES RAM EXTERN <address><size><mirrors>*/\r\n/*  /end MEMORY_SEGMENT                                                     */\r\n/*                                                                          */\r\n/*  Remark: All data included in a hex file, but not specified by a memory  */\r\n/*          segment will be ignored inside the application program and lost */\r\n/*          when generating hex file export                                 */\r\n/*                                                                          */\r\n/****************************************************************************/\r\n        \r\n        \"ETK\" taggedstruct\r\n        {\r\n          /* Description of an address mapping between addresses in the view of the */\r\n          /* EPROM of the ECU (and ASAP2) and the addresses in the scope of the ETK */\r\n          /* IF_DATA section used with MEMORY_SEGMENT (can be missing if no         */\r\n          /* differences between the 2 views)                                       */\r\n        \r\n          (\"ADDRESS_MAPPING\" struct \r\n            {\r\n             ulong;              /* Start address of MEMORY_SEGMENT                 */\r\n             ulong;              /* mapped start address for ETK                    */\r\n             ulong;              /* Length of mapped address range                  */\r\n            }\r\n           )*;                   /* multiple use of ADDRESS_MAPPING is possible     */\r\n                                 /* (even each MEMORY_SEGMENT)                      */\r\n        \r\n        \r\n          (block \"SOURCE\" struct\r\n          {\r\n          /* Description of the acquisition (trigger) levels supplied by the ECU,   */\r\n          /* 3 is max. no. for ETK                                                  */\r\n        \r\n            struct\r\n            {\r\n              char [100];        /* Source name                                     */\r\n              int;               /* CSE unit according to Asap1b (minimal period    */\r\n                                 /* duration) of the acqisition raster              */\r\n              long;              /* Minimal period number measured in the CSE unit  */\r\n            };\r\n            taggedstruct\r\n            {\r\n              \"QP_BLOB\" struct\r\n              {\r\n              /* Description of additional information needed by the ETK device     */\r\n              /* driver to collect the measurement data from a certain              */\r\n              /* acquisition raster                                                 */\r\n                uint;            /* version number, high byte must be >=1 to be     */\r\n                                 /* able to distinguish old versions without        */\r\n                                 /* version numbers current value: 0x101 (V1.1)     */\r\n                uint;            /* hardware trigger number (1..32)                 */\r\n                enum {           /* trigger type                                    */\r\n                  \"DIRECT\"=1,\r\n                  \"INDIRECT\"=2\r\n                };\r\n                uint;            /* raster priority (1..32), higher number = higher */\r\n                                 /* priority                                        */\r\n                enum {           /* assigned application                            */\r\n                  \"MEASUREMENT\"=0,\r\n                  \"BYPASS\"=1\r\n                }; \r\n                ulong;           /* address of trigger flag (only valid if trigger  */\r\n                                 /* type INDIRECT)                                  */\r\n                uint;            /* maximum length of display table in bytes        */\r\n                ulong;           /* start address of display table                  */\r\n                ulong;           /* output address of display table                 */\r\n                uint;            /* max. size of bypass receive table               */\r\n                ulong;           /* start address of address table for bypass       */\r\n                                 /* output - Xpass compatible Bypass only !!        */\r\n                ulong;           /* output address of the bypass table              */\r\n                ulong;           /* worst case minimum raster time in us            */\r\n                                 /* (1000 = 1ms raster)                             */\r\n                uint;            /* maximum read variables                          */\r\n                uint;            /* maximum write variables                         */\r\n              };\r\n            } \r\n          })*;                   /* SOURCE can be used several times                */\r\n        \r\n          block \"TP_BLOB\" struct\r\n          {\r\n          /* Description of additional information needed to configure the ETK      */\r\n          /* device driver for measurement and calibration                          */\r\n        \r\n            ulong;               /* Version number of the TP-Blob; uppermost byte   */\r\n                                 /* is always != 0, so that informations cannot be  */\r\n                                 /* mixed up with older blob versions (trigger      */\r\n                                 /* address was previously at the first position    */\r\n                                 /* and had max. 24 Bit)                            */\r\n                                 /* current value: 0x01000103                       */\r\n            enum {               /* fix comm speed on ETK line to 8/100 MBit/s      */\r\n              \"INTERFACE_SPEED_8MBIT\"   = 1,\r\n              \"INTERFACE_SPEED_100MBIT\" = 2\r\n            };\r\n            ulong;               /* ETKP: RESET_CFG parameter only for PPC family   */\r\n        \r\n            taggedstruct {\r\n        \r\n              block \"DISTAB_CFG\" struct\r\n              {\r\n                uint;            /* Type of display table (13 recommended,   DSPTAB */\r\n                                 /* 12, 11, 20 only for old projects)               */\r\n                uint;            /* Data type display table: 1=byte 2=word  DAT_MOD */\r\n                                 /* additional code table for distab 13 depending   */\r\n                                 /* on bus width / bus access                       */\r\n                                 /* (see distab 13 spec. for more information)      */\r\n                uint;            /* Byte order 1 = high first, 2 = low first    RFG */\r\n                ulong;           /* Trigger segment address                TRGSEGAD */\r\n                ulong;           /* Trigger configuration  (special code)   TRG_CFG */\r\n                taggedstruct {\r\n                  \"TRG_MOD\" ( uchar)*; /* Dyn. length for                   TRG_MOD */\r\n                                       /* (special code)                            */\r\n                };\r\n              };\r\n        \r\n              \"CODE_CHK\" struct \r\n              {\r\n              /* A check, whether program and data are matching can be performed,   */\r\n              /* if the ECU copies a certain 'program identifier' (e.g. the code    */\r\n              /* checksum) into the external RAM and the same identifier is stored  */\r\n              /* in the data range. The ETK driver can read and compare both        */\r\n              /* identifier and issue an error message, if the both identifiers do  */\r\n              /*  not match.                                                        */\r\n        \r\n                ulong;           /* ETK: address of program identifier in the data  */\r\n                                 /* range PRG_DATA                                  */\r\n                uint;            /* ETK: length of program identifier in the data   */\r\n                                 /* range (max. 32 bytes)                           */\r\n                ulong;           /* ETK: address of program identifier in the       */\r\n                                 /* external RAM PRG_ERAM                           */\r\n                uint;            /* ETK: length of program identifier in the        */\r\n                                 /* external RAM (max. 32 bytes)                    */\r\n                /* If all parameters contain 0x0 values, no check is performed      */\r\n        \r\n                taggedstruct {\r\n                  \"ERROR_BEHAVIOR\" enum {       /* reaction of MC tool to ECU when  */\r\n                    \"PERMANENT_RESET\" = 0,      /* code check fails                 */\r\n                    \"NO_RESET\"        = 1\r\n                  };\r\n                };\r\n              };\r\n        \r\n              \"ETK_CFG\" ( uchar)*; /* ETK_CFG parameters (dyn. length)              */\r\n              /* Description of ETK configuration parameters, as configured with    */\r\n              /* the ETK configuration tool                                         */\r\n        \r\n              ( \"EMU_DATA\" struct \r\n              {\r\n              /* Additional description of data ranges overwriting the              */\r\n              /* MEMORY_SEGMENT description                                         */\r\n        \r\n                ulong;           /* Start address                                   */\r\n                ulong;           /* Length in bytes                                 */\r\n                enum {           /* Memory attribute                                */\r\n                  \"INTERN\"  = 0,\r\n                  \"EXTERN\"  = 1\r\n                };\r\n                                 /* Description of offsets to additional data       */\r\n                                 /* ranges where the contents of this data range    */\r\n                                 /* are mirrored                                    */\r\n                ulong;           /* Mirror offset 1                                 */\r\n                ulong;           /* Mirror offset 2                                 */\r\n                ulong;           /* Mirror offset 3                                 */\r\n                ulong;           /* Mirror offset 4                                 */\r\n                ulong;           /* Mirror offset 5                                 */\r\n                                 /* Mirror offsets of -1 indicate that there is no  */\r\n                                 /* mirror offset                                   */\r\n              })*;\r\n        \r\n              ( \"EMU_CODE\" struct\r\n              {\r\n              /* Additional description of code ranges overwriting the              */\r\n              /* MEMORY_SEGMENT description                                         */\r\n        \r\n                ulong;           /* Start address                                   */\r\n                ulong;           /* Length in bytes                                 */\r\n                enum {           /* Memory attribute                                */\r\n                  \"INTERN\"  = 0,\r\n                  \"EXTERN\"  = 1\r\n                };\r\n                ulong;           /* Mirror offset 1                                 */\r\n                ulong;           /* Mirror offset 2                                 */\r\n                ulong;           /* Mirror offset 3                                 */\r\n                ulong;           /* Mirror offset 4                                 */\r\n                ulong;           /* Mirror offset 5                                 */\r\n              })*;\r\n        \r\n              ( \"EMU_RAM\" struct \r\n              {\r\n              /* Additional description of external RAM ranges overwriting the      */\r\n              /* MEMORY_SEGMENT description                                         */\r\n        \r\n                ulong;           /* Start address                                   */\r\n                ulong;           /* Length in bytes                                 */\r\n                enum {           /* Memory attribute                                */\r\n                  \"INTERN\"  = 0,\r\n                  \"EXTERN\"  = 1\r\n                };\r\n                ulong;           /* Mirror offset 1                                 */\r\n                ulong;           /* Mirror offset 2                                 */\r\n                ulong;           /* Mirror offset 3                                 */\r\n                ulong;           /* Mirror offset 4                                 */\r\n                ulong;           /* Mirror offset 5                                 */\r\n              })*;\r\n        \r\n              ( \"RESERVED_DISTAB_MEMORY\" struct \r\n              {\r\n              /* Description of 'reserved ranges' (especially in the data or code   */\r\n              /* ranges; e.g. location of the display tables) that are excluded     */\r\n              /* from checksum verification. If the 3 display tables stand close    */\r\n              /* together, the size of the reserved memory is calculated by the     */\r\n              /* following formula:                                                 */\r\n              /*          size = (highest start address of the 3 distabs)           */\r\n              /*                  + ((size of this distab) + 2) * 4                 */\r\n              /*                  - (lowest start address of the 3 distabs)         */\r\n        \r\n                ulong;           /* Start address                                   */\r\n                ulong;           /* Length in bytes                                 */\r\n                enum {           /* Location                                        */\r\n                  \"INTERN\"  = 0,\r\n                  \"EXTERN\"  = 1\r\n                };\r\n                enum {           /* application                                     */\r\n                  \"MEASUREMENT\" = 0,\r\n                  \"BYPASS\"    = 1\r\n                };\r\n                enum {           /* usage                                           */\r\n                  \"CHECKSUM_EXCLUDE_ONLY\" = 0,\r\n                  \"ECU_DISTAB_INPUT\"      = 1,\r\n                  \"ECU_DISTAB_OUTPUT\"     = 2,\r\n                  \"ECU_DISTAB_INOUT\"      = 3\r\n                };\r\n                ulong;           /* Mirror offset 1                                 */\r\n                ulong;           /* Mirror offset 2                                 */\r\n                ulong;           /* Mirror offset 3                                 */\r\n                ulong;           /* Mirror offset 4                                 */\r\n                ulong;           /* Mirror offset 5                                 */\r\n              })*;\r\n        \r\n              \"ETK_MAILBOX\" struct \r\n              {\r\n              /* Description of the ETK mailbox that is used for communication      */\r\n              /* between the ECU and the application program (e.g. for programming  */\r\n              /* data into the ECU flash)                                           */\r\n        \r\n                ulong;           /* Test pattern for the ECU to detect a valid      */\r\n                                 /* mailbox                                         */\r\n                enum {           /* Memory page (code, data, external RAM) used for */\r\n                                 /* communication from application program to ECU   */\r\n                  \"CODE\"  = 1,\r\n                  \"DATA\"  = 2,\r\n                  \"EXRAM\" = 3\r\n                };\r\n                ulong;           /* Base address of buffer for communication appl.  */\r\n                                 /* program -> ECU                                  */\r\n                ulong;           /* Length of buffer for comunication appl.         */\r\n                                 /* program -> ECU                                  */\r\n                enum {           /* Memory page (code, data, external RAM) used for */\r\n                                 /* communication from ECU to application program   */\r\n                  \"CODE\"  = 1,\r\n                  \"DATA\"  = 2,\r\n                  \"EXRAM\" = 3\r\n                };\r\n                ulong;           /* Base address of buffer for communication        */\r\n                                 /* ECU -> appl. program                            */\r\n                ulong;           /* Length of buffer for comunication               */\r\n                                 /* ECU -> appl. program                            */\r\n              };\r\n        \r\n              block \"ETK_PRESENCE_CHECK\" struct \r\n              {\r\n                ulong;           /* address of ETK recognition pattern              */\r\n                taggedstruct {\r\n                  \"ETK_PATTERN\" (uchar)*; /* Dyn. length for pattern                */\r\n                };\r\n              };\r\n        \r\n              block \"COLDSTART_HANDSHAKE\" struct \r\n              {\r\n                ulong;           /* address of ETKS cold start pattern              */\r\n                taggedstruct {\r\n                  \"WAIT\" ( uchar)*;   /* Dyn. length for 'wait' pattern             */\r\n                };\r\n                taggedstruct {\r\n                  \"READY\" ( uchar)*; /* Dyn. length for 'ready' pattern             */\r\n                };\r\n              };\r\n        \r\n              \"CAL_WAKEUP\" taggedstruct {\r\n                \"CAL_WAKEUP_PIN\" ulong;     /* 1 = wake up enabled, 0 = disabled    */\r\n                \"CAL_TOOL_PRESENT\" struct {\r\n                       ulong;               /* address for the pattern              */\r\n                       ulong;               /* pattern                              */\r\n                       ulong;               /* ECU timeout for shut down in s       */\r\n                };\r\n              };\r\n            };\r\n            taggedunion {\r\n              \"OVERLAY_CONFIG_TABLE\" struct {\r\n                ulong;           /* OCT_Type         Type of table                  */\r\n                ulong;           /* OCT_StartAddress Start address of table         */\r\n                ulong;           /* OCT_Length       max Length of table in byte    */\r\n                taggedstruct {\r\n                  \"AUTOSTART_BEHAVIOR\" enum {\r\n                    \"LAST_ACTIVE_PAGE\" = 0, /* Table to be filled with info         */\r\n                                            /* for the current active page          */\r\n                    \"ALWAYS_WP\"        = 1, /* Table to be filled always            */\r\n                                            /* with info for working page           */\r\n                    \"ALWAYS_RP\"        = 2  /* Table to be filled   always          */\r\n                                            /* with info for reference page         */\r\n                  };\r\n                };\r\n              };\r\n              \"PAGE_SWITCH_METHOD\" struct {\r\n                ulong;                      /* version                              */\r\n                taggedstruct {\r\n                  \"MAILBOX\" struct {\r\n                    ulong;           /* MBX_Version                                 */\r\n                                     /* Version of mailbox                          */\r\n                    ulong;           /* MBX_PageSetupTime                           */  \r\n                                     /* max time the ECU needs to set up page in ms */\r\n                    ulong;           /* MBX_StartAddress                            */\r\n                                     /* Start address of table                      */\r\n                  };\r\n        \r\n                  \"AUTOSTART_BEHAVIOR\" enum {\r\n                    \"LAST_ACTIVE_PAGE\" = 0, /* Table to be filled with info         */  \r\n                                            /* for the current active page          */\r\n                    \"ALWAYS_WP\"        = 1, /* Request field to be filled           */\r\n                                            /* always with info for working page    */\r\n                    \"ALWAYS_RP\"        = 2  /* Request field to be filled           */\r\n                                            /* always with info for reference page  */\r\n                  };\r\n        \r\n                  \"OCT_WORKINGPAGE\" struct {\r\n                    ulong;       /* OCT_Type         Type of table                  */\r\n                    ulong;       /* OCT_StartAddress Start address of table         */\r\n                    ulong;       /* OCT_Length       max Length of table in byte    */\r\n                  };\r\n        \r\n                  \"OCT_REFERENCEPAGE\" struct {\r\n                    ulong;       /* OCT_Type         Type of table                  */\r\n                    ulong;       /* OCT_StartAddress Start address of table         */\r\n                    ulong;       /* OCT_Length       max Length of table in byte    */\r\n                  };\r\n                };\r\n              };\r\n            };\r\n          };\r\n        \r\n          \"DP_BLOB\" struct\r\n          {\r\n          /* for CHARACTERISTIC and AXIS_PTS and MEMORY_LAYOUT                      */\r\n        \r\n            ulong;               /* start address for example of a map              */\r\n            ulong;               /* length of the map                               */\r\n          };\r\n        \r\n          \"KP_BLOB\" struct\r\n          {\r\n            ulong;               /* Start address of measurement variable           */\r\n            enum {               /* Address location                                */\r\n              \"INTERN\"  = 0,\r\n              \"EXTERN\"  = 1\r\n            };\r\n            uint;                /* Size of measurement in bytes                    */\r\n            taggedstruct {\r\n              (\"RASTER\" uchar )*;/* Array of event channel initialization values    */\r\n            };\r\n          };\r\n        };\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  CANAPE_EXT AML                                                                                  */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n        \"CANAPE_EXT\" struct {\r\n          int;             /* version number */\r\n          taggedstruct {\r\n            \"LINK_MAP\" struct {\r\n              char[256];   /* segment name */\r\n              long;        /* base address of the segment */\r\n              uint;        /* address extension of the segment */\r\n              uint;        /* flag: address is relative to DS */\r\n              long;        /* offset of the segment address */\r\n              uint;        /* datatypValid */\r\n              uint;        /* enum datatyp */\r\n              uint;        /* bit offset of the segment */\r\n            };\r\n            \"DISPLAY\" struct {\r\n              long;        /* display color */\r\n              double;      /* minimal display value (phys)*/\r\n              double;      /* maximal display value (phys)*/\r\n            };\r\n            \"VIRTUAL_CONVERSION\" struct {\r\n              char[256];   /* name of the conversion formula */\r\n            };\r\n          };\r\n        };\r\n\r\n\r\n      };\r\n    /end A2ML\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Common parameters valid for the whole ASAP2 file                                                */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin MOD_COMMON \"\"\r\n      DEPOSIT ABSOLUTE\r\n      BYTE_ORDER MSB_LAST\r\n      DATA_SIZE 16\r\n      ALIGNMENT_BYTE 1\r\n      ALIGNMENT_WORD 2\r\n      ALIGNMENT_LONG 4\r\n      ALIGNMENT_INT64 4\r\n      ALIGNMENT_FLOAT16_IEEE 2\r\n      ALIGNMENT_FLOAT32_IEEE 4\r\n      ALIGNMENT_FLOAT64_IEEE 4\r\n    /end MOD_COMMON\r\n\r\n    \r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  XCP Interface description                                                                       */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin IF_DATA XCP \r\n      /begin PROTOCOL_LAYER \r\n        0x100 0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x8 0x8 BYTE_ORDER_MSB_LAST ADDRESS_GRANULARITY_BYTE \r\n        OPTIONAL_CMD SET_REQUEST \r\n        OPTIONAL_CMD GET_SEED \r\n        OPTIONAL_CMD UNLOCK \r\n        OPTIONAL_CMD SET_MTA \r\n        OPTIONAL_CMD SHORT_DOWNLOAD \r\n        OPTIONAL_CMD PROGRAM_START \r\n        OPTIONAL_CMD PROGRAM_CLEAR \r\n        OPTIONAL_CMD PROGRAM \r\n        OPTIONAL_CMD PROGRAM_RESET \r\n        OPTIONAL_CMD GET_PGM_PROCESSOR_INFO \r\n        OPTIONAL_CMD GET_SECTOR_INFO \r\n        OPTIONAL_CMD PROGRAM_PREPARE \r\n        OPTIONAL_CMD PROGRAM_NEXT \r\n        OPTIONAL_CMD PROGRAM_MAX \r\n        OPTIONAL_CMD PROGRAM_VERIFY \r\n        OPTIONAL_CMD TRANSPORT_LAYER_CMD \r\n        OPTIONAL_CMD GET_ID \r\n        OPTIONAL_CMD UPLOAD \r\n        OPTIONAL_CMD SHORT_UPLOAD \r\n        OPTIONAL_CMD BUILD_CHECKSUM \r\n        OPTIONAL_CMD DOWNLOAD_NEXT \r\n        OPTIONAL_CMD SET_CAL_PAGE \r\n        OPTIONAL_CMD GET_CAL_PAGE \r\n        OPTIONAL_CMD CLEAR_DAQ_LIST \r\n        OPTIONAL_CMD SET_DAQ_PTR \r\n        OPTIONAL_CMD WRITE_DAQ \r\n        OPTIONAL_CMD SET_DAQ_LIST_MODE \r\n        OPTIONAL_CMD GET_DAQ_LIST_MODE \r\n        OPTIONAL_CMD START_STOP_DAQ_LIST \r\n        OPTIONAL_CMD FREE_DAQ \r\n        OPTIONAL_CMD ALLOC_DAQ \r\n        OPTIONAL_CMD ALLOC_ODT \r\n        OPTIONAL_CMD ALLOC_ODT_ENTRY \r\n        OPTIONAL_CMD START_STOP_SYNCH \r\n        OPTIONAL_CMD DOWNLOAD \r\n        OPTIONAL_CMD MODIFY_BITS \r\n        OPTIONAL_CMD GET_PAG_PROCESSOR_INFO \r\n        OPTIONAL_CMD GET_SEGMENT_INFO \r\n        OPTIONAL_CMD GET_PAGE_INFO \r\n        OPTIONAL_CMD SET_SEGMENT_MODE \r\n        OPTIONAL_CMD GET_SEGMENT_MODE \r\n        OPTIONAL_CMD COPY_CAL_PAGE \r\n        OPTIONAL_CMD GET_DAQ_CLOCK \r\n        OPTIONAL_CMD READ_DAQ \r\n        OPTIONAL_CMD GET_DAQ_LIST_MODE \r\n        OPTIONAL_CMD DOWNLOAD_MAX \r\n        COMMUNICATION_MODE_SUPPORTED \r\n          BLOCK \r\n            SLAVE \r\n            MASTER 0x14 0x5 \r\n      /end PROTOCOL_LAYER\r\n      /begin DAQ \r\n        STATIC 0x3 0x2 0x0 OPTIMISATION_TYPE_DEFAULT ADDRESS_EXTENSION_DAQ IDENTIFICATION_FIELD_TYPE_ABSOLUTE GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE 0x4 OVERLOAD_INDICATION_EVENT \r\n        PRESCALER_SUPPORTED \r\n        /begin TIMESTAMP_SUPPORTED \r\n          0x1 SIZE_DWORD UNIT_1US \r\n        /end TIMESTAMP_SUPPORTED\r\n        /begin DAQ_LIST \r\n          0x0 \r\n          DAQ_LIST_TYPE DAQ \r\n          MAX_ODT 0x5 \r\n          MAX_ODT_ENTRIES 0x7 \r\n        /end DAQ_LIST\r\n        /begin DAQ_LIST \r\n          0x1 \r\n          DAQ_LIST_TYPE DAQ \r\n          MAX_ODT 0x4 \r\n          MAX_ODT_ENTRIES 0x7 \r\n        /end DAQ_LIST\r\n        /begin DAQ_LIST \r\n          0x2 \r\n          DAQ_LIST_TYPE DAQ \r\n          MAX_ODT 0x3 \r\n          MAX_ODT_ENTRIES 0x7 \r\n        /end DAQ_LIST\r\n        /begin EVENT \r\n          \"5ms\" \"5ms\" 0x0 DAQ 0xFF 0x5 0x6 0xFF \r\n        /end EVENT\r\n        /begin EVENT \r\n          \"extEvent\" \"extEvent\" 0x1 DAQ 0xFF 0x1 0x9 0xFF \r\n        /end EVENT\r\n      /end DAQ\r\n      /begin XCP_ON_CAN \r\n        0x100 \r\n        CAN_ID_BROADCAST 0x52 \r\n        CAN_ID_MASTER 0x51 \r\n        CAN_ID_SLAVE 0x50 \r\n        BAUDRATE 0x7A120 \r\n      /end XCP_ON_CAN\r\n    /end IF_DATA\r\n \r\n \r\n\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  ETK Interface description                                                                       */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin IF_DATA ETK \r\n      /begin SOURCE  \"Engine_1\"  \r\n        103 \r\n        1 \r\n        QP_BLOB 0x101 1 DIRECT 23 MEASUREMENT 2952251460 1020 2952232964 2952243268 0 0 0 15000 256 0\r\n      /end SOURCE \r\n      /begin SOURCE  \"Engine_2\"  \r\n        103 \r\n        1 \r\n        QP_BLOB 0x101 2 DIRECT 21 MEASUREMENT 2952251460 1020 2952233996 2952244288 0 0 0 15000 256 0\r\n      /end SOURCE \r\n      /begin SOURCE  \"Engine_3\"  \r\n        103 \r\n        1 \r\n        QP_BLOB 0x101 3 DIRECT 19 MEASUREMENT 2952251460 1020 2952235028 2952245308 0 0 0 15000 256 0\r\n      /end SOURCE \r\n      /begin SOURCE  \"10ms_sync\"  \r\n        4 \r\n        1 \r\n        QP_BLOB 0x101 7 DIRECT 11 MEASUREMENT 2952251460 1020 2952239156 2952249388 0 0 0 10000 512 0\r\n      /end SOURCE \r\n      /begin SOURCE  \"100ms_sync\"  \r\n        5 \r\n        1 \r\n        QP_BLOB 0x101 8 DIRECT 9 MEASUREMENT 2952251460 1020 2952241212 2952250408 0 0 0 100000 512 0\r\n      /end SOURCE \r\n      \r\n      /begin TP_BLOB 0x1000103 INTERFACE_SPEED_100MBIT 0x0\r\n        /begin DISTAB_CFG  0xD 0x122 0x2 0x0 0x0\r\n          TRG_MOD 0x0 \r\n        /end DISTAB_CFG \r\n        ETK_CFG 0x10 0x1D 0x61 0x1 0x1 0xFF 0xFF 0x63 0xCF 0x7F 0x81 0x84 0x79 0x64 0xB 0x65 0x8C 0x66 0xA0 0x67 0x91 0x68 0x9E 0x78 0x79 0x7C 0xCB 0x73 0xBA \r\n        ETK_MAILBOX 0x11223344\r\n        EXRAM    0xAFF7FF00  0xFF\r\n        EXRAM    0xAFF7FF00  0xFF\r\n        PAGE_SWITCH_METHOD\r\n        0x1\r\n        MAILBOX  0x1 0x1F4 0xAFF7C928\r\n        AUTOSTART_BEHAVIOR ALWAYS_RP\r\n        OCT_WORKINGPAGE  0x400 0xAFF7C84C 0xDC\r\n      /end TP_BLOB \r\n    /end IF_DATA \r\n\r\n\r\n \r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  MOD_PAR with the memory segment descriptions                                                    */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n/begin MOD_PAR\r\n  \" \" \r\n  VERSION \"Test version of 01.01.2022\"\r\n  ADDR_EPK 0x45678\r\n  EPK \"EPROM identifier test\"\r\n  SUPPLIER \"TIER1_0\"\r\n  CUSTOMER \"OEM_0\"\r\n  CUSTOMER_NO \"0123456789\"\r\n  USER \"A.N.Wender\"\r\n  PHONE_NO \"99999 99999\"\r\n  ECU \"Engine control\"\r\n  ECU_CALIBRATION_OFFSET 0x1000\r\n  CPU_TYPE \"Motorola 0815\"\r\n  NO_OF_INTERFACES 2\r\n  /begin MEMORY_SEGMENT extRam \"\"\r\n    DATA\r\n    RAM\r\n    EXTERN\r\n    0x30000\r\n    0x1000\r\n    -1 -1 -1 -1 -1\r\n    /begin IF_DATA ASAP1B_KWP2000\r\n    /* ADDRESS_MAPPING orig_addr mapping_addr length */\r\n    ADDRESS_MAPPING 0x4000 0x6000 0x0200\r\n    /end IF_DATA\r\n  /end MEMORY_SEGMENT\r\n  /begin MEMORY_LAYOUT PRG_RESERVED\r\n    0x0000\r\n    0x0400\r\n    -1 -1 -1 -1 -1\r\n  /end MEMORY_LAYOUT\r\n  /begin MEMORY_LAYOUT PRG_CODE\r\n    0x0400\r\n    0x3C00\r\n    -1 -1 -1 -1 -1\r\n  /end MEMORY_LAYOUT\r\n  /begin MEMORY_LAYOUT PRG_DATA\r\n    0x4000\r\n    0x5800\r\n    -1 -1 -1 -1 -1\r\n  /end MEMORY_LAYOUT\r\n  SYSTEM_CONSTANT \"CONTROLLERx constant1\" \"0.33\"\r\n  SYSTEM_CONSTANT \"CONTROLLERx constant2\" \"2.79\"\r\n  /begin CALIBRATION_METHOD\r\n    „InCircuit“\r\n    2\r\n    /begin CALIBRATION_HANDLE\r\n      0x10000 /* start address of pointer table */\r\n      0x200 /* length of pointer table */\r\n      0x4 /* size of one pointer table entry */\r\n      0x10000 /* start address of flash section */\r\n      0x10000 /* length of flash section */\r\n      CALIBRATION_HANDLE_TEXT \"YourTextHere\"\r\n    /end CALIBRATION_HANDLE\r\n  /end CALIBRATION_METHOD\r\n/end MOD_PAR\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Computation Methods used to convert the ECU internal values to the physical values              */\r\n/*                                                                                                  */\r\n/*  the types IDENTICAL, LINEAR and RAT_FUNC should be used as standard                             */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin COMPU_METHOD CM.IDENTICAL\r\n      \" \"nothing\" \"\r\n      IDENTICAL \r\n      \"%3.0\" \r\n      \"hours\"\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD Velocity\r\n      \"conversion method for velocity\"\r\n      RAT_FUNC\r\n      \"%6.2\"\r\n      \"[km/h]\"\r\n      COEFFS 0 100 0 0 0 1\r\n      REF_UNIT kms_per_hour\r\n    /end COMPU_METHOD\r\n\r\n\r\n    /begin COMPU_METHOD CM.LINEAR.IDENT\r\n      \"Linear function with parameter set for phys = f(int) = 1*int + 0\"\r\n      LINEAR \"%3.1\" \"m/s\"\r\n      COEFFS_LINEAR 1 0\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.LINEAR.IDENT.STATUS_STRING\r\n      \"Linear function with parameter set for phys = f(int) = 1*int + 0\"\r\n      LINEAR \"%3.1\" \"m/s\"\r\n      COEFFS_LINEAR 1 0\r\n      STATUS_STRING_REF CM.TAB_VERB.STATUS_STRING.REF\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.LINEAR.MUL_2\r\n      \"Linear function with parameter set for phys = f(int) = 2*int + 0\"\r\n      LINEAR \"%3.1\" \"m/s\"\r\n      COEFFS_LINEAR 2 0\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.RAT_FUNC.IDENT\r\n      \"rational function with parameter set for int = f(phys) = phys\"\r\n      RAT_FUNC \"%3.1\" \"m/s\"\r\n      COEFFS 0 1 0 0 0 1\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.RAT_FUNC.IDENT.STATUS_STRING\r\n      \"rational function with parameter set for int = f(phys) = phys\"\r\n      RAT_FUNC \"%3.1\" \"m/s\"\r\n      COEFFS 0 1 0 0 0 1\r\n      STATUS_STRING_REF CM.TAB_VERB.STATUS_STRING.REF\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.RAT_FUNC.DIV_10 \r\n      \"rational function with parameter set for impl = f(phys) = phys * 10\"\r\n      RAT_FUNC \"%3.1\" \"km/h\"\r\n      COEFFS 0 10 0 0 0 1\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.RAT_FUNC.HYPERBOLIC \r\n      \"rational function with parameter set for impl = f(phys) = 1 / x\"\r\n      RAT_FUNC \"%3.1\" \"km/h\"\r\n      COEFFS 0 0 1 0 1 0\r\n    /end COMPU_METHOD\r\n\r\n    /begin COMPU_METHOD CM.RAT_FUNC.DIV_81_9175\r\n      \"rational function with parameter set for impl = f(phys) = phys * 81.9175\"\r\n      RAT_FUNC \"%8.4\" \"grad C\"\r\n      COEFFS 0 81.9175 0 0 0 1\r\n    /end COMPU_METHOD\r\n\r\n    \r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  type FORM should only be used if the computation is complex and not feasible by RAT_FUNC        */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  FORM is neccessary for VIRTUAL measuerments                                                     */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin COMPU_METHOD CM.FORM.X_PLUS_4 \r\n      \"\" \r\n      FORM \r\n      \"%6.1\" \r\n      \"rpm\" \r\n      /begin FORMULA\r\n        \"X1+4\" \r\n        FORMULA_INV \"X1-4\"\r\n      /end FORMULA\r\n    /end COMPU_METHOD \r\n\r\n\r\n    /begin COMPU_METHOD CM.VIRTUAL.EXTERNAL_VALUE \r\n      \"\" \r\n      FORM \r\n      \"%6.1\" \r\n      \"rpm\" \r\n      /begin FORMULA\r\n        \"4*X1\"                                             /* FORMULA_INV not needed here */\r\n      /end FORMULA\r\n    /end COMPU_METHOD \r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  type TAB_INTP and TAB_NOINTP should only be used if the computation is complex and not          */\r\n/*  feasible by RAT_FUNC                                                                            */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin COMPU_METHOD CM.TAB_INTP.DEFAULT_VALUE\r\n      \"\" \r\n      TAB_INTP \"%8.4\" \"U/  min  \" \r\n      COMPU_TAB_REF CM.TAB_INTP.DEFAULT_VALUE.REF\r\n    /end COMPU_METHOD \r\n\r\n    /begin COMPU_TAB CM.TAB_INTP.DEFAULT_VALUE.REF   \r\n       \"\" \r\n       TAB_INTP \r\n       12 \r\n       -3 98   \r\n       -1 99   \r\n       0 100\r\n       2 102   \r\n       4 104  \r\n       5 105  \r\n       6 106 \r\n       7 107  \r\n       8 108  \r\n       9 109  \r\n       10 110  \r\n       13 111\r\n       DEFAULT_VALUE_NUMERIC 300.56                        /* DEFAULT_VALUE_NUMERIC should be used here as the normal output is numeric */\r\n    /end COMPU_TAB \r\n\r\n    /begin COMPU_METHOD CM.TAB_INTP.NO_DEFAULT_VALUE\r\n      \"\" \r\n      TAB_INTP \"%8.4\" \"U/  min  \" \r\n      COMPU_TAB_REF CM.TAB_INTP.NO_DEFAULT_VALUE.REF\r\n    /end COMPU_METHOD \r\x10    \r\n    /begin COMPU_TAB CM.TAB_INTP.NO_DEFAULT_VALUE.REF   \r\n       \"\" \r\n       TAB_INTP \r\n       12 \r\n       -3 98   \r\n       -1 99   \r\n       0 100\r\n       2 102   \r\n       4 104  \r\n       5 105  \r\n       6 106 \r\n       7 107  \r\n       8 108  \r\n       9 109  \r\n       10 110  \r\n       13 111\r\n    /end COMPU_TAB \r\n\r\n\r\n    /begin COMPU_METHOD CM.TAB_NOINTP.DEFAULT_VALUE\r\n      \"\" \r\n      TAB_NOINTP \"%8.4\" \"U/  min  \" \r\n      COMPU_TAB_REF CM.TAB_NOINTP.DEFAULT_VALUE.REF\r\n    /end COMPU_METHOD \r\n    \r\n    /begin COMPU_TAB CM.TAB_NOINTP.DEFAULT_VALUE.REF   \r\n       \"\" \r\n       TAB_NOINTP \r\n       12 \r\n       -3 98   \r\n       -1 99   \r\n       0 100\r\n       2 102   \r\n       4 104  \r\n       5 105  \r\n       6 106 \r\n       7 107  \r\n       8 108  \r\n       9 109  \r\n       10 110  \r\n       13 111\r\n       DEFAULT_VALUE_NUMERIC 300.56                        /* DEFAULT_VALUE_NUMERIC should be used here as the normal output is numeric */\r\n    /end COMPU_TAB \r\n\r\n    /begin COMPU_METHOD CM.TAB_NOINTP.NO_DEFAULT_VALUE\r\n      \"\" \r\n      TAB_NOINTP \"%8.4\" \"U/  min  \" \r\n      COMPU_TAB_REF CM.TAB_NOINTP.NO_DEFAULT_VALUE.REF\r\n    /end COMPU_METHOD \r\n    \r\n    /begin COMPU_TAB CM.TAB_NOINTP.NO_DEFAULT_VALUE.REF   \r\n       \"\" \r\n       TAB_NOINTP \r\n       12 \r\n       -3 98   \r\n       -1 99   \r\n       0 100\r\n       2 102   \r\n       4 104  \r\n       5 105  \r\n       6 106 \r\n       7 107  \r\n       8 108  \r\n       9 109  \r\n       10 110  \r\n       13 111\r\n    /end COMPU_TAB \r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  type TAB_VERB and TAB_VERB_RANGE allow to convert to text                                       */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  Testbench with ASAP3 do not support text. It is common use that the MCD tools transfer the      */\r\n/*  internal value instead                                                                          */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin COMPU_METHOD CM.TAB_VERB.DEFAULT_VALUE\r\n      \"Verbal conversion with default value\"\r\n      TAB_VERB \"%12.0\" \"\"\r\n      COMPU_TAB_REF CM.TAB_VERB.DEFAULT_VALUE.REF\r\n    /end COMPU_METHOD\r\n    /begin COMPU_VTAB CM.TAB_VERB.DEFAULT_VALUE.REF\r\n      \"List of text strings and relation to impl value\" \r\n      TAB_VERB 3\r\n      1 \"SawTooth\"\r\n      2 \"Square\"\r\n      3 \"Sinus\"\r\n      DEFAULT_VALUE \"unknown signal type\"\r\n    /end COMPU_VTAB\r\n\r\n    /begin COMPU_VTAB CM.TAB_VERB.STATUS_STRING.REF\r\n      \"List of text strings and relation to impl value\" \r\n      TAB_VERB 3\r\n      253 \"Sensor not calibrated\"\r\n      254 \"Sensor not connected\"\r\n      255 \"Sensor defect\"\r\n    /end COMPU_VTAB\r\n\r\n    /begin COMPU_METHOD CM.TAB_VERB.NO_DEFAULT_VALUE\r\n      \"Verbal conversion without default value\"\r\n      TAB_VERB \"%12.0\" \"\"\r\n      COMPU_TAB_REF CM.TAB_VERB.NO_DEFAULT_VALUE.REF\r\n    /end COMPU_METHOD\r\n    /begin COMPU_VTAB CM.TAB_VERB.NO_DEFAULT_VALUE.REF\r\n      \"List of text strings and relation to impl value\" \r\n      TAB_VERB 6\r\n      2 \"red\"\r\n      3 \"orange\"\r\n      4 \"yellow\"\r\n      5 \"green\"\r\n      6 \"blue\"\r\n      7 \"violet\"\r\n    /end COMPU_VTAB\r\n\r\n\r\n    /begin COMPU_METHOD CM.VTAB_RANGE.DEFAULT_VALUE \r\n       \"verbal range with default value\" \r\n       TAB_VERB \r\n       \"%4.2\" \r\n       \"\" \r\n       COMPU_TAB_REF CM.VTAB_RANGE.DEFAULT_VALUE.REF \r\n    /end COMPU_METHOD \r\n    \r\n    /begin COMPU_VTAB_RANGE CM.VTAB_RANGE.DEFAULT_VALUE.REF \r\n       \"\" \r\n       11 \r\n       0 1 \"Zero_to_one\" \r\n       2 3 \"two_to_three\" \r\n       4 7 \"four_to_seven\" \r\n       14 17 \"fourteen_to_seventeen\" \r\n       18 99 \"eigteen_to_ninetynine\" \r\n       100 100 \"hundred\" \r\n       101 101 \"hundredone\" \r\n       102 102 \"hundredtwo\" \r\n       103 103 \"hundredthree\" \r\n       104 104 \"hundredfour\" \r\n       105 105 \"hundredfive\" \r\n       DEFAULT_VALUE \"out of range value\"\r\n    /end COMPU_VTAB_RANGE \r\n\r\n    /begin COMPU_METHOD CM.VTAB_RANGE.NO_DEFAULT_VALUE \r\n       \"verbal range without default value\" \r\n       TAB_VERB \r\n       \"%4.2\" \r\n       \"\" \r\n       COMPU_TAB_REF CM.VTAB_RANGE.NO_DEFAULT_VALUE.REF \r\n    /end COMPU_METHOD \r\n    \r\n    /begin COMPU_VTAB_RANGE CM.VTAB_RANGE.NO_DEFAULT_VALUE.REF \r\n       \"\" \r\n       11 \r\n       0 1 \"Zero_to_one\" \r\n       2 3 \"two_to_three\" \r\n       4 7 \"four_to_seven\" \r\n       14 17 \"fourteen_to_seventeen\" \r\n       18 99 \"eigteen_to_ninetynine\" \r\n       100 100 \"hundred\" \r\n       101 101 \"hundredone\" \r\n       102 102 \"hundredtwo\" \r\n       103 103 \"hundredthree\" \r\n       104 104 \"hundredfour\" \r\n       105 105 \"hundredfive\" \r\n    /end COMPU_VTAB_RANGE \r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Measurements                                                                                    */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  In this example the values for Resolution and Accuracy are set to \"0\" as they are normally      */\r\n/*  not evaluated by measurement and calibration tools                                              */\r\n/*  It is allowed to use the same address for multiple measurements. By this it is possible         */\r\n/*  to use different bitmasks / computation methods for the same int value                          */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  There is for each data type one example                                                         */\r\n/*  With one data type (UBYTE) there is for each computation method an example                      */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.IDENTICAL\r\n      \"Scalar measurement\"\r\n      UBYTE CM.IDENTICAL 0 0 0 255\r\n      ECU_ADDRESS 0x13A00\r\n      FORMAT \"%5.0\"    /* Note: Overwrites the format stated in the computation method */\r\n      DISPLAY_IDENTIFIER DI.ASAM.M.SCALAR.UBYTE.IDENTICAL    /* optional display identifier */\r\n      ARRAY_SIZE 1\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 2 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT N\r\n      \"Engine speed\"\r\n      UWORD\r\n      R_SPEED_3\r\n      1\r\n      0\r\n      120.0\r\n      8400.0\r\n      ECU_ADDRESS\r\n      0x12345\r\n      ECU_ADDRESS_EXTENSION 1\r\n      READ_WRITE\r\n      /begin FUNCTION_LIST\r\n        MEASUREMENT ASAM.M.SCALAR.UBYTE.IDENTICAL.STATUS_STRING\r\n        MEASUREMENT ASAM.M.SCALAR.UBYTE.RAT_FUNC.IDENT.STATUS_STRING\r\n      /end FUNCTION_LIST\r\n    /end MEASUREMENT\r\n\r\n    /begin FUNCTION\r\n      ID_ADJUSTM\r\n      /* name */\r\n      \"function group idling adjustment\"\r\n      /begin DEF_CHARACTERISTIC INJECTION_CURVE\r\n      /end DEF_CHARACTERISTIC\r\n      /begin REF_CHARACTERISTIC FACTOR_1\r\n      /end REF_CHARACTERISTIC\r\n      /begin IN_MEASUREMENT\r\n        WHEEL_REVOLUTIONS ENGINE_SPEED\r\n      /end IN_MEASUREMENT\r\n      /begin OUT_MEASUREMENT\r\n        OK_FLAG SENSOR_FLAG\r\n      /end OUT_MEASUREMENT\r\n      /begin LOC_MEASUREMENT\r\n        LOOP_COUNTER TEMPORARY_1\r\n      /end LOC_MEASUREMENT\r\n      /begin SUB_FUNCTION\r\n        ID_ADJUSTM_SUB\r\n      /end SUB_FUNCTION\r\n    /end FUNCTION\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.IDENTICAL.STATUS_STRING\r\n      \"Scalar measurement with status string\"\r\n      UBYTE CM.LINEAR.IDENT.STATUS_STRING 0 0 0 252   /* restricted limits to exclude status string values from standard measure range */\r\n      ECU_ADDRESS 0x13A00\r\n      FORMAT \"%5.0\"    /* Note: Overwrites the format stated in the computation method */\r\n      DISPLAY_IDENTIFIER DI.ASAM.M.SCALAR.UBYTE.IDENTICAL.STATUS_STRING    /* optional display identifier */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 2 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.RAT_FUNC.IDENT.STATUS_STRING\r\n      \"Scalar measurement with status string\"\r\n      UBYTE CM.RAT_FUNC.IDENT.STATUS_STRING 0 0 0 252   /* restricted limits to exclude status string values from standard measure range */\r\n      ECU_ADDRESS 0x13A00\r\n      FORMAT \"%5.0\"    /* Note: Overwrites the format stated in the computation method */\r\n      DISPLAY_IDENTIFIER DI.ASAM.M.SCALAR.UBYTE.IDENTICAL.STATUS_STRING    /* optional display identifier */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.RAT_FUNC.DIV_10\r\n      \"Scalar measurement with status string\"\r\n      UBYTE  CM.RAT_FUNC.DIV_10 0 0 0 252   /* restricted limits to exclude status string values from standard measure range */\r\n      ECU_ADDRESS 0x13A00\r\n      FORMAT \"%5.0\"    /* Note: Overwrites the format stated in the computation method */\r\n      DISPLAY_IDENTIFIER DI.ASAM.M.SCALAR.UBYTE.RAT_FUNC.DIV_10    /* optional display identifier */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 5 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.HYPERBOLIC\r\n      \"Scalar measurement with status string\"\r\n      UBYTE  CM.RAT_FUNC.HYPERBOLIC 0 0 0 252   /* restricted limits to exclude status string values from standard measure range */\r\n      ECU_ADDRESS 0x13A00\r\n      FORMAT \"%5.0\"    /* Note: Overwrites the format stated in the computation method */\r\n      DISPLAY_IDENTIFIER DI.ASAM.M.SCALAR.UBYTE.RAT_FUNC.HYPERBOLIC    /* optional display identifier */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.TAB_VERB_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.TAB_VERB.DEFAULT_VALUE 0 0 0 255\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 5 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion\"\r\n      UBYTE CM.TAB_VERB.NO_DEFAULT_VALUE 0 0 0 255\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 23 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.VTAB_RANGE_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.VTAB_RANGE.DEFAULT_VALUE 0 0 0 255\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 1 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.VTAB_RANGE_NO_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.VTAB_RANGE.NO_DEFAULT_VALUE 0 0 0 101       /* the limits should not exceed the limits of the computation method ! otherwise the physical representation could be misleading */\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 1 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.TAB_INTP_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.TAB_INTP.DEFAULT_VALUE 0 0 0 255\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 2 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.TAB_INTP_NO_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.TAB_INTP.NO_DEFAULT_VALUE 0 0 0 13          /* the limits should not exceed the limits of the computation method ! otherwise the physical representation could be misleading */\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 19 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.TAB_NOINTP_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.TAB_NOINTP.DEFAULT_VALUE 0 0 0 255\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 1 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.TAB_NOINTP_NO_DEFAULT_VALUE\r\n      \"Scalar measurement with verbal conversion and default value\"\r\n      UBYTE CM.TAB_NOINTP.NO_DEFAULT_VALUE 0 0 0 13        /* the limits should not exceed the limits of the computation method ! otherwise the physical representation could be misleading */\r\n      ECU_ADDRESS 0x13A00                                  /* same address as SAM.SCALAR.UBYTE.IDENTICAL -> same int value but different phys value */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UBYTE.FORM_X_PLUS_4\r\n      \"Scalar measurement\"\r\n      UBYTE CM.FORM.X_PLUS_4 0 0 4 259\r\n      ECU_ADDRESS 0x13A00\r\n      FORMAT \"%5.0\"    /* Note: Overwrites the format stated in the computation method */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A00 INTERN 1 RASTER 5 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.SBYTE.IDENTICAL\r\n      \"Scalar measurement\"\r\n      SBYTE CM.IDENTICAL 0 0 -128 127\r\n      ECU_ADDRESS 0x13A01\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A01 INTERN 1 RASTER 3 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.SBYTE.IDENTICAL.DISCRETE\r\n      \"Scalar measurement\"\r\n      SBYTE CM.IDENTICAL 0 0 -128 127\r\n      ECU_ADDRESS 0x13A01\r\n      FORMAT \"%5.0\"\r\n      DISCRETE\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A01 INTERN 1 RASTER 3 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2\r\n      \"Scalar measurement\"\r\n      SBYTE CM.LINEAR.MUL_2 0 0 -256 254\r\n      ECU_ADDRESS 0x13A01                                  /* same address as ASAM.M.SCALAR.SBYTE.IDENTICAL -> same int value but different phys value */\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A01 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UWORD.IDENTICAL\r\n      \"Scalar measurement\"\r\n      UWORD CM.IDENTICAL 0 0 0 65535\r\n      ECU_ADDRESS 0x13A02\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A02 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.SWORD.IDENTICAL\r\n      \"Scalar measurement\"\r\n      SWORD CM.IDENTICAL 0 0 -32268 32267\r\n      ECU_ADDRESS 0x13A04\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A04 INTERN 1 RASTER 1 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.ULONG.IDENTICAL\r\n      \"Scalar measurement\"\r\n      ULONG CM.IDENTICAL 0 0 0 4294967295\r\n      ECU_ADDRESS 0x13A08\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A08 INTERN 1 RASTER 2 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.SLONG.IDENTICAL\r\n      \"Scalar measurement\"\r\n      SLONG CM.IDENTICAL 0 0 -2147483648 2147483647\r\n      ECU_ADDRESS 0x13A0C\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A0C INTERN 1 RASTER 1 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.FLOAT32.IDENTICAL\r\n      \"Scalar measurement\"\r\n      FLOAT32_IEEE CM.IDENTICAL 0 0 -1e24 1e24\r\n      ECU_ADDRESS 0x13A10\r\n      FORMAT \"%8.4\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A10 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.FLOAT32.IDENTICAL.DISCRETE\r\n      \"Scalar measurement\"\r\n      FLOAT32_IEEE CM.IDENTICAL 0 0 -1e24 1e24\r\n      ECU_ADDRESS 0x13A10\r\n      FORMAT \"%8.4\"\r\n      DISCRETE\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A10 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.FLOAT64.IDENTICAL\r\n      \"Scalar measurement\"\r\n      FLOAT64_IEEE CM.IDENTICAL 0 0 -1e308 1e308\r\n      ECU_ADDRESS 0x13A14\r\n      FORMAT \"%8.4\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A14 INTERN 1 RASTER 5 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      \"Scalar measurement with Bitmask for a bit-area\"\r\n      UWORD CM.IDENTICAL 0 0 0 255\r\n      BIT_MASK 0x0FF0\r\n      /begin BIT_OPERATION\r\n        LEFT_SHIFT 0\r\n        SIGN_EXTEND\r\n      /end BIT_OPERATION\r\n      ECU_ADDRESS 0x13A20\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A20 INTERN 1 RASTER 5 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    /begin MEASUREMENT ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0008\r\n      \"Scalar measurement with Bitmask for a single bit\"\r\n      UWORD CM.IDENTICAL 0 0 0 1\r\n      BIT_MASK 0x0008\r\n      /begin BIT_OPERATION\r\n        RIGHT_SHIFT 0\r\n      /end BIT_OPERATION\r\n      ECU_ADDRESS 0x13A20\r\n      FORMAT \"%5.0\"\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A20 INTERN 1 RASTER 2 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n\r\n    /begin MEASUREMENT ASAM.M.MATRIX_DIM_16_1.UBYTE.IDENTICAL\r\n      \"Scalar measurement\"\r\n      UBYTE CM.IDENTICAL 0 0 0 255\r\n      ECU_ADDRESS 0x13A30\r\n      FORMAT \"%5.0\"\r\n      MATRIX_DIM 16 1                                      /* describes a 2-dim object where the y-range has only 1 implementation - different object type for ASAP3 / MCD3 ! */\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A30 INTERN 1 RASTER 3 /end IF_DATA\r\n    /end MEASUREMENT\r\n    \r\n    /begin MEASUREMENT ASAM.M.MATRIX_DIM_16.UBYTE.IDENTICAL\r\n      \"Scalar measurement\"\r\n      UBYTE CM.IDENTICAL 0 0 0 255\r\n      ECU_ADDRESS 0x13A30\r\n      FORMAT \"%5.0\"\r\n      MATRIX_DIM 16\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A30 INTERN 1 RASTER 4 /end IF_DATA\r\n    /end MEASUREMENT\r\n    \r\n    /begin MEASUREMENT ASAM.M.MATRIX_DIM_8_2.UBYTE.IDENTICAL\r\n      \"Scalar measurement\"\r\n      UBYTE CM.IDENTICAL 0 0 0 255\r\n      ECU_ADDRESS 0x13A30\r\n      FORMAT \"%5.0\"\r\n      MATRIX_DIM 8 2\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A30 INTERN 1 RASTER 1 /end IF_DATA\r\n    /end MEASUREMENT\r\n    \r\n    /begin MEASUREMENT ASAM.M.MATRIX_DIM_8_4_2.UBYTE.IDENTICAL\r\n      \"Scalar measurement\"\r\n      UBYTE CM.IDENTICAL 0 0 0 255\r\n      ECU_ADDRESS 0x13A30\r\n      FORMAT \"%5.0\"\r\n      MATRIX_DIM 8 4 2\r\n      /begin IF_DATA ETK  KP_BLOB 0x13A30 INTERN 1 RASTER 2 /end IF_DATA\r\n    /end MEASUREMENT\r\n\r\n    \r\n    /begin MEASUREMENT ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL\r\n      \"Virtual measurement with 2 * ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2 as input (based on the phys value of ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2\"\r\n      SWORD \r\n      CM.VIRTUAL.EXTERNAL_VALUE                            /* computation method defines how the virtual measurement is calculated out of the input measurement */\r\n      0 0 -32768 32767\r\n      ECU_ADDRESS 0x0                                      /* no real address, measurement value is calculated by the MCD tool */\r\n      /begin VIRTUAL\r\n        ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2                   /* defines the input used for the computation metthod */\r\n      /end VIRTUAL\r\n    /end MEASUREMENT\r\n\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Record Layouts for Characteristics (Parameters)                                                 */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.UBYTE.ROW_DIR\r\n      FNC_VALUES 1 UBYTE ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.SBYTE.ROW_DIR\r\n      FNC_VALUES 1 SBYTE ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.UWORD.ROW_DIR\r\n      FNC_VALUES 1 UWORD ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.SWORD.ROW_DIR\r\n      FNC_VALUES 1 SWORD ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.ULONG.ROW_DIR\r\n      FNC_VALUES 1 ULONG ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.SLONG.ROW_DIR\r\n      FNC_VALUES 1 SLONG ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      FNC_VALUES 1 FLOAT32_IEEE ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.FLOAT64_IEEE.ROW_DIR\r\n      FNC_VALUES 1 FLOAT64_IEEE ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.UBYTE.COLUMN_DIR\r\n      FNC_VALUES 1 UBYTE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.SBYTE.COLUMN_DIR\r\n      FNC_VALUES 1 SBYTE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.UWORD.COLUMN_DIR\r\n      FNC_VALUES 1 UWORD COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.SWORD.COLUMN_DIR\r\n      FNC_VALUES 1 SWORD COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.ULONG.COLUMN_DIR\r\n      FNC_VALUES 1 ULONG COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.SLONG.COLUMN_DIR\r\n      FNC_VALUES 1 SLONG COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.FLOAT32_IEEE.COLUMN_DIR\r\n      FNC_VALUES 1 FLOAT32_IEEE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.FNC.FLOAT64_IEEE.COLUMN_DIR\r\n      FNC_VALUES 1 FLOAT64_IEEE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n\r\n    /begin RECORD_LAYOUT RL.AXIS.UBYTE \r\n      AXIS_PTS_X 1 UBYTE INDEX_INCR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.AXIS.UWORD\r\n      AXIS_PTS_X 1 UWORD INDEX_INCR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n\r\n    /begin RECORD_LAYOUT RL.CURVE.SWORD.SBYTE.DECR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 2 SBYTE INDEX_DECR DIRECT\r\n      FNC_VALUES 3 SWORD ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.CURVE.SWORD.SBYTE.INCR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 2 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 3 SWORD ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.AXIS_PTS.SBYTE.DECR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 2 SBYTE INDEX_DECR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.AXIS_PTS.RES_AXIS\r\n      NO_RESCALE_X      1 UBYTE\r\n      RESERVED          2 BYTE                             /* to adapt the start of the rescale pairs to an even address */\r\n      AXIS_RESCALE_X    3 UBYTE 5 INDEX_INCR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.MAP.SWORD.SBYTE.SBYTE.INCR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Y 2 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 3 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 4 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 5 SWORD ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.CUBOID.SWORD.SBYTE.DECR \r\n      NO_AXIS_PTS_Z 1 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_Z 2 SBYTE INDEX_DECR DIRECT\r\n      FNC_VALUES 3 SWORD ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.CUBOID.ROW_DIR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Y 2 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Z 3 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 4 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 5 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Z 6 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 7 SBYTE ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.CUBOID.COLUMN_DIR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Y 2 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Z 3 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 4 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 5 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Z 6 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 7 SBYTE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.CUBE_4.ROW_DIR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Y 2 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Z 3 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_4 4 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 5 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 6 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Z 7 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_4 8 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 9 SBYTE ROW_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.CUBE_4.COLUMN_DIR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Y 2 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Z 3 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_4 4 UBYTE                                /* current number of axis points */\r\n      AXIS_PTS_X 5 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 6 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Z 7 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_4 8 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 9 SBYTE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT RL.5.COLUMN_DIR \r\n      NO_AXIS_PTS_X 1 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Y 2 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_Z 3 UBYTE                                /* current number of axis points */\r\n      NO_AXIS_PTS_4 4 UBYTE\r\n      NO_AXIS_PTS_5 5 UBYTE                                   /* current number of axis points */\r\n      AXIS_PTS_X 6 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 7 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_Z 8 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_4 9 SBYTE INDEX_INCR DIRECT\r\n      AXIS_PTS_5 10 SBYTE INDEX_INCR DIRECT\r\n      FNC_VALUES 11 SBYTE COLUMN_DIR DIRECT\r\n    /end RECORD_LAYOUT\r\n\r\n    /begin RECORD_LAYOUT\r\n      FNC_VALUES 7 SWORD COLUMN_DIR DIRECT\r\n      AXIS_PTS_X 3 SWORD INDEX_INCR DIRECT\r\n      AXIS_PTS_Y 6 UBYTE INDEX_INCR DIRECT\r\n      NO_AXIS_PTS_X 2 UBYTE\r\n      NO_AXIS_PTS_Y 5 UBYTE\r\n      SRC_ADDR_X 1 UBYTE\r\n      SRC_ADDR_Y 4 UBYTE\r\n      SRC_ADDR_Z 1 UBYTE\r\n      SRC_ADDR_4 1 UBYTE\r\n      SRC_ADDR_5 1 UBYTE\r\n      ALIGNMENT_BYTE 2\r\n      DIST_OP_X 21 UWORD\r\n      DIST_OP_Y 21 UWORD\r\n      DIST_OP_Z 21 UWORD\r\n      DIST_OP_4 21 UWORD\r\n      DIST_OP_5 21 UWORD\r\n      FIX_NO_AXIS_PTS_X 2\r\n      FIX_NO_AXIS_PTS_Y 5\r\n      FIX_NO_AXIS_PTS_Z 1\r\n      FIX_NO_AXIS_PTS_4 2\r\n      FIX_NO_AXIS_PTS_5 3\r\n      OFFSET_X 16 UWORD\r\n      OFFSET_Y 16 UWORD\r\n      OFFSET_Z 16 UWORD\r\n      OFFSET_4 16 UWORD\r\n      OFFSET_5 16 UWORD\r\n      RIP_ADDR_X 19 UWORD\r\n      RIP_ADDR_Y 19 UWORD\r\n      RIP_ADDR_Z 19 UWORD\r\n      RIP_ADDR_4 19 UWORD\r\n      RIP_ADDR_5 19 UWORD\r\n      RIP_ADDR_W 19 UWORD\r\n      SHIFT_OP_X 21 UWORD\r\n      SHIFT_OP_Y 21 UWORD\r\n      SHIFT_OP_Z 21 UWORD\r\n      SHIFT_OP_4 21 UWORD\r\n      SHIFT_OP_5 21 UWORD\r\n      IDENTIFICATION 1 UWORD\r\n      STATIC_RECORD_LAYOUT\r\n      STATIC_ADDRESS_OFFSETS\r\n    /end RECORD_LAYOUT\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Scalar Characteristics (Parameters)                                                             */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  MAX_DIF is always set to 0 as it is normally not evaluated by measurement and calibration tools */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  There is for each data type one example                                                         */\r\n/*  With one data type (SWORD) there is for each computation method an example                      */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      \"Scalar FW U16 and CDF20 as name\"\r\n      VALUE \r\n      0x810000 \r\n      RL.FNC.UBYTE.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      10 200\r\n      EXTENDED_LIMITS 0 256\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UBYTE\r\n      COMPARISON_QUANTITY ASAM.M.SCALAR.UBYTE.IDENTICAL\r\n      ECU_ADDRESS_EXTENSION 0\r\n      STEP_SIZE 0.025\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n      \"Scalar SBYTE\"\r\n      VALUE \r\n      0x810001 \r\n      RL.FNC.SBYTE.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100 100\r\n      EXTENDED_LIMITS -128 127\r\n      FORMAT \"%6.1\"                                         /* overwrites the format given in the computation method */\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UWORD.IDENTICAL\r\n      \"Scalar UWORD\"\r\n      VALUE \r\n      0x810002 \r\n      RL.FNC.UWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 65535\r\n      EXTENDED_LIMITS 0 65535\r\n      BIT_MASK 0xFFFF\r\n      FORMAT \"%5.0\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UWORD.IDENTICAL\r\n      /begin ANNOTATION\r\n        ANNOTATION_LABEL \"ASAM Workinggroup\"\r\n        ANNOTATION_ORIGIN \"\"\r\n        /begin ANNOTATION_TEXT\r\n          \"Test the A2L annotation\"\r\n        /end ANNOTATION_TEXT\r\n      /end ANNOTATION\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      \"Scalar UWORD\"\r\n      VALUE \r\n      0x810002 \r\n      RL.FNC.UWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 255\r\n      EXTENDED_LIMITS 0 65535\r\n      BIT_MASK 0x0FF0\r\n      FORMAT \"%5.0\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0001\r\n      \"Scalar UWORD\"\r\n      VALUE \r\n      0x810002 \r\n      RL.FNC.UWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 1\r\n      EXTENDED_LIMITS 0 65535\r\n      BIT_MASK 0x0001\r\n      PHYS_UNIT \"\"\r\n      FORMAT \"%5.0\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0001\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0010\r\n      \"Scalar UWORD\"\r\n      VALUE \r\n      0x810002 \r\n      RL.FNC.UWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 1\r\n      EXTENDED_LIMITS 0 65535\r\n      BIT_MASK 0x0010\r\n      PHYS_UNIT \"\"\r\n      FORMAT \"%5.0\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0010\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.IDENTICAL\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.IDENTICAL\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.LINEAR_MUL_2\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.LINEAR.MUL_2  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.LINEAR_MUL_2\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_10\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.RAT_FUNC.DIV_10  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_10\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.FORM_X_PLUS_4\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.FORM.X_PLUS_4  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.FORM_X_PLUS_4\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.TAB_INTP_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.TAB_INTP.DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.TAB_INTP_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.TAB_INTP_NO_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.TAB_INTP.NO_DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.TAB_INTP_NO_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.TAB_NOINTP_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.TAB_NOINTP.DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.TAB_NOINTP_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.TAB_NOINTP_NO_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.TAB_NOINTP.NO_DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.TAB_NOINTP_NO_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.TAB_VERB_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.TAB_VERB.DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.TAB_VERB_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.TAB_VERB_NO_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.TAB_VERB.NO_DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.TAB_VERB_NO_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.VTAB_RANGE_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.VTAB_RANGE.DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.VTAB_RANGE_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.VTAB_RANGE_NO_DEFAULT_VALUE\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.VTAB_RANGE.NO_DEFAULT_VALUE  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD.VTAB_RANGE_NO_DEFAULT_VALUE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_81_9175\r\n      \"Scalar SWORD\"\r\n      VALUE \r\n      0x810004 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.RAT_FUNC.DIV_81_9175  \r\n      -10000 20000\r\n      EXTENDED_LIMITS -32268 32267\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SWORD\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.ULONG.IDENTICAL\r\n      \"Scalar ULONG\"\r\n      VALUE \r\n      0x810008 \r\n      RL.FNC.ULONG.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -1000000 2000000\r\n      EXTENDED_LIMITS -10000000 20000000\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.ULONG.IDENTICAL\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.SLONG.IDENTICAL\r\n      \"Scalar SLONG\"\r\n      VALUE \r\n      0x81000C \r\n      RL.FNC.SLONG.ROW_DIR                                 /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -1000000 2000000\r\n      EXTENDED_LIMITS -10000000 20000000\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.SLONG.IDENTICAL\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32_IEEE.IDENTICAL\r\n      \"Scalar FLOAT32_IEEE\"\r\n      VALUE \r\n      0x810010 \r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR                          /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      10 200\r\n      EXTENDED_LIMITS 0 256\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32_IEEE.IDENTICAL\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT64_IEEE.IDENTICAL\r\n      \"Scalar FLOAT64_IEEE\"\r\n      VALUE \r\n      0x810010 \r\n      RL.FNC.FLOAT64_IEEE.ROW_DIR                          /* ROW_DIR / COLUMN_DIR is here exchangeable as only one value is stored */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100 200\r\n      EXTENDED_LIMITS -10000.0 20000.0\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT64_IEEE.IDENTICAL\r\n    /end CHARACTERISTIC\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Array Characteristics (Parameters)                                                              */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  All examples are based on SWORD. For other data types see scalare parameters                    */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  For curve are examples for all kind of axis available                                           */\r\n/*  For map, cuboid are examples with mixed axis types available                                    */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n\r\n    /begin CHARACTERISTIC ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR \r\n      \"Array 3x4 of SWORD\"\r\n      VAL_BLK \r\n      0x810100 \r\n      RL.FNC.SWORD.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 3 4\r\n      FORMAT \"%8.4\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.COLUMN_DIR \r\n      \"Array 3x4 of SWORD\"\r\n      VAL_BLK \r\n      0x810120 \r\n      RL.FNC.SWORD.COLUMN_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 3 4\r\n      FORMAT \"%8.4\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.COLUMN_DIR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.ARRAY.SWORD.MATRIX_DIM_6.ROW_DIR \r\n      \"Array 6 of SWORD\"\r\n      VAL_BLK \r\n      0x810140 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* COLUMN_DIR results here in the same memory usage as only one dimension is used */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 6\r\n      FORMAT \"%8.4\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.ARRAY.SWORD.MATRIX_DIM_6.ROW_DIR\r\n    /end CHARACTERISTIC\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  ASCII Characteristics (Parameters)                                                              */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  All examples are based on UBYTE. This is necessary for ASCII                                    */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  NUMBER shall state the maximum (fixed) size of memory available on the ECU                      */\r\n/*  The string representation in the MCD tool is normally 0-terminated. There the string may be     */\r\n/*  limited earlier                                                                                 */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin CHARACTERISTIC \r\n      ASAM.C.ASCII.UBYTE.NUMBER_42\r\n      \"ASCII string\" \r\n      ASCII \r\n      0x810200\r\n      RL.FNC.UBYTE.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL \r\n      0 255 \r\n      NUMBER 42 \r\n      DISPLAY_IDENTIFIER DI.ASAM.C.ASCII.UBYTE.NUMBER_42\r\n    /end CHARACTERISTIC \r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Curve, Map, Quboid Characteristics (Parameters)                                                 */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  All examples are based on SWORD. For other data types see scalare parameters                    */\r\n/*  It is allowed to use the same address for multiple characteristics. By this it is possible      */\r\n/*  to use different representations for the same internal values                                   */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  For curve are examples for all kind of axis available                                           */\r\n/*  For map, cuboid are examples with mixed axis types available                                    */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.STD_AXIS\r\n      \"Curve with standard axis\"\r\n      CURVE \r\n      0x810300                                             /* memory needed: 1x Byte for no of axis points, 8x Byte for axis points + 8x word for output values */\r\n      RL.CURVE.SWORD.SBYTE.DECR                            /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -255 255                                             /* limit to a range that allows a multiplication with a byte (curve is used as input for a dependent parameter) */ \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8 \r\n        -128 127\r\n        MAX_GRAD 100.0\r\n      /end AXIS_DESCR\r\n      EXTENDED_LIMITS -32268 32267                         /* extended range to test an overflow for the dependent calculation */\r\n      FORMAT \"%8.3\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.STD_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.STD_AXIS.DISCRETE\r\n      \"Curve with standard axis\"\r\n      CURVE \r\n      0x810300                                             /* memory needed: 1x Byte for no of axis points, 8x Byte for axis points + 8x word for output values */\r\n      RL.CURVE.SWORD.SBYTE.DECR                            /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      FORMAT \"%8.3\"\r\n      DISCRETE\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.STD_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.COM_AXIS\r\n      \"Curve with common axis\"\r\n      CURVE \r\n      0x810320\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8                                                  /* will be overwritten by max number of axis points of AXIS_PTS */\r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.COM_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.COM_AXIS_2\r\n      \"Curve with common axis\"\r\n      CURVE \r\n      0x810330\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8                                                  /* will be overwritten by max number of axis points of AXIS_PTS */\r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.COM_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin AXIS_PTS ASAM.C.AXIS_PTS.UBYTE_8 \r\n      \"\"\r\n      0x810340\r\n      ASAM.M.SCALAR.UBYTE.IDENTICAL                        /* will be overwritten by input quantity of AXIS_DESCR */\r\n      RL.AXIS_PTS.SBYTE.DECR                               /* Record layout that covers axis values */\r\n      0 \r\n      CM.IDENTICAL                                         /* will be overwritten by computation method of AXIS_DESCR */\r\n      8 \r\n      0 255\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.AXIS_PTS.UBYTE_8\r\n      REF_MEMORY_SEGMENT Data1\r\n      SYMBOL_LINK \"_VehicleSpeed\" 0\r\n    /end AXIS_PTS\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.FIX_AXIS.PAR_DIST\r\n      \"Curve with fix axis and FIX_AXIS_PAR_DIST\"\r\n      CURVE \r\n      0x810350\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        6 \r\n        -128 127\r\n        FIX_AXIS_PAR 0 4 6\r\n        FIX_AXIS_PAR_DIST 1 1 6\r\n        /begin FIX_AXIS_PAR_LIST 2 5 9\r\n        /end FIX_AXIS_PAR_LIST\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.FIX_AXIS.PAR_DIST\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.FIX_AXIS.PAR\r\n      \"Curve with fix axis and FIX_AXIS_PAR\"\r\n      CURVE \r\n      0x810360\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        6 \r\n        -128 127\r\n        FIX_AXIS_PAR_DIST 0 4 6\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.FIX_AXIS.PAR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.FIX_AXIS.PAR_LIST\r\n      \"Curve with fix axis and FIX_AXIS_PAR_LIST\"\r\n      CURVE \r\n      0x810370\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        6                                                  /* shall match the number of axis points listed in FIX_AXIS_PAR_LIST */\r\n        -128 127\r\n        /begin FIX_AXIS_PAR_LIST\r\n          -1 4 6 8 9 10\r\n        /end FIX_AXIS_PAR_LIST\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.FIX_AXIS.PAR_LIST\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.CURVE_AXIS\r\n      \"Curve with curve axis\"\r\n      CURVE \r\n      0x810380\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        CURVE_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        NO_COMPU_METHOD                                    /* CURVE_AXIS have no input conversion */  \r\n        8                                                  /* will be overwritten by max number of axis points of AXIS_PTS */\r\n        -128 127\r\n        CURVE_AXIS_REF ASAM.C.CURVE_AXIS\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.COM_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE_AXIS\r\n      \"Curve used as axis\"\r\n      CURVE \r\n      0x810390 \r\n      RL.CURVE.SWORD.SBYTE.INCR                            /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.RES_AXIS\r\n      \"Curve with rescale axis\"\r\n      CURVE \r\n      0x8103B0\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        RES_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        9                                                  /* will be overwritten by number of rescale pairs */\r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.RESCALE\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.RES_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin AXIS_PTS ASAM.C.AXIS_PTS.RESCALE \r\n      \"Rescale Axis\" \r\n      0x8103D0\r\n      ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n      RL.AXIS_PTS.RES_AXIS \r\n      0 \r\n      CM.IDENTICAL \r\n      5 \r\n      0 255 \r\n      DISPLAY_IDENTIFIER DI_0x83BA20.VTAB.RE_AXIS.X_RE_AXIS_xU8\r\n    /end AXIS_PTS\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.STD_AXIS.MONOTONY_STRICT_INCREASE\r\n      \"Curve with standard axis\"\r\n      CURVE \r\n      0x810500 \r\n      RL.CURVE.SWORD.SBYTE.DECR                            /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8 \r\n        -128 127\r\n        MONOTONY STRICT_INCREASE                           /* allows only axis values strictly increasing */\r\n      /end AXIS_DESCR\r\n      FORMAT \"%8.3\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.STD_AXIS.MONOTONY_STRICT_INCREASE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CURVE.STD_AXIS.MONOTONY_STRICT_DECREASE\r\n      \"Curve with standard axis\"\r\n      CURVE \r\n      0x810900 \r\n      RL.CURVE.SWORD.SBYTE.DECR                            /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8 \r\n        -128 127\r\n        MONOTONY STRICT_DECREASE                           /* allows only axis values strictly decreasing */\r\n      /end AXIS_DESCR\r\n      FORMAT \"%8.3\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CURVE.STD_AXIS.MONOTONY_STRICT_DECREASE\r\n    /end CHARACTERISTIC\r\n\r\n\r\n    /begin CHARACTERISTIC ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n      \"Map with 2x standard axis\"\r\n      MAP \r\n      0x810400                                             /* memory needed: 1x Byte for no of axis points, 8x Byte for axis points + 8x word for output values */\r\n      RL.MAP.SWORD.SBYTE.SBYTE.INCR                        /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE \r\n        CM.TAB_VERB.NO_DEFAULT_VALUE                       /* shall be the same computation as used with the input quantity */  \r\n        5 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.MAP.STD_AXIS.STD_AXIS.DISCRETE\r\n      \"Map with 2x standard axis\"\r\n      MAP \r\n      0x810400                                             /* memory needed: 1x Byte for no of axis points, 8x Byte for axis points + 8x word for output values */\r\n      RL.MAP.SWORD.SBYTE.SBYTE.INCR                        /* Record layout that covers axis and FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE \r\n        CM.TAB_VERB.NO_DEFAULT_VALUE                       /* shall be the same computation as used with the input quantity */  \r\n        5 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n      DISCRETE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.MAP.COM_AXIS.FIX_AXIS\r\n      \"Map with 1x standard axis and 1x fix axis\"\r\n      MAP \r\n      0x810440                                             /* memory needed: 1x Byte for no of axis points, 8x Byte for axis points + 8x word for output values */\r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8                                                  /* will be overwritten by max number of axis points of AXIS_PTS */\r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        3 \r\n        -128 127\r\n        FIX_AXIS_PAR_DIST 1 1 3\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.MAP.COM_AXIS.FIX_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CUBOID.COM_AXIS.FIX_AXIS.STD_AXIS\r\n      \"\"\r\n      CUBOID \r\n      0x810730 \r\n      RL.CUBOID.SWORD.SBYTE.DECR                           /* Record layout that covers FNC values + STD axis */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8 \r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        3 \r\n        -128 127\r\n        FIX_AXIS_PAR_DIST 1 1 3\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CUBOID.COM_AXIS.FIX_AXIS.STD_AXIS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CUBOID.ROW_DIR\r\n      \"CUBOID with row oriented record layout\"\r\n      CUBOID \r\n      0x810530 \r\n      RL.CUBOID.ROW_DIR                                    /* Record layout that covers FNC values + STD axis */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -127 128 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        2 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        3 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CUBOID.ROW_DIR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CUBOID.COLUMN_DIR\r\n      \"CUBOID with column oriented record layout\"\r\n      CUBOID \r\n      0x810560 \r\n      RL.CUBOID.COLUMN_DIR                                  /* Record layout that covers FNC values + STD axis */\r\n      0 \r\n      CM.IDENTICAL  \r\n      -127 128 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        2 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        3 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CUBOID.COLUMN_DIR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CUBE_4.ROW_DIR\r\n      \"CUBE_4 with row oriented record layout\"\r\n      CUBE_4\r\n      0x810590 \r\n      RL.CUBE_4.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -127 128 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        2 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        3 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        2 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CUBE_4.ROW_DIR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.CUBE_4.COLUMN_DIR\r\n      \"CUBW_4 with column oriented record layout\"\r\n      CUBE_4 \r\n      0x8105F0 \r\n      RL.CUBE_4.COLUMN_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -127 128 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        2 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        3 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        2 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.CUBE_4.COLUMN_DIR\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.MAP.COM_AXIS.FIX_AXIS_2\r\n      \"Map with 1x standard axis and 1x fix axis\"          /* used as input for ASAM.C.DEPENDENT.MAP_4 - same axes, same dimensions as ASAM.C.MAP.COM_AXIS.FIX_AXIS */\r\n      MAP \r\n      0x810700 \r\n      RL.FNC.SWORD.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL \r\n        8 \r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL \r\n        3 \r\n        -128 127\r\n        FIX_AXIS_PAR_DIST 1 1 3\r\n      /end AXIS_DESCR\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.MAP.COM_AXIS.FIX_AXIS_2\r\n      /begin MAP_LIST \r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS_2 \r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS_3 \r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS_4\r\n      /end MAP_LIST\r\n      MAX_REFRESH 100 5\r\n    /end CHARACTERISTIC\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Dependent Characteristics (Parameters)                                                          */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  The value of the dependent parameter is located in the ECU memory.                              */\r\n/*  The MCD tool updates the value when the source value is changed                                 */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.REF_1.SWORD\r\n      \"Dependent SWORD\" \r\n      VALUE \r\n      0x811000                                             /* dependent parameter is located in the ECU memory. The MCD tool updated the value when the source value is changed */\r\n      RL.FNC.SWORD.ROW_DIR                                 /* SWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      -32268 32267\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n         \"X1 + 5\" \r\n         ASAM.C.SCALAR.SBYTE.IDENTICAL                     /* used as input X1 variable in the dependent formula */\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.DEPENDENT.REF_1.SWORD\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.REF_2.UWORD\r\n      \"Dependent UWORD\" \r\n      VALUE \r\n      0x811102 \r\n      RL.FNC.UWORD.ROW_DIR                                 /* UWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      0.0 65535.0 \r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 + 25\" \r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.DEPENDENT.REF_2.UWORD\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.REF_3.SWORD\r\n      \"Dependent UWORD\" \r\n      VALUE \r\n      0x811104 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* SWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      -32268 32267\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 + X2\" \r\n        ASAM.C.DEPENDENT.REF_1.SWORD\r\n        ASAM.C.DEPENDENT.REF_2.UWORD\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.DEPENDENT.REF_3.SWORD\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.REF_4.FLOAT64_IEEE\r\n      \"Dependent UWORD\" \r\n      VALUE \r\n      0x811110 \r\n      RL.FNC.FLOAT64_IEEE.ROW_DIR                          /* SWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      -32268 32267\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 + sysc(System_Constant_1)\"\r\n        ASAM.C.DEPENDENT.REF_1.SWORD\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.DEPENDENT.REF_4.FLOAT64_IEEE\r\n      FORMAT \"%8.2\"\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.REF_5.FLOAT64_IEEE\r\n      \"Dependent UWORD\" \r\n      VALUE \r\n      0x811108 \r\n      RL.FNC.FLOAT64_IEEE.ROW_DIR                          /* SWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      -10000.0 10000.0\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 * 2\" \r\n        ASAM.C.VIRTUAL.SYSTEM_CONSTANT_1\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.DEPENDENT.REF_5.FLOAT64_IEEE\r\n      FORMAT \"%8.2\"\r\n    /end CHARACTERISTIC \r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Complex Dependent Characteristics (ASAP2 V1.7.1)                                                */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  The value of the dependent parameter is located in the ECU memory.                              */\r\n/*  The MCD tool updates the value when the source value is changed                                 */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.CURVE_1\r\n      \"Dependent curve: CHARACTERISTIC ASAM.C.CURVE.STD_AXIS\"\r\n      CURVE \r\n      0x811120 \r\n      RL.CURVE.SWORD.SBYTE.DECR                            /* Record layout should support the calculated values */\r\n      0 \r\n      CM.IDENTICAL                                         /* Dependency is calculated physically. It makes sense to use the same conversion as the source characteristic */  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* Dependency is calculated physically. It makes sense to use the same conversion as the source characteristic */  \r\n        8                                                  /* max axis points should support the number of axis points of the source */\r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1\"\r\n        ASAM.C.CURVE.STD_AXIS\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      FORMAT \"%8.3\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.CURVE_2\r\n      \"Dependent curve: CHARACTERISTIC ASAM.C.CURVE.STD_AXIS * 2\"\r\n      CURVE \r\n      0x811140 \r\n      RL.CURVE.SWORD.SBYTE.DECR\r\n      0 \r\n      CM.IDENTICAL\r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        8\r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 * 2\"                                           /* only the output values are calculated by the formula, the axis values remain identical to the source */\r\n        ASAM.C.CURVE.STD_AXIS\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      FORMAT \"%8.3\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.CURVE_3\r\n      \"Dependent curve: (CHARACTERISTIC ASAM.C.SCALAR.SBYTE.IDENTICAL * ASAM.C.CURVE.STD_AXIS) - ASAM.C.SCALAR.UBYTE.IDENTICAL\"\r\n      CURVE \r\n      0x811160 \r\n      RL.CURVE.SWORD.SBYTE.DECR\r\n      0 \r\n      CM.IDENTICAL\r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL\r\n        8\r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 * X2 - X3\"                                     \r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.CURVE.STD_AXIS\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      FORMAT \"%8.3\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.CURVE_4\r\n      \"Dependent curve: ASAM.C.CURVE.COM_AXIS + ASAM.C.CURVE.COM_AXIS_2\"\r\n      CURVE \r\n      0x811180 \r\n      RL.FNC.SWORD.ROW_DIR                                 /* Record layout that covers FNC values */\r\n      0 \r\n      CM.IDENTICAL \r\n      -32268 32267\r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.IDENTICAL \r\n        8 \r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8               /* same common axis as the source curves to avoid conflicts when the axis changes */\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 + X2\"                                     \r\n        ASAM.C.CURVE.COM_AXIS                              /* use curves with the same common axis to avoid conflicts when the axis changes */\r\n        ASAM.C.CURVE.COM_AXIS_2\r\n      /end DEPENDENT_CHARACTERISTIC\r\n      FORMAT \"%8.3\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.MAP_1\r\n      \"Dependent map: ASAM.C.MAP.STD_AXIS.STD_AXIS\"\r\n      MAP \r\n      0x811200\r\n      RL.MAP.SWORD.SBYTE.SBYTE.INCR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.IDENTICAL\r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.TAB_VERB.NO_DEFAULT_VALUE\r\n        5 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1\"\r\n        ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.MAP_2\r\n      \"Dependent map: 2 * ASAM.C.MAP.STD_AXIS.STD_AXIS\"\r\n      MAP \r\n      0x811240\r\n      RL.MAP.SWORD.SBYTE.SBYTE.INCR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.IDENTICAL\r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.TAB_VERB.NO_DEFAULT_VALUE\r\n        5 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"2 * X1\"\r\n        ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.MAP_3\r\n      \"Dependent map: (ASAM.C.SCALAR.SBYTE.IDENTICAL * ASAM.C.MAP.STD_AXIS.STD_AXIS) - ASAM.C.SCALAR.UBYTE.IDENTICAL\"\r\n      MAP \r\n      0x811280\r\n      RL.MAP.SWORD.SBYTE.SBYTE.INCR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.IDENTICAL\r\n        4 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        STD_AXIS \r\n        NO_INPUT_QUANTITY \r\n        CM.TAB_VERB.NO_DEFAULT_VALUE\r\n        5 \r\n        -128 127\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 * X2 - X3\"\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.MAP_4\r\n      \"Dependent map: ASAM.C.MAP.COM_AXIS.FIX_AXIS + ASAM.C.MAP.COM_AXIS.FIX_AXIS_2\"\r\n      MAP \r\n      0x8112C0 \r\n      RL.FNC.SWORD.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -32268 32267 \r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL \r\n        8 \r\n        0 255\r\n        AXIS_PTS_REF ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL \r\n        3 \r\n        -128 127\r\n        FIX_AXIS_PAR_DIST 1 1 3\r\n      /end AXIS_DESCR\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 + X2\"\r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS\r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS_2\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.ARRAY_1 \r\n      \"Dependent array: ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\"\r\n      VAL_BLK \r\n      0x811300 \r\n      RL.FNC.SWORD.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 3 4\r\n      FORMAT \"%8.4\"\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1\"\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.ARRAY_2 \r\n      \"Dependent array: 2 * ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\"\r\n      VAL_BLK \r\n      0x811340 \r\n      RL.FNC.SWORD.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 3 4\r\n      FORMAT \"%8.4\"\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"2 * X1\"\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.ARRAY_3 \r\n      \"Dependent array: (ASAM.C.SCALAR.SBYTE.IDENTICAL * ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR) - ASAM.C.SCALAR.UBYTE.IDENTICAL\"\r\n      VAL_BLK \r\n      0x811380 \r\n      RL.FNC.SWORD.ROW_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 3 4\r\n      FORMAT \"%8.4\"\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 * X2 - X3\"\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.DEPENDENT.ARRAY_4 \r\n      \"Dependent array: ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR + ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.COLUMN_DIR\"\r\n      VAL_BLK \r\n      0x8113C0 \r\n      RL.FNC.SWORD.COLUMN_DIR \r\n      0 \r\n      CM.IDENTICAL  \r\n      -400 400\r\n      EXTENDED_LIMITS -1000 1000\r\n      MATRIX_DIM 3 4\r\n      FORMAT \"%8.4\"\r\n      /begin DEPENDENT_CHARACTERISTIC \r\n        \"X1 + X2\"\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.COLUMN_DIR\r\n      /end DEPENDENT_CHARACTERISTIC\r\n    /end CHARACTERISTIC\r\n\r\n\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Virtual Characteristics (Parameters)                                                            */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  The value of the virtual parameter is not located in the ECU memory. It is only visible         */\r\n/*  in the MCD tool                                                                                 */\r\n/*  The MCD tool updates the value when the source value is changed                                 */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n\r\n    /begin CHARACTERISTIC ASAM.C.VIRTUAL.REF_1.SWORD\r\n      \"Virtual SWORD\" \r\n      VALUE \r\n      0x0                                                  /* address is 0 as the virtual value is not part of the ECU or the hex file */\r\n      RL.FNC.SWORD.ROW_DIR                                 /* SWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      0 255\r\n      /begin VIRTUAL_CHARACTERISTIC \r\n         \"X1 - 9\" \r\n         ASAM.C.SCALAR.SBYTE.IDENTICAL                     /* used as input X1 variable in teh dependent formula */\r\n      /end VIRTUAL_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.VIRTUAL.REF_1.SWORD\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.VIRTUAL.REF_2.UWORD\r\n      \"Virtual UWORD\" \r\n      VALUE \r\n      0x0                                                  /* address is 0 as the virtual value is not part of the ECU or the hex file */\r\n      RL.FNC.UWORD.ROW_DIR                                 /* UWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      0.0 255.0 \r\n      /begin VIRTUAL_CHARACTERISTIC \r\n        \"X1 + 19\" \r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      /end VIRTUAL_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.VIRTUAL.REF_2.UWORD\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.VIRTUAL.REF_3.SWORD\r\n      \"Virtual UWORD\" \r\n      VALUE \r\n      0x0                                                  /* address is 0 as the virtual value is not part of the ECU or the hex file */\r\n      RL.FNC.SWORD.ROW_DIR                                 /* SWORD needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      0.0 255.0 \r\n      /begin VIRTUAL_CHARACTERISTIC \r\n        \"X1 + X2\" \r\n        ASAM.C.VIRTUAL.REF_1.SWORD\r\n        ASAM.C.VIRTUAL.REF_2.UWORD\r\n      /end VIRTUAL_CHARACTERISTIC\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.VIRTUAL.REF_3.SWORD\r\n    /end CHARACTERISTIC \r\n\r\n    /begin CHARACTERISTIC ASAM.C.VIRTUAL.SYSTEM_CONSTANT_1 \r\n      \"Virtual value including a system constant in the calculation formula\"\r\n      VALUE\r\n      0x0                                                  /* address is 0 as the virtual value is not part of the ECU or the hex file */\r\n      RL.FNC.FLOAT64_IEEE.ROW_DIR                          /* Float needed to cover the result of the dependent calculation */\r\n      0 \r\n      CM.IDENTICAL\r\n      0.0 255.0 \r\n      /begin VIRTUAL_CHARACTERISTIC\r\n        \"X1 + sysc(System_Constant_1)\"                     /* system constant needs to contain a valid number. Otherwise the calculation leeds to an error */\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n      /end VIRTUAL_CHARACTERISTIC \r\n      DISPLAY_IDENTIFIER DI.ASAM.C.VIRTUAL.SYSTEM_CONSTANT_1\r\n      FORMAT \"%8.2\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC F_INJ_COR\r\n        \"\"\r\n        CURVE\r\n        0x7140\r\n        REC12\r\n        10.0\r\n        C_INJF\r\n        0.0\r\n        199.0\r\n        GUARD_RAILS\r\n    /end CHARACTERISTIC\r\n\r\n    /begin FRAME\r\n      ABS_ADJUSTM\r\n      \"\"\r\n      3\r\n      2\r\n      FRAME_MEASUREMENT\r\n      LOOP_COUNTER TEMPORARY_1\r\n    /end FRAME\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Functions                                                                                       */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  Each parameter shall be defined (DEF_CHARACTERISTIC) only one time!                             */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin FUNCTION FunctionScalar \"\"\r\n      FUNCTION_VERSION \"BG5.0815\"\r\n      /begin AR_COMPONENT \"testComponent\"\r\n        AR_PROTOTYPE_OF \"DerivedFromTestComponent\"\r\n      /end AR_COMPONENT\r\n\r\n      /begin SUB_FUNCTION\r\n        FunctionDependentParameters\r\n      /end SUB_FUNCTION \r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.FLOAT32_IEEE.IDENTICAL\r\n        ASAM.C.SCALAR.FLOAT64_IEEE.IDENTICAL\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.SLONG.IDENTICAL\r\n        ASAM.C.SCALAR.SWORD.FORM_X_PLUS_4\r\n        ASAM.C.SCALAR.SWORD.IDENTICAL\r\n        ASAM.C.SCALAR.SWORD.LINEAR_MUL_2\r\n        ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_10\r\n        ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_81_9175\r\n        ASAM.C.SCALAR.SWORD.TAB_INTP_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_INTP_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_NOINTP_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_NOINTP_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_VERB_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_VERB_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.VTAB_RANGE_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.VTAB_RANGE_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.ULONG.IDENTICAL\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0001\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0010\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      /end DEF_CHARACTERISTIC\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionDependentParameters \"\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n      /end REF_CHARACTERISTIC\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.DEPENDENT.REF_1.SWORD\r\n        ASAM.C.DEPENDENT.REF_2.UWORD\r\n        ASAM.C.DEPENDENT.REF_3.SWORD\r\n        ASAM.C.DEPENDENT.REF_4.FLOAT64_IEEE\r\n        ASAM.C.DEPENDENT.REF_5.FLOAT64_IEEE\r\n      /end DEF_CHARACTERISTIC\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionComplexDependentArrays \"\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.COLUMN_DIR\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n      /end REF_CHARACTERISTIC\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.DEPENDENT.ARRAY_1\r\n        ASAM.C.DEPENDENT.ARRAY_2\r\n        ASAM.C.DEPENDENT.ARRAY_3\r\n        ASAM.C.DEPENDENT.ARRAY_4\r\n      /end DEF_CHARACTERISTIC\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionComplexDependentMaps \"\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS\r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS_2\r\n      /end REF_CHARACTERISTIC\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.DEPENDENT.MAP_1\r\n        ASAM.C.DEPENDENT.MAP_2\r\n        ASAM.C.DEPENDENT.MAP_3\r\n        ASAM.C.DEPENDENT.MAP_4\r\n      /end DEF_CHARACTERISTIC\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionComplexDependentCurves \"\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n        ASAM.C.AXIS_PTS.UBYTE_8\r\n        ASAM.C.CURVE.COM_AXIS\r\n        ASAM.C.CURVE.COM_AXIS_2\r\n        ASAM.C.CURVE.STD_AXIS\r\n      /end REF_CHARACTERISTIC\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.DEPENDENT.CURVE_1\r\n        ASAM.C.DEPENDENT.CURVE_2\r\n        ASAM.C.DEPENDENT.CURVE_3\r\n        ASAM.C.DEPENDENT.CURVE_4\r\n      /end DEF_CHARACTERISTIC\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionCurve \"\"\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.CURVE.STD_AXIS.DISCRETE\r\n        ASAM.C.CURVE.RES_AXIS\r\n      /end DEF_CHARACTERISTIC\r\n      /begin IN_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL\r\n      /end IN_MEASUREMENT\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionCurveAxis \"\"\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.CURVE_AXIS\r\n        ASAM.C.CURVE.CURVE_AXIS\r\n      /end DEF_CHARACTERISTIC\r\n      /begin IN_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL\r\n      /end IN_MEASUREMENT\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionMap \"\"\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS\r\n        ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n        ASAM.C.MAP.STD_AXIS.STD_AXIS.DISCRETE\r\n      /end DEF_CHARACTERISTIC\r\n      /begin IN_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE\r\n      /end IN_MEASUREMENT\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionCuboid \"\"\r\n      /begin DEF_CHARACTERISTIC\r\n        ASAM.C.CUBOID.COM_AXIS.FIX_AXIS.STD_AXIS\r\n      /end DEF_CHARACTERISTIC\r\n      /begin IN_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL\r\n      /end IN_MEASUREMENT\r\n    /end FUNCTION\r\n\r\n    /begin FUNCTION FunctionVirtualMeasurements \"\"\r\n      /begin IN_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2\r\n      /end IN_MEASUREMENT\r\n      /begin OUT_MEASUREMENT\r\n        ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL\r\n      /end OUT_MEASUREMENT\r\n    /end FUNCTION\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Groups                                                                                          */\r\n/*                                                                                                  */\r\n/*  Note:                                                                                           */\r\n/*  For GROUP there is no special sorting defined                                                   */\r\n/*  It is up to the user to define one ore more sortings                                            */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin GROUP Group_Type_All \"contains all groups with special types\"\r\n      ROOT\r\n      /begin SUB_GROUP\r\n        Group_Type_Scalar\r\n        Group_Type_Array\r\n        Group_Type_Curve\r\n        Group_Type_Map\r\n        Group_Type_Cuboid\r\n        Group_Type_ASCII\r\n      /end SUB_GROUP\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Type_Scalar \"Contains all scalar measurements and parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.FLOAT32_IEEE.IDENTICAL\r\n        ASAM.C.SCALAR.FLOAT64_IEEE.IDENTICAL\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.SLONG.IDENTICAL\r\n        ASAM.C.SCALAR.SWORD.FORM_X_PLUS_4\r\n        ASAM.C.SCALAR.SWORD.IDENTICAL\r\n        ASAM.C.SCALAR.SWORD.LINEAR_MUL_2\r\n        ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_10\r\n        ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_81_9175\r\n        ASAM.C.SCALAR.SWORD.TAB_INTP_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_INTP_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_NOINTP_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_NOINTP_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_VERB_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_VERB_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.VTAB_RANGE_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.VTAB_RANGE_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL\r\n        ASAM.C.SCALAR.ULONG.IDENTICAL\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0001\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0010\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n        ASAM.M.SCALAR.FLOAT32.IDENTICAL\r\n        ASAM.M.SCALAR.FLOAT64.IDENTICAL\r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL\r\n        ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2\r\n        ASAM.M.SCALAR.SLONG.IDENTICAL\r\n        ASAM.M.SCALAR.SWORD.IDENTICAL\r\n        ASAM.M.SCALAR.UBYTE.FORM_X_PLUS_4\r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL\r\n        ASAM.M.SCALAR.UBYTE.TAB_INTP_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_INTP_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_NOINTP_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_NOINTP_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.VTAB_RANGE_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.VTAB_RANGE_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.ULONG.IDENTICAL\r\n        ASAM.M.SCALAR.UWORD.IDENTICAL\r\n        ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0008\r\n        ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n        ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Type_Array \"Contains all array measurements and parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.COLUMN_DIR\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_3_4.ROW_DIR\r\n        ASAM.C.ARRAY.SWORD.MATRIX_DIM_6.ROW_DIR\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n        ASAM.M.MATRIX_DIM_16_1.UBYTE.IDENTICAL\r\n        ASAM.M.MATRIX_DIM_16.UBYTE.IDENTICAL\r\n        ASAM.M.MATRIX_DIM_8_2.UBYTE.IDENTICAL\r\n        ASAM.M.MATRIX_DIM_8_4_2.UBYTE.IDENTICAL\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Type_Curve \"Contains all curve parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.CURVE.COM_AXIS\r\n        ASAM.C.CURVE.CURVE_AXIS\r\n        ASAM.C.CURVE.FIX_AXIS.PAR\r\n        ASAM.C.CURVE.FIX_AXIS.PAR_DIST\r\n        ASAM.C.CURVE.FIX_AXIS.PAR_LIST\r\n        ASAM.C.CURVE.RES_AXIS\r\n        ASAM.C.CURVE.STD_AXIS\r\n        ASAM.C.CURVE.STD_AXIS.MONOTONY_STRICT_DECREASE\r\n        ASAM.C.CURVE.STD_AXIS.MONOTONY_STRICT_INCREASE\r\n        ASAM.C.CURVE.STD_AXIS.DISCRETE\r\n        ASAM.C.CURVE_AXIS\r\n        ASAM.C.AXIS_PTS.RESCALE\r\n        ASAM.C.AXIS_PTS.UBYTE_8\r\n      /end REF_CHARACTERISTIC\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Type_Map \"Contains all map parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.MAP.COM_AXIS.FIX_AXIS\r\n        ASAM.C.MAP.STD_AXIS.STD_AXIS\r\n      /end REF_CHARACTERISTIC\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Type_Cuboid \"Contains all cuboid parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.CUBOID.COM_AXIS.FIX_AXIS.STD_AXIS\r\n      /end REF_CHARACTERISTIC\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Type_ASCII \"Contains all ASCII parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.ASCII.UBYTE.NUMBER_42\r\n      /end REF_CHARACTERISTIC\r\n    /end GROUP\r\n\r\n\r\n    /begin GROUP Group_Function_All \"contains all groups with special functions\"\r\n      ROOT\r\n      /begin SUB_GROUP\r\n        Group_Function_Virtual \r\n        Group_Function_Monotony\r\n        Group_Function_Computation\r\n        Group_Function_Bitmask\r\n      /end SUB_GROUP\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Function_Virtual \"Contains all functions, measurements and parameters used for virtual\"\r\n      /begin FUNCTION_LIST\r\n        FunctionVirtualMeasurements\r\n      /end FUNCTION_LIST\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.SBYTE.IDENTICAL \r\n        ASAM.C.SCALAR.UBYTE.IDENTICAL \r\n        ASAM.C.VIRTUAL.REF_1.SWORD\r\n        ASAM.C.VIRTUAL.REF_2.UWORD\r\n        ASAM.C.VIRTUAL.REF_3.SWORD\r\n        ASAM.C.VIRTUAL.SYSTEM_CONSTANT_1\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2\r\n        ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Function_Monotony \"Contains all functions, measurements and parameters used for monotony\"\r\n      /begin REF_CHARACTERISTIC\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Function_Computation \"Contains all measurements and parameters that have a computation method different to identical\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.SWORD.FORM_X_PLUS_4\r\n        ASAM.C.SCALAR.SWORD.LINEAR_MUL_2\r\n        ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_10\r\n        ASAM.C.SCALAR.SWORD.RAT_FUNC_DIV_81_9175\r\n        ASAM.C.SCALAR.SWORD.TAB_INTP_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_INTP_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_NOINTP_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_NOINTP_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_VERB_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.TAB_VERB_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.VTAB_RANGE_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.SWORD.VTAB_RANGE_NO_DEFAULT_VALUE\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0001\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0010\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n        ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2\r\n        ASAM.M.SCALAR.UBYTE.FORM_X_PLUS_4\r\n        ASAM.M.SCALAR.UBYTE.TAB_INTP_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_INTP_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_NOINTP_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_NOINTP_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.VTAB_RANGE_DEFAULT_VALUE\r\n        ASAM.M.SCALAR.UBYTE.VTAB_RANGE_NO_DEFAULT_VALUE\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Function_Bitmask \"Contains all measurements and parameters that have a bitmask\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0001\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0010\r\n        ASAM.C.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n        ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0008\r\n        ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin GROUP Group_Transformer \"Transformers\"\r\n      ROOT\r\n      /begin SUB_GROUP\r\n        TestTransformer\r\n        TestTransformerBlob\r\n      /end SUB_GROUP\r\n    /end GROUP\r\n\r\n    /begin GROUP TestTransformer \"Transformer with standard parameters\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_3\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_3\r\n      /end REF_CHARACTERISTIC\r\n    /end GROUP\r\n    \r\n    /begin GROUP TestTransformerBlob \"Transformer with Blob\"\r\n      /begin REF_CHARACTERISTIC\r\n        ASAM.C.BLOB.TRANSFORMER_TEST\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_3\r\n      /end REF_CHARACTERISTIC\r\n    /end GROUP\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Type Definitions & Instances (ASAP2 V1.7)                                                       */\r\n/*                                                                                                  */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin TYPEDEF_MEASUREMENT T_Register\r\n      \"register content\"\r\n      UWORD\r\n      RegisterConversion\r\n      1\r\n      0\r\n      0\r\n      4294967295\r\n      ERROR_MASK 0x00000001\r\n      LAYOUT ROW_DIR\r\n    /end TYPEDEF_MEASUREMENT\r\n\r\n    /begin INSTANCE\r\n      Register_A11\r\n      \"\"\r\n      T_Register\r\n      0xC0000094\r\n    /end INSTANCE\r\n\r\n    /begin INSTANCE\r\n      MyInstance \"\"\r\n      ParameterTemplate\r\n      0x2000\r\n      /begin OVERWRITE\r\n        THIS 0\r\n        LIMITS 100 280\r\n      /end OVERWRITE\r\n    /end INSTANCE\r\n\r\n    /begin TYPEDEF_CHARACTERISTIC ParameterType \r\n      \"\"\r\n      VALUE RecordLayoutName \r\n      0 \r\n      NO_COMPU_METHOD \r\n      -200 \r\n      500\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin TYPEDEF_STRUCTURE StructureType \r\n      \"\"\r\n      2\r\n      /begin STRUCTURE_COMPONENT\r\n        A ParameterType 0\r\n        SYMBOL_TYPE_LINK \"__a\"\r\n      /end STRUCTURE_COMPONENT\r\n      /begin STRUCTURE_COMPONENT\r\n        B ParameterType 2\r\n        SYMBOL_TYPE_LINK \"__b\"\r\n      /end STRUCTURE_COMPONENT\r\n      SYMBOL_TYPE_LINK \"MyStructType\"\r\n    /end TYPEDEF_STRUCTURE\r\n\r\n    /begin TYPEDEF_BLOB T_BLOB\r\n      \"binary blob\"\r\n      1024\r\n    /end TYPEDEF_BLOB\r\n\r\n    /begin INSTANCE\r\n      FIM_Blob\r\n      \"blob for FIM matrix\"\r\n      T_BLOB\r\n      0x1004080\r\n    /end INSTANCE\r\n\r\n    /begin TYPEDEF_CHARACTERISTIC TYPE_VALUE_UWORD_CM.LINEAR.MUL_2\r\n      \"Base type for VALUE with UWORD\"      // description\r\n      VALUE                                 // object type\r\n      RL.FNC.UWORD.ROW_DIR                  // record layout\r\n      100.0                                 // maxdiff\r\n      CM.LINEAR.MUL_2                       // conversion                 NO_COMPU_METHOD ????\r\n      10                                    // lower limit\r\n      63000                                 // upper limit\r\n      EXTENDED_LIMITS 5 64000\r\n      FORMAT \"%5.0\"\r\n      PHYS_UNIT \"ms\"\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin INSTANCE ASAM_I_SCALAR_VALUE_UWORD_SINGLE\r\n      \"single scalar instance\"              // description\r\n      TYPE_VALUE_UWORD_CM.LINEAR.MUL_2      // reference to type definition\r\n      0x810000                              // start address\r\n      DISPLAY_IDENTIFIER DI_ASAM_I_SCALAR_VALUE_UWORD_SINGLE\r\n    /end INSTANCE\r\n\r\n    /begin INSTANCE ASAM_I_SCALAR_VALUE_UWORD_ARRAY_5\r\n      \"array of 5 scalars\"                  // description\r\n      TYPE_VALUE_UWORD_CM.LINEAR.MUL_2      // reference to type definition\r\n      0x810002                              // start address\r\n      MATRIX_DIM 5                          // array size: 5 time values\r\n      DISPLAY_IDENTIFIER DI_ASAM_I_SCALAR_VALUE_UWORD_ARRAY_5\r\n    /end INSTANCE\r\n    \r\n    /begin TYPEDEF_CHARACTERISTIC MyUnsignedLongType\r\n      \"\"\r\n      VALUE\r\n      RL_VALUE_ULONG\r\n      100.0\r\n      NO_COMPU_METHOD\r\n      10\r\n      65535\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin TYPEDEF_STRUCTURE\r\n      MyStructure\r\n      \"\"\r\n      4\r\n      CONSISTENT_EXCHANGE\r\n      /begin STRUCTURE_COMPONENT\r\n        A MyUnsignedLongType\r\n        0\r\n      /end STRUCTURE_COMPONENT\r\n      /begin STRUCTURE_COMPONENT\r\n        B MyUnsignedLongType\r\n        2\r\n      /end STRUCTURE_COMPONENT\r\n    /end TYPEDEF_STRUCTURE\r\n\r\n    /begin INSTANCE\r\n      MyInstance\r\n      \"\"\r\n      MyStructure\r\n      0x2030\r\n    /end INSTANCE\r\n\r\n    /begin TYPEDEF_AXIS TYPE_AXIS_UBYTE_CM.IDENTICAL\r\n      \"typedef for axis points\"             // description\r\n      ASAM.M.SCALAR.UBYTE.IDENTICAL         // input quantity\r\n      RL.AXIS.UBYTE                         // reference to record layout\r\n      100.0                                 // maxdiff\r\n      CM.IDENTICAL                          // reference to conversion method\r\n      10                                    // maximum number of axis points\r\n      4                                     // lower limit\r\n      210                                   // upper limit\r\n    /end TYPEDEF_AXIS\r\n    \r\n    /begin INSTANCE ASAM_I_AXIS_PTS_UBYTE_8\r\n      \"axis points\"                         // use type description\r\n      TYPE_AXIS_UBYTE_CM.IDENTICAL          // reference to type definition\r\n      0x810010                              // start address\r\n    /end INSTANCE\r\n\r\n    /begin TYPEDEF_AXIS\r\n      AxisTemplate\r\n      \"\"\r\n      NO_INPUT_QUANTITY\r\n      RL_AXIS\r\n      100.0\r\n      NO_COMPU_METHOD\r\n      10\r\n      0\r\n      25\x18\n    /end TYPEDEF_AXIS\r\n\r\n    /begin INSTANCE\r\n      Instance1\r\n      \"\"\r\n      AxisTemplate\r\n      0x1200\r\n      /begin OVERWRITE\r\n        THIS 0\r\n        INPUT_QUANTITY Speed\r\n        CONVERSION Factor200\r\n      /end OVERWRITE\r\n    /end INSTANCE\r\n\r\n    /begin TYPEDEF_CHARACTERISTIC TYPE_MAP_COM_AXIS.FIX_AXIS_CM.LINEAR.MUL_2\r\n      \"Base type for VALUE with UWORD\"      // description\r\n      MAP                                   // object type\r\n      RL.FNC.UWORD.ROW_DIR                  // record layout\r\n      100.0                                 // maxdiff\r\n      CM.LINEAR.MUL_2                       // conversion\r\n      10                                    // lower limit\r\n      63000                                 // upper limit\r\n      EXTENDED_LIMITS 5 64000\r\n      FORMAT \"%5.0\"\r\n      PHYS_UNIT \"hPa\"\r\n      /begin AXIS_DESCR\r\n        COM_AXIS \r\n        ASAM.M.SCALAR.UBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        8                                                  /* will be overwritten by max number of axis points of TYPEDEF_AXIS */\r\n        0 255\r\n        AXIS_PTS_REF ASAM_I_AXIS_PTS_UBYTE_8\r\n      /end AXIS_DESCR\r\n      /begin AXIS_DESCR\r\n        FIX_AXIS \r\n        ASAM.M.SCALAR.SBYTE.IDENTICAL \r\n        CM.IDENTICAL                                       /* shall be the same computation as used with the input quantity */  \r\n        3 \r\n        -128 127\r\n        FIX_AXIS_PAR_DIST 1 1 3\r\n      /end AXIS_DESCR\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin INSTANCE ASAM_I_MAP_COM_AXIS_FIX_AXIS\r\n      \"Instance of Map with COM_AXIS and FIX_AXIS\"                          \r\n      TYPE_MAP_COM_AXIS.FIX_AXIS_CM.LINEAR.MUL_2\r\n      0x810030    \r\n    /end INSTANCE\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  Structure (ASAP2 V1.7)                                                                          */\r\n/*                                                                                                  */\r\n/*  Example C Code:                                                                                 */\r\n/*                                                                                                  */\r\n/*  typedef unsigned long MyParameterType;                                                          */\r\n/*  typedef struct {                                                                                */\r\n/*    MyParameterType A;                                                                            */\r\n/*    unsigned char dummy1[30];                                                                     */\r\n/*    MyParameterType B[10];                                                                        */\r\n/*    unsigned char dummy2[10];                                                                     */\r\n/*  } MyStructure;                                                                                  */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin TYPEDEF_CHARACTERISTIC T_MyParameterType\r\n      \"Base type for MyParameterType\"       // description\r\n      VALUE                                 // object type\r\n      RL.FNC.ULONG.ROW_DIR                  // record layout\r\n      100.0                                 // maxdiff\r\n      CM.IDENTICAL                          // conversion\r\n      0                                     // lower limit\r\n      100000                                // upper limit\r\n      EXTENDED_LIMITS 0 429467295\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin TYPEDEF_CHARACTERISTIC T_CHAR10\r\n      \"Base type for Array of char[10]\"     // description\r\n      ASCII                                 // object type\r\n      RL.FNC.UBYTE.ROW_DIR                  // record layout\r\n      100.0                                 // maxdiff\r\n      NO_COMPU_METHOD                       // conversion\r\n      0                                     // lower limit\r\n      255                                   // upper limit\r\n      NUMBER 10\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin TYPEDEF_CHARACTERISTIC T_CHAR30\r\n      \"Base type for Array of char[30]\"     // description\r\n      ASCII                                 // object type\r\n      RL.FNC.UBYTE.ROW_DIR                  // record layout\r\n      100.0                     ;           // maxdiff\r\n      NO_COMPU_METHOD                       // conversion\r\n      0                                     // lower limit\r\n      255                                   // upper limit\r\n      NUMBER 30\r\n    /end TYPEDEF_CHARACTERISTIC\r\n\r\n    /begin TYPEDEF_STRUCTURE T_MyStructure    \r\n      \"Structure of C example\"              // description\r\n      84                                    // total size of structure \r\n      /begin STRUCTURE_COMPONENT\r\n        A T_MyParameterType\r\n        0                                   // address offset\r\n      /end STRUCTURE_COMPONENT\r\n      /begin STRUCTURE_COMPONENT\r\n        Dummy1 T_CHAR10\r\n        4                                   // address offset\r\n      /end STRUCTURE_COMPONENT\r\n      /begin STRUCTURE_COMPONENT\r\n        B T_MyParameterType\r\n        14                                  // address offset \r\n        MATRIX_DIM 10\r\n      /end STRUCTURE_COMPONENT\r\n      /begin STRUCTURE_COMPONENT\r\n        Dummy2 T_CHAR30\r\n        54                                  // address offset\r\n      /end STRUCTURE_COMPONENT\r\n    /end TYPEDEF_STRUCTURE\r\n\r\n    /begin INSTANCE ASAM_S_EXAMPLE          // dots not allowed in instance names\r\n      \"Example Instance\"                    // instance description\r\n      T_MyStructure                         // reference to type definition\r\n      0x811000                              // start address of instance\r\n    /end INSTANCE\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  TRANSFORMER (ASAP2 V1.7)                                                                        */\r\n/*                                                                                                  */\r\n/*  Parameters used by the transformers                                                             */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin CHARACTERISTIC KI \r\n      \"\"\r\n      VALUE\r\n      0x408F\r\n      DAMOS_FW\r\n      0.0\r\n      FACTOR01\r\n      0.0\r\n      255.0\r\n      /begin IF_DATA \"DIM\" \r\n        EXTERNAL\r\n        DIRECT\r\n      /end IF_DATA\r\n      /begin FUNCTION_LIST \r\n        V_LIM\r\n      /end FUNCTION_LIST\r\n      READ_ONLY\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC KI2 \r\n      \"\"\r\n      VALUE\r\n      0x408F\r\n      DAMOS_FW\r\n      0.0\r\n      FACTOR01\r\n      0.0\r\n      255.0\r\n      /begin IF_DATA \"DIM\" \r\n        EXTERNAL\r\n        DIRECT\r\n      /end IF_DATA\r\n      /begin FUNCTION_LIST \r\n        V_LIM\r\n      /end FUNCTION_LIST\r\n      READ_WRITE\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\r\n      \"Wait Time for the transformer direction ECU to External (ECU side) in ms\"\r\n      VALUE \r\n      0x810800 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\r\n      \"Wait Time for the reverse transformer direction ECU to External (ECU side) in ms\"\r\n      VALUE \r\n      0x810802 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_1\r\n      \"Scalar as transformer input\"\r\n      VALUE \r\n      0x810804 \r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_1\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_1\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_2\r\n      \"Scalar as transformer input\"\r\n      VALUE \r\n      0x810808 \r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_2\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_2\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_3\r\n      \"Scalar as transformer input\"\r\n      VALUE \r\n      0x81080C \r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_3\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_3\"\r\n    /end CHARACTERISTIC\r\n\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0000 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_1\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0002 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0004 \r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0008\r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORM\r\n/*  ER_OUT_3\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF000C\r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_3\r\n    /end CHARACTERISTIC\r\n\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  TRANSFORMER & standard parameter (ASAP2 V1.7)                                                   */\r\n/*                                                                                                  */\r\n/*  The transformer uses \"standard\" parameter as in- and output                                     */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin TRANSFORMER TestTransformer\r\n      \"1.1.0.0\"                             // Version info\r\n      \"TransformerTestV171.dll\"             // Name of the 32bit DLL\r\n      \"\"                                    // Name of the 64bit DLL\r\n      2000                                  // timeout in [ms]\r\n      ON_USER_REQUEST\r\n      TestTransformerReverse\r\n      /begin TRANSFORMER_IN_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_3\r\n      /end TRANSFORMER_IN_OBJECTS\r\n      /begin TRANSFORMER_OUT_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_3\r\n      /end TRANSFORMER_OUT_OBJECTS\r\n    /end TRANSFORMER\r\n\r\n    /begin TRANSFORMER TestTransformerReverse\r\n      \"1.1.0.0\"                             // Version info\r\n      \"TransformerTestV171.dll\"             // Name of the 32bit DLL\r\n      \"\"                                    // Name of the 64bit DLL\r\n      1500                                  // timeout in [ms]\r\n      ON_CHANGE\r\n      TestTransformer\r\n      /begin TRANSFORMER_IN_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_OUT_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_OUT_3\r\n      /end TRANSFORMER_IN_OBJECTS\r\n      /begin TRANSFORMER_OUT_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_IN_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_IN_3\r\n      /end TRANSFORMER_OUT_OBJECTS\r\n    /end TRANSFORMER\r\n\r\n\r\n/*  ==============================================================================================  */\r\n/*                                                                                                  */\r\n/*  TRANSFORMER & BLOB (ASAP2 V1.7)                                                                 */\r\n/*                                                                                                  */\r\n/*  The transformer uses BLOB as in-  and \"standard\" parameter as output                            */\r\n/*                                                                                                  */\r\n/*  ==============================================================================================  */\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME\r\n      \"Wait Time for the transformer direction ECU to External (ECU side) in ms\"\r\n      VALUE \r\n      0x810820 \r\n     \xe3\xe3\xe3\xe3 RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME_REVERSE\r\n      \"Wait Time for the reverse transformer direction ECU to External (ECU side) in ms\"\r\n      VALUE \r\n      0x810822 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME_REVERSE\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME_REVERSE\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin BLOB ASAM.C.BLOB.TRANSFORMER_TEST\r\n      \"binary blob for transformer test\"    // description\r\n      0x812000                              // start address\r\n      16                                    // number of bytes in blob\r\n      CALIBRATION_ACCESS  NO_CALIBRATION    // Inhibit the user from calibrating it\r\n    /end BLOB\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0020 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_1\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME_REVERSE\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0022 \r\n      RL.FNC.UWORD.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      0 10000\r\n      EXTENDED_LIMITS 0 65535\r\n      FORMAT \"%3.0\"\r\n      PHYS_UNIT \"ms\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME_REVERSE\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME_REVERSE\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_1\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0024 \r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_1\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_1\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_2\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0028\r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_2\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_2\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_3\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF002C\r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_3\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_3\"\r\n    /end CHARACTERISTIC\r\n\r\n    /begin CHARACTERISTIC ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_4\r\n      \"Scalar as transformer output\"\r\n      VALUE \r\n      0x7FFF0030\r\n      RL.FNC.FLOAT32_IEEE.ROW_DIR\r\n      0 \r\n      CM.IDENTICAL  \r\n      -100000000000 100000000000\r\n      EXTENDED_LIMITS -100000000000000000 100000000000000000\r\n      FORMAT \"%3.12\"\r\n      PHYS_UNIT \"hours\"\r\n      DISPLAY_IDENTIFIER DI.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_4\r\n      MODEL_LINK \"ML.ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_4\"\r\n    /end CHARACTERISTIC\r\n\r\n\r\n\r\n    /begin TRANSFORMER TestTransformerBlob\r\n      \"1.1.0.0\"                             // Version info\r\n      \"TransformerTestV171.dll\"             // Name of the 32bit DLL\r\n      \"\"                                    // Name of the 64bit DLL\r\n      2000                                  // timeout in [ms]\r\n      ON_USER_REQUEST\r\n      TestTransformerBlobReverse\r\n      /begin TRANSFORMER_IN_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME_REVERSE\r\n        ASAM.C.BLOB.TRANSFORMER_TEST\r\n      /end TRANSFORMER_IN_OBJECTS\r\n      /begin TRANSFORMER_OUT_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_3\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_4\r\n      /end TRANSFORMER_OUT_OBJECTS\r\n    /end TRANSFORMER\r\n\r\n    /begin TRANSFORMER TestTransformerBlobReverse\r\n      \"1.1.0.0\"                             // Version info\r\n      \"TransformerTestV171.dll\"             // Name of the 32bit DLL\r\n      \"\"                                    // Name of the 64bit DLL\r\n      1500                                  // timeout in [ms]\r\n      ON_CHANGE\r\n      TestTransformerBlob\r\n      /begin TRANSFORMER_IN_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_OUT_WAITTIME_REVERSE\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_1\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_2\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_3\r\n        ASAM.C.SCALAR.FLOAT32.IDENTICAL.TRANSFORMER_BLOB_OUT_4\r\n      /end TRANSFORMER_IN_OBJECTS\r\n      /begin TRANSFORMER_OUT_OBJECTS\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME\r\n        ASAM.C.SCALAR.UINT16.IDENTICAL.TRANSFORMER_BLOB_IN_WAITTIME_REVERSE\r\n        ASAM.C.BLOB.TRANSFORMER_TEST\r\n      /end TRANSFORMER_OUT_OBJECTS\r\n    /end TRANSFORMER\r\n\r\n    /begin USER_RIGHTS calibration_engineers\r\n      /begin REF_GROUP  group_1\r\n      /end REF_GROUP\r\n    /end USER_RIGHTS \r\n   \r\n    /begin USER_RIGHTS measurement_engineers\r\n      /begin REF_GROUP group_1\r\n      /end REF_GROUP\r\n      READ_ONLY\r\n    /end USER_RIGHTS\r\n\r\n    /begin GROUP group_1\r\n      /begin REF_CHARACTERISTIC\r\n        KF1\r\n        KF2\r\n      /end REF_CHARACTERISTIC\r\n      /begin REF_MEASUREMENT\r\n        NMOT\r\n        TMOT\r\n      /end REF_MEASUREMENT\r\n    /end GROUP\r\n\r\n    /begin UNIT newton\r\n      \"extended SI unit for force\"\r\n      \"[N]\"\r\n      EXTENDED_SI\r\n      SI_EXPONENTS 1 1 -2 0 0 0 0\r\n    /end UNIT\r\n\r\n    /begin UNIT kms_per_hour\r\n      \"derived unit for velocity: kilometres per\r\n      hour\"\r\n      \"[km/h]\"\r\n      DERIVED\r\n      REF_UNIT metres_per_second\r\n      UNIT_CONVERSION 3.6 0.0\r\n    /end UNIT\r\n\r\n    /begin VARIANT_CODING\r\n      VAR_SEPARATOR \".\"\r\n      VAR_NAMING NUMERIC\r\n      /begin VAR_CRITERION Car\r\n        \"Car body\"\r\n        Limousine Kombi Cabrio\r\n        VAR_SELECTION_CHARACTERISTIC CAR_BOX\r\n        VAR_MEASUREMENT S_GEAR_BOX\r\n        VAR_SELECTION_CHARACTERISTIC CAR_BOX\r\n      /end VAR_CRITERION\r\n      /begin VAR_CRITERION Gear\r\n        \"Type of gear box\"\r\n        Manual Automatic\r\n        VAR_SELECTION_CHARACTERISTIC S_GEAR_BOX\r\n      /end VAR_CRITERION\r\n      /begin VAR_FORBIDDEN_COMB\r\n        Car Limousine\r\n        Gear Manual\r\n      /end VAR_FORBIDDEN_COMB\r\n      /begin VAR_FORBIDDEN_COMB\r\n        Car Cabrio\r\n        Gear Automatic\r\n      /end VAR_FORBIDDEN_COMB\r\n      /begin VAR_CHARACTERISTIC\r\n        PUMKF\r\n        Gear\r\n        /begin VAR_ADDRESS\r\n          0x7140\r\n          0x7168\r\n        /end VAR_ADDRESS\r\n      /end VAR_CHARACTERISTIC\r\n      /begin VAR_CHARACTERISTIC NLLM\r\n        Gear Car \r\n        /begin VAR_ADDRESS\r\n          0x8840\r\n          0x8858\r\n          0x8870\r\n          0x8888\r\n        /end VAR_ADDRESS\r\n      /end VAR_CHARACTERISTIC\r\n      VAR_NAMING NUMERIC\r\n      VAR_SEPARATOR \".\"\r\n    /end VARIANT_CODING\r\n\r\n  /end MODULE\r\n/end PROJECT\r\n\r\n")
